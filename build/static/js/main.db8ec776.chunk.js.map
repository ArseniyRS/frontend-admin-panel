{"version":3,"sources":["components/Sidebar/SidebarItem.jsx","components/Sidebar/sideBarConfig.js","assets/img/logoSVG.svg","assets/icons/add.svg","assets/icons/delete.svg","assets/icons/search.svg","assets/icons/removeItem.svg","assets/icons/url.svg","assets/icons/whatsapp-icon.svg","assets/icons/telegram.svg","assets/icons/facebook.svg","assets/icons/instagram.svg","assets/icons/deleteImage.svg","assets/icons/plus.svg","assets/icons/refresh.svg","assets/icons/userStat.svg","assets/icons/specStat.svg","assets/icons/companyStat.svg","components/Sidebar/SidebarList.jsx","configs/Categories/tableColumnsConfig.js","components/Fields/ArrayField/ArrayField.js","components/Fields/RadioGroup/RadioGroup.jsx","components/Fields/ImgUploader/ImgUploader.jsx","components/Fields/URLField/URLField.jsx","components/Fields/FieldWithIcon/FieldWithIcon.jsx","components/Fields/MapBlock/MapBlock.jsx","components/Fields/ScheduleField/ScheduleField.jsx","components/FormGenerator/FormInput.jsx","redux/reducers/types.js","redux/reducers/modalReducer.jsx","components/Btns/EditBtn.jsx","components/Btns/CancelBtn.jsx","components/FormGenerator/Former.jsx","components/FormGenerator/validationGenerator.js","components/FormGenerator/FormContainer.jsx","redux/reducers/tableReducer.js","components/Table/TableContainer.jsx","components/Btns/AddBtn.jsx","components/Btns/DeleteBtn.jsx","components/SearchGenerator/SearchInputs.jsx","components/SearchGenerator/SearchForm.jsx","components/SearchGenerator/SearchContainer.jsx","components/PageRenderer/PageRendererContainer.jsx","configs/Categories/formInputsConfig.js","utils/Requests.js","utils/templates/getTemplate.jsx","utils/templates/createOrChangeTemplate.js","utils/templates/deleteTemplate.js","utils/templates/updateItemInStore.js","redux/reducers/userReducer.js","redux/reducers/authReducer.js","redux/reducers/categoryReducer.js","pages/CategoriesPage/CategoriesPage.jsx","components/Modals/Modal.jsx","configs/Users/formInputsConfig.js","configs/Users/tableColumnsConfig.js","redux/reducers/mainReducer.js","pages/Users/Users.js","configs/Advertisements/formInputsConfig.js","configs/Advertisements/tableColumnsConfig.js","redux/reducers/specialistReducer.js","pages/AdvertisementPage/AdvertisementPage.js","pages/TestPage/TestPage.jsx","components/Fields/PasswordInput/PasswordInput.jsx","components/Auth/AuthForm.js","components/Auth/AuthContainer.js","assets/img/authBg.jpg","pages/AuthPage/AuthPage.js","components/Statisctic/StatisticBlock.js","utils/toBeautifyValue.js","configs/Main/tableColumnsConfig.js","pages/MainPage/MainPage.js","App.js","components/Auth/tokensChecker.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["withRouter","to","name","history","id","useState","clicked","setClick","useEffect","location","pathname","indexOf","classes","classNames","className","onClick","sideBarConfig","props","elements","map","item","index","src","logoSVG","alt","CategoryColumns","title","dataIndex","key","render","value","style","color","format","ArrayField","arrayHelpers","placeholder","labelObject","form","values","obj","length","result","k","labelKey","push","htmlFor","remove","removeItemSVG","insert","plusSVG","console","log","RadioGroup","label","type","ImgUploader","setFieldValue","imageCount","file","setFile","multiple","onChange","fileList","maxNumber","dataURLKey","onImageUpload","onImageRemoveAll","onImageUpdate","onImageRemove","isDragging","dragProps","borderColor","undefined","data_url","image","deleteImageSVG","URLField","urlSVG","FieldWithIcon","iconInput","e","target","MapBlock","setCenter","ymaps","React","useRef","placemarkRef","mapRef","address","setAddress","readOnly","enterprise","query","apikey","modules","instanceRef","onLoad","ympasInstance","current","coords","get","geometry","setCoordinates","Placemark","iconCaption","preset","draggable","createPlacemark","geoObjects","add","properties","set","geocode","then","res","firstGeoObject","getAddressLine","balloonContent","getAddress","defaultState","center","zoom","width","height","position","ScheduleField","daysArray","i","comSpecID","fromHour","fromMinute","toHour","toMinute","day","FormInput","styles","selectInputData","selectorProperty","additionally","radioLabel","required","options","as","fullName","field","TOGGLE_MODAL","TOGGLE_AUTH","TOGGLE_FETCH_LOADER","TOGGLE_PAGE_LOADER","WRITE_AUTH_MESSAGE","WRITE_USERNAME","WRITE_CATEGORIES","WRITE_SUBCATEGORIES","WRITE_CATEGORY_BY_ID","ADDED_CATEGORY","DELETED_CATEGORY","UPDATED_CATEGORY","WRITE_SPECIALISTS","WRITE_SPECIALIST_BY_ID","ADDED_SPECIALIST","DELETED_SPECIALIST","UPDATED_SPECIALIST","WRITE_RECORD_ID","WRITE_ELEMENTS_TO_DELETE","WRITE_TABLE_MESSAGE","WRITE_STATISTIC","WRITE_LAST_ACTIONS","WRITE_CITIES","WRITE_USERS","WRITE_USER_BY_ID","DELETED_USER","initialState","isOpenModal","isOpen","confirmFunc","urlToTable","toggleModal","payload","connect","disabled","a","Former","inputs","Object","keys","initialVals","inputConfig","optionsForSelector","schema","config","dataType","Yup","min","max","nullable","validationGenerator","formTitle","initialValues","validationSchema","onSubmit","handleSubmit","errors","createReq","updReq","match","isLoading","loadSelectorData","params","getByIdFunc","valueById","recordViewId","elementsToDelete","tableMessage","writeTableMessage","str","writeElementsToDelete","state","table","editing","getDataFunc","rowSelection","selectedRowKeys","selectedRows","onRow","record","rowIndex","event","urlToUpd","onDoubleClick","onContextMenu","onMouseEnter","onMouseLeave","deleting","tableLayout","pagination","columns","dataSource","data","AddBtn","urlToCreate","addSVG","deleteFunc","confirmHandler","deleteSVG","SearchInput","searchSVG","SearchForm","searchInputsConfig","SearchContainer","auth","isFetchLoader","username","pageUrl","pageTitle","tableData","tableColumnsConfig","creatorTitle","recordViewTitlesConfig","updaterTitle","formInputsConfig","optionsForSelectorData","creatorInitialFormValues","updaterInitialFormValues","fileUploadKeys","createFunc","updateFunc","clearFunc","adding","href","exact","path","categoryInputConfig","tokenGetter","headers","localStorage","getItem","instance","axios","baseURL","authReq","post","statisticGetReq","response","lastActionsGetReq","citiesGetReq","categoryGetReq","subcategoryGetReq","categoryGetByIdReq","categoryPostReq","categoryDelReq","delete","categoryUpdReq","put","specialistGetReq","specialistGetByIdReq","specialistPostReq","JSON","parse","specialistDelReq","specialistUpdReq","usersGetReq","userGetByIdReq","userDelByIdReq","userUpdReq","getTemplate","dispatch","getFunc","actionType","toggleLoader","changedResponse","Array","isArray","createOrChangeTemplate","func","resp","copyData","catch","err","deleteTemplate","updateItemInStore","idx","newArrayData","mapItem","findIndex","parseInt","slice","users","userById","isAuthorized","isPageLoader","authErrorMessage","toggleAuth","bool","categories","categoryById","subcategories","category","getCategory","getCategoryById","createCategory","updateCategory","deleteCategory","clearCategory","modal","userInputConfig","marginTop","UserColumns","background","borderRadius","padding","statistic","lastActions","cities","getCities","user","main","getUsers","getUserById","deleteUser","updateUser","cityID","avatarPath","surname","patronymic","birthDate","gender","phoneNumber","instagram","email","password","repeatPassword","role","advertisementInputConfig","whatsappSVG","telegramSVG","instagramSVG","facebookSVG","cost","AdvertisementColumns","specialists","specialistById","specialist","getSpecialists","getSpecialistById","createSpecialist","updateSpecialist","deleteSpecialist","getSubCategories","subcategory","url","equipage","street","addressComment","phone","webSite","whatsApp","telegram","facebook","modes","description","photos","services","subcategoryID","TestPage","PasswordInput","visiblePassword","setVisiblePassword","AuthForm","submitHandler","authSignIn","setItem","token","togglePageLoader","AuthPage","backgroundImage","bgIMG","getStatistic","img","refreshSVG","toBeautifyValue","LastActionsColumns","newValue","split","getActions","userStatSVG","user_count","specStatSVG","spec_count","companyStatSVG","comp_count","marginBottom","writeProfile","component","UsersPage","AdvertisementPage","CategoriesPage","MainPage","rootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById"],"mappings":"okBA8BeA,eAzBK,SAAC,GAKhB,IALiBC,EAKlB,EALkBA,GAAGC,EAKrB,EALqBA,KAGAC,GAErB,EAHqBC,GAGrB,EAFqBD,SAErB,+CAC2BE,oBAAS,IADpC,mBACOC,EADP,KACeC,EADf,KAGAC,qBAAU,WACN,OAFmBL,EAAQM,SAASC,SAASC,QAAQV,IAAO,EAGjDM,GAAS,GAEbA,GAAS,KAGlB,CAACJ,EAAQM,SAASC,WACpB,IAAME,EAAUC,IAAW,CACvB,eAAmBP,EACnB,qBAAyBA,IAE7B,OACI,oBAAIQ,UAAWF,EAAf,SAAyB,cAAC,IAAD,CAAMG,QAAS,kBAAIR,GAAS,IAAON,GAAIA,EAAvC,SAA6CC,SCxBjEc,EAAgB,CACzB,CACIf,GAAI,QACJC,KAAM,8CAGV,CACID,GAAI,kBACJC,KAAM,yIAGV,CACID,GAAI,SACJC,KAAM,4EAGV,CACID,GAAI,cACJC,KAAM,0DAGV,CACID,GAAI,YACJC,KAAM,mFAEV,CACID,GAAI,YACJC,KAAM,wCAGV,CACID,GAAI,cACJC,KAAM,wCAGV,CACID,GAAI,YACJC,KAAM,2DAGV,CACID,GAAI,mBACJC,KAAM,uEAGV,CACID,GAAI,SACJC,KAAM,8CAIV,CACID,GAAI,gBACJC,KAAM,iECvDC,MAA0B,oCCA1B,MAA0B,gCCA1B,MAA0B,mCCA1B,MAA0B,mCCA1B,MAA0B,uCCA1B,MAA0B,gCCA1B,MAA0B,0CCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,sCCA1B,MAA0B,wCCA1B,MAA0B,iCCA1B,MAA0B,oCCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,wCCiC1BF,eA1BM,SAACiB,GAElB,IAAMC,EAAWF,EAAcG,KAAI,SAACC,EAAKC,GACrC,OACI,cAAC,EAAD,CAEIjB,GAAIiB,EACJpB,GAAImB,EAAKnB,GAETC,KAAMkB,EAAKlB,MAJNmB,MASjB,OACI,sBAAKP,UAAU,qBAAf,UACI,qBAAKA,UAAU,0BAAf,SACA,cAAC,IAAD,CAAMb,GAAI,IAAV,SAAe,qBAAMa,UAAU,gBAAgBQ,IAAKC,EAASC,IAAI,SAEjE,oBAAIV,UAAU,UAAd,SACKI,U,yBCxBJO,EAAkB,CAC3B,CACEC,MAAM,KACNC,UAAW,MACXC,IAAI,MACFC,OAAQ,SAACC,GAAD,OAAS,sBAAMC,MAAO,CAACC,MAAO,WAArB,SAAkCF,MAEvD,CACIJ,MAAO,mDACPC,UAAW,OACXC,IAAK,QAET,CACIF,MAAO,4EACPC,UAAW,YACXC,IAAK,YACLC,OAAQ,SAACC,GAAD,OAAU,cAAC,IAAD,CAAQG,OAAO,aAAf,SAA8BH,O,+CCwDzCI,G,OAnEI,SAAC,GAA+C,IAAD,EAA7CC,EAA6C,EAA7CA,aAAaC,EAAgC,EAAhCA,YAAYlC,EAAoB,EAApBA,KAAKmC,EAAe,EAAfA,YAAe,EACzChC,mBAAS8B,EAAaG,KAAKC,OAAOrC,GAAQiC,EAAaG,KAAKC,OAAOrC,GAAM,GAAI,IADpC,mBACvDsC,EADuD,UAE9D,OACI,sBAAK1B,UAAW,wBAAhB,UACKqB,EAAaG,KAAKC,OAAOrC,IAC1BiC,EAAaG,KAAKC,OAAOrC,GAAMuC,OAAS,GACpCN,EAAaG,KAAKC,OAAOrC,GAAMiB,KAAI,SAACC,EAAMC,GACtC,IAAIqB,EAAQ,GACZ,GAAkB,kBAARtB,EAAiB,CACvB,IAAK,IAAIuB,KAAKvB,EAAM,CAChB,IAAK,IAAIwB,KAAYP,EACdO,IAAWD,GACVD,EAAOG,KACH,sBAAmC/B,UAAW,mBAA9C,UACI,uBAAOgC,QAAO,UAAK5C,EAAL,YAAa,CAACmB,GAAd,YAAwB,CAACsB,IAAvC,SAA8CN,EAAYO,KAC1D,cAAC,IAAD,CAAO1C,KAAI,UAAKA,EAAL,YAAa,CAACmB,GAAd,YAAwB,CAACsB,MACnCtB,IAAWc,EAAaG,KAAKC,OAAOrC,GAAMuC,OAAS,GAChD,qCACA,qBACA3B,UAAW,4BACXC,QAAS,kBAAMoB,EAAaY,OAAO1B,IAFnC,SAIA,qBAAKC,IAAK0B,EAAexB,IAAI,OAE7B,qBACAV,UAAW,0BACXC,QAAS,kBAAMoB,EAAac,OAAO5B,EAAM,EAAEmB,IAF3C,SAIA,qBAAKlB,IAAK4B,EAAS1B,IAAI,YAf/B,UAAatB,EAAb,YAAqBmB,EAArB,YAA8BsB,KAsB1CQ,QAAQC,IAAKjB,EAAaG,KAAKC,OAAOrC,GAAMuC,QAEhD,OAAOC,EAEX,OAEI,sBAA8B5B,UAAW,mBAAzC,UACI,cAAC,IAAD,CAAOZ,KAAI,UAAKA,EAAL,YAAamB,KACxB,qBACIP,UAAW,4BACXC,QAAS,kBAAMoB,EAAaY,OAAO1B,IAFvC,SAII,qBAAKC,IAAK0B,EAAexB,IAAI,OAEjC,qBACIV,UAAW,0BACXC,QAAS,kBAAMoB,EAAac,OAAO5B,EAAM,EAAEmB,IAF/C,SAII,qBAAKlB,IAAK4B,EAAS1B,IAAI,SAZ/B,UAAatB,EAAb,YAAqBmB,OAkBW,KAA1C,UAAAc,EAAaG,KAAKC,OAAOrC,UAAzB,eAAgCuC,SAClC,qBAAK3B,UAAW,yBAA0BC,QAAS,kBAAMoB,EAAaU,KAAKL,IAA3E,SACKJ,SC5CFiB,EAnBI,SAAApC,GAEf,IAAMC,EAAWD,EAAMqC,MAAMnC,KAAI,SAACC,EAAKC,GACnC,OACI,kCACI,cAAC,IAAD,CAAOkC,KAAK,QAAQrD,KAAMe,EAAMf,KAAM4B,MAAK,UAAKT,KAC/CJ,EAAMqC,MAAMjC,KAFLA,MAQpB,OACI,qBAAKP,UAAW,oBAAhB,SACKI,K,2BC4IEsC,EAzJK,SAAC,GAAuD,IAAtDC,EAAqD,EAArDA,cAAcvD,EAAuC,EAAvCA,KAAuC,KAAlC4B,MAAkC,EAA5BM,YAA4B,EAAhBsB,mBAAgB,MAAL,EAAK,IAChDrD,mBAAS,IADuC,mBAChEsD,EADgE,KAC3DC,EAD2D,KAGvEpD,qBAAU,WACNiD,EAAcvD,EAAKyD,KACrB,CAACA,IAOC,OADJR,QAAQC,IAAIO,GAGJ,cAAC,IAAD,CACIE,UAAQ,EACR/B,MAAO6B,EACPG,SAVK,SAACC,GACdH,EAAQG,IAUAC,UAAWN,EACXO,WAAW,WALf,SAOK,kBACKC,EADL,EACKA,cACAC,EAFL,EAEKA,iBACAC,EAHL,EAGKA,cACAC,EAJL,EAIKA,cACAC,EALL,EAKKA,WACAC,EANL,EAMKA,UANL,OAQ0B,IAAbb,EACF,sBAAK5C,UAAU,wBAAf,UACmB,IAAd6C,EAAKlB,QAAc,6CAChB3B,UAAW,0BACXiB,MAAOuC,EAAa,CAACE,YAAa,gBAAaC,EAC/C1D,QAASmD,GACLK,GAJY,qKASL,IAAdZ,EAAKlB,QACN,sBAAK3B,UAAW,0BAAhB,UAEI,qBAAKA,UAAU,qBAAf,SACI,qBAAKQ,IAAG,UAAEqC,EAAK,UAAP,aAAE,EAASe,SAAUlD,IAAI,OAErC,sBAAMV,UAAU,qBAAqBC,QAAS,kBAAMqD,EAAc,IAAlE,kIACI,sBAAMtD,UAAU,qBAAqBC,QAAS,kBAAMsD,EAAc,IAAlE,kIAOpB,sBAAKvD,UAAU,6BAAf,UACI,8CACIA,UAAW,yCACXiB,MAAOuC,EAAa,CAAEE,YAAa,gBAAcC,EACjD1D,QAASmD,GACLK,GAJR,2PAQI,qBAAMzD,UAAW,+BAAjB,2FAEJ,qBAAKA,UAAW,+BAAhB,SAEQ6C,EAAKxC,KAAI,SAACwD,EAAOtD,GAAR,OACL,sBAAiBP,UAAU,0BAA3B,UACI,qBAAKQ,IAAKqD,EAAK,SAAeA,EAAK,SAAeA,EAAOnD,IAAI,KAC7D,qBAAKV,UAAU,+BAAf,SAEI,+BAAM,qBAAKQ,IAAKsD,EAAgB7D,QAAS,kBAAMsD,EAAchD,YAJ3DA,QAUP,IAAdsC,EAAKlB,QAAc,qBAAK3B,UAAW,8BAA+BC,QAASoD,EAAxD,iHC1E7BU,EANE,SAAA5D,GACb,OACI,sBAAKH,UAAW,WAAhB,UAA4B,cAAC,IAAD,CAAOZ,KAAMe,EAAMf,KAAMkC,YAAanB,EAAMmB,cAAc,qBAAKd,IAAKwD,EAAQtD,IAAI,SCMrGuD,G,OATO,SAAA9D,GAClB,OACI,uBAAMH,UAAW,gBAAjB,UACI,qBAAKQ,IAAKL,EAAM+D,UAAWxD,IAAI,KAC/B,uBAAO+B,KAAK,OAAOrD,KAAMe,EAAMf,KAAMkC,YAAanB,EAAMmB,YAAa0B,SAAU,SAACmB,GAAD,OAAKhE,EAAMwC,cAAcxC,EAAMf,KAAK+E,EAAEC,OAAOpD,e,SCwEzHqD,G,OAzEE,SAAAlE,GAAS,IAAD,EACOZ,mBAAS,CAAC,QAAS,UAD1B,mBACN+E,GADM,WAEfC,EAAQC,IAAMC,OAAO,MACrBC,EAAeF,IAAMC,OAAO,MAC5BE,EAASH,IAAMC,OAAO,MAJP,EAKSD,IAAMjF,SAAS,IALxB,mBAKdqF,EALc,KAKLC,EALK,KAmBrBnF,qBAAU,WACNS,EAAMwC,cAAcxC,EAAMf,KAAKwF,KACjC,CAACA,IA0BH,OACI,sBAAK5E,UAAW,WAAhB,UACI,uBAAOgC,QAAS7B,EAAMf,KAAtB,SAA6Be,EAAMmB,cACnC,uBAAOmB,KAAK,OAAOrD,KAAMe,EAAMf,KAAM4B,MAAO4D,EAASE,UAAQ,IAC7D,cAAC,IAAD,CAAOC,YAAU,EAACC,MAAO,CAACC,OAAQ,wCAAlC,SACI,qBAAKjF,UAAW,gBAAhB,SACA,cAAC,IAAD,CACIkF,QAAS,CAAC,YAAa,UAAW,2BAClCC,YAAaR,EACbS,OAAQ,SAACC,GAAD,OAAoBd,EAAMe,QAAUD,GAC5CpF,QAtBG,SAACkE,GAChB,IAAMoB,EAASpB,EAAEqB,IAAI,UAEjBd,EAAaY,QACbZ,EAAaY,QAAQG,SAASC,eAAeH,IAE7Cb,EAAaY,QAnCG,SAACC,GAErB,OAAO,IAAIhB,EAAMe,QAAQK,UACrBJ,EACA,CACIK,YAAa,iDAEjB,CACIC,OAAQ,mCACRC,WAAW,IA0BQC,CAAgBR,GACvCZ,EAAOW,QAAQU,WAAWC,IAAIvB,EAAaY,UApBhC,SAACC,GAChBjB,EAAUiB,GACVb,EAAaY,QAAQY,WAAWC,IAAI,cAAe,iDACnD5B,EAAMe,QAAQc,QAAQb,GAAQc,MAAK,SAACC,GAChC,IAAMC,EAAiBD,EAAIN,WAAWR,IAAI,GAC1CX,EAAW0B,EAAeC,kBAC1B9B,EAAaY,QAAQY,WAAWC,IAAI,CAChCP,YAAaW,EAAeC,iBAC5BC,eAAgBF,EAAeC,sBAcvCE,CAAWnB,IAcCoB,aAAc,CACVC,OAAQ,CAAC,QAAS,SAClBC,KAAM,IAEV5F,MAAO,CAAC6F,MAAM,OAAOC,OAAO,OAAOC,SAAS,uBC5BjDC,G,OApCO,SAAA9G,GAClB,IAAM+G,EAAY,CAAC,qEAAc,6CAAU,iCAAQ,6CAAU,6CAAW,6CAAW,sEAanF,OAZA7E,QAAQC,IAAInC,EAAMkB,aAAaG,KAAKC,OAAOtB,EAAMf,OACjDM,qBAAU,WACN,IAAK,IAAIyH,EAAE,EAAEA,EAAE,EAAEA,IACbhH,EAAMkB,aAAaU,KAAK,CAACqF,UAAW,GAChCC,SAAS,GACTC,WAAY,GACZC,OAAO,GACPC,SAAS,GACTC,IAAI,OAEd,IAGE,8BAEQtH,EAAMkB,aAAaG,KAAKC,OAAOtB,EAAMf,MAAMiB,KAAI,SAACC,EAAMC,GAElD,OACI,sBAAiBP,UAAW,gBAA5B,UACI,cAAC,IAAD,CAAOyC,KAAK,WAAWrD,KAAI,UAAKe,EAAMf,KAAX,YAAmB,CAACmB,GAApB,WAAqCS,MAAOT,IACvE,+BAAO2G,EAAU3G,KACjB,sBAAKP,UAAW,WAAhB,UAA4B,cAAC,IAAD,CAAOZ,KAAI,UAAKe,EAAMf,KAAX,YAAmB,CAACmB,GAApB,gBAA0CkC,KAAK,SAAtF,IAA+F,cAAC,IAAD,CAAOrD,KAAI,UAAKe,EAAMf,KAAX,YAAmB,CAACmB,GAApB,kBAA4CkC,KAAK,SAA3J,OAHJ,IAKI,sBAAKzC,UAAW,SAAhB,UAA2B,cAAC,IAAD,CAAOZ,KAAI,UAAKe,EAAMf,KAAX,YAAmB,CAACmB,GAApB,cAAwCkC,KAAK,SAAnF,IAA4F,cAAC,IAAD,CAAOrD,KAAI,UAAKe,EAAMf,KAAX,YAAmB,CAACmB,GAApB,gBAA2CkC,KAAK,SAAvJ,SALMlC,UC6EnBmH,EA1FG,SAAC,GAeK,IAdRtI,EAcO,EAdPA,KACAoD,EAaO,EAbPA,MACAjB,EAYO,EAZPA,YACAD,EAWO,EAXPA,YAWO,IAVPmB,YAUO,MAVF,GAUE,EATPG,EASO,EATPA,WACA+E,EAQO,EARPA,OAQO,KAPRC,gBAOQ,EANRC,yBAMQ,MANS,GAMT,EALRC,EAKQ,EALRA,aACC5D,EAIO,EAJPA,UACD6D,EAGQ,EAHRA,WACAC,EAEQ,EAFRA,SAEQ,IADRC,eACQ,MADA,GACA,EACnB,OACI,sBAAKjI,UAAU,oBAAoBiB,MAAO0G,QAAkBhE,EAA5D,UACKmE,GAAkB,sBAAM9H,UAAW,YAAjB,SAA+B8H,IAClD,wBAAO9F,QAAS5C,EAAhB,UAAuBoD,EAAvB,IAA+BwF,GAAY,sBAAMhI,UAAW,iBAAjB,kBAKhC,UAATyC,EACM,cAAC,IAAD,CACArD,KAAMA,EADN,SAEM,SAACiC,GAAD,OAAkB,cAAC,EAAD,CAChBC,YAAaA,EACblC,KAAMA,EACNiC,aAAcA,EACdE,YAAaA,OAIlB,UAATkB,EACM,cAAC,EAAD,CAAYrD,KAAMA,EAAMoD,MAAOuF,IAE1B,aAAPtF,EACF,cAAC,IAAD,CAAOrD,KAAMA,EAAM8I,GAAI,SAAU5G,YAAaA,EAA9C,SAEC2G,EAAQJ,GAAkBxH,KAAI,SAAAC,GAC3B,OACI,wBAAsBU,MAAOV,EAAKhB,GAAlC,UAA2C,OAAJgB,QAAI,IAAJA,OAAA,EAAAA,EAAMlB,MAAOkB,EAAKlB,KAAOkB,EAAK6H,UAAxD7H,EAAKhB,SAIjB,UAAPmD,EACF,cAAC,IAAD,CAAOrD,KAAMA,EAAb,SACC,oBAAEgJ,MAAOhJ,EAAT,EAASA,KAAK4B,EAAd,EAAcA,MAAe2B,EAA7B,EAAqBnB,KAAQmB,cAA7B,OAAgD,cAAC,EAAD,CAAaA,cAAeA,EACfrB,YAAaA,EACbsB,WAAYA,EACZ5B,MAAOA,EACP5B,KAAMA,OAE3D,QAAPqD,EACc,cAAC,EAAD,CAAUrD,KAAMA,EAAMkC,YAAaA,IACzC,aAARmB,EACF,cAAC,IAAD,CAAOrD,KAAMA,EAAb,SACK,gBAASA,EAAT,EAAEgJ,MAAOhJ,KAAcuD,EAAvB,EAAenB,KAAQmB,cAAvB,OAA0C,cAAC,EAAD,CAAeA,cAAeA,EACfuB,UAAWA,EACP9E,KAAMA,OAEhE,QAAPqD,EACD,cAAC,IAAD,CAAOrD,KAAMA,EAAb,SACK,gBAASA,EAAT,EAAEgJ,MAAOhJ,KAAcuD,EAAvB,EAAenB,KAAQmB,cAAvB,OAA2C,cAAC,EAAD,CAAUA,cAAeA,EACfrB,YAAaA,EACblC,KAAMA,OAGxD,aAAPqD,EACD,cAAC,IAAD,CACIrD,KAAMA,EADV,SAEK,SAACiC,GAAD,OACG,cAAC,EAAD,CACIC,YAAaA,EACblC,KAAMA,EACNiC,aAAcA,OAK1B,cAAC,IAAD,CAAOjC,KAAMA,EAAMkC,YAAaA,IAGpC,sBAAOtB,UAAU,mBAAjB,SAAoC,cAAC,IAAD,CAAcZ,KAAMA,UCjGvDiJ,GAAe,eAEfC,GAAa,cACbC,GAAsB,sBACtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAiB,iBAGjBC,GAAmB,mBACnBC,GAAsB,sBACtBC,GAAuB,uBACvBC,GAAiB,iBACjBC,GAAmB,mBACnBC,GAAmB,mBAGnBC,GAAoB,mBACpBC,GAAyB,uBACzBC,GAAmB,iBACnBC,GAAqB,mBACrBC,GAAqB,mBAGrBC,GAAkB,kBAClBC,GAA2B,2BAC3BC,GAAsB,sBAGtBC,GAAkB,kBAClBC,GAAqB,qBACrBC,GAAe,eAGfC,GAAc,cACdC,GAAmB,mBAEnBC,GAAe,eCnCtBC,GAAa,CACfC,YAAa,CACTC,QAAO,EACPrJ,MAAM,GACNsJ,iBAAavG,EACbwG,WAAa,KAsBRC,GAAc,SAAA1I,GACvB,MAAM,CACFe,KAAO4F,GACPgC,QAAS3I,ICLjB4I,eAAQ,KAAK,CAACF,gBAAdE,EArBgB,SAAC,GAA8D,IAA7DF,EAA4D,EAA5DA,YAAYF,EAAgD,EAAhDA,YAAgD,IAApCC,kBAAoC,MAAzB,OAAyB,MAAlBI,gBAAkB,SAC1E,OACI,qBAAKvK,UAAU,yBACVC,QAAO,sBAAE,sBAAAuK,EAAA,yDACDD,EADC,yCAEMH,EACH,CAAIH,QAAO,EACPrJ,MAAM,kPACNsJ,YAAaA,EACbC,WAAYA,KANnB,gCAUED,KAVF,2CADd,uECgBRI,eAAQ,KAAK,CAACF,gBAAdE,EAjBkB,SAAC,GAA4B,IAA3BF,EAA0B,EAA1BA,YAAYD,EAAc,EAAdA,WAC5B,OACI,qBAAKnK,UAAU,yBACPC,QAAS,kBAAImK,EAAY,CACrBH,QAAO,EACPrJ,MAAM,6OAENuJ,WAAYA,KALxB,qDCoEOM,GAlEA,SAACtK,GACZ,IAAMuK,EAASC,OAAOC,KAAKzK,EAAM0K,aAAaxK,KAAI,SAACC,EAAKC,GAAS,IAAD,wBAC5D,OACI,cAAC,EAAD,CAEInB,KAAMkB,EACNgB,YAAW,UAAEnB,EAAM2K,YAAYvK,UAApB,aAAE,EAA0Be,YACvCkB,MAAK,UAAErC,EAAM2K,YAAYvK,UAApB,aAAE,EAA0BiC,MACjCjB,YAAW,UAAEpB,EAAM2K,YAAYvK,UAApB,aAAE,EAA0BgB,YACvCwG,WAAU,UAAE5H,EAAM2K,YAAYvK,UAApB,aAAE,EAA0BwH,WACtCtF,KAAI,UAAEtC,EAAM2K,YAAYvK,UAApB,aAAE,EAA0BkC,KAChCG,WAAU,UAAEzC,EAAM2K,YAAYvK,UAApB,aAAE,EAA0BqC,WACtCkF,aAAY,UAAG3H,EAAM2K,YAAYvK,UAArB,aAAG,EAA0BuH,aACzC5D,UAAS,UAAG/D,EAAM2K,YAAYvK,UAArB,aAAG,EAA0B2D,UACtC8D,SAAQ,UAAE7H,EAAM2K,YAAYvK,UAApB,aAAE,EAA0ByH,SACpCJ,gBAAe,UAAEzH,EAAM2K,YAAYvK,UAApB,aAAE,EAA0BqH,gBAC3CK,QAAS9H,EAAM4K,mBACflD,iBAAgB,UAAE1H,EAAM2K,YAAYvK,UAApB,aAAE,EAA0BsH,iBAC5CF,OAAM,UAAExH,EAAM2K,YAAYvK,UAApB,aAAE,EAA0BoH,QAd7BrH,MAoBX0K,ECjCyB,SAAClK,EAAKmK,GACrC,IAAID,EAAS,GAiCb,OAhCAlK,EAAIT,KAAI,SAACC,EAAKC,GAAU,IAAD,UACnB,aAAG0K,EAAO1K,UAAV,aAAG,EAAe2K,SACd,OAAQD,EAAO1K,GAAO2K,UAClB,IAAK,SACDF,EAAO1K,GAAQ6K,MACf,MACJ,IAAK,QACDH,EAAO1K,GAAQ6K,MACf,MACJ,QACIH,EAAO1K,GAAQ6K,WAInBH,EAAO1K,GAAQ6K,OAKvB,UAAGF,EAAO1K,UAAV,aAAG,EAAeyH,YACdgD,EAAO1K,GAAS0K,EAAO1K,GAAM0H,SAASiD,EAAO1K,GAAOyH,YAExD,UAAGiD,EAAO1K,UAAV,aAAG,EAAe6K,OACdJ,EAAO1K,GAAS0K,EAAO1K,GAAM8K,IAAIH,EAAO1K,GAAO6K,OAEnD,UAAGH,EAAO1K,UAAV,aAAG,EAAe8K,OACdL,EAAO1K,GAAS0K,EAAO1K,GAAM8K,IAAIH,EAAO1K,GAAO8K,OAEnD,UAAGJ,EAAO1K,UAAV,aAAG,EAAe+K,YACdN,EAAO1K,GAAS0K,EAAO1K,GAAMgL,SAASL,EAAO1K,GAAO+K,cAGrDN,EDDQO,CADFZ,OAAOC,KAAKzK,EAAM0K,aACU1K,EAAM2K,aAC/C,OACI,qCACA,qBAAK9K,UAAW,+BAAhB,SACI,6BAAKG,EAAMqL,cAEf,qBAAKxL,UAAU,wBAAf,SAEI,cAAC,IAAD,CACIyL,cAAetL,EAAM0K,YACrBa,iBAAkBP,IAAWH,GAC7BW,SAAQ,uCAAG,WAAOlK,EAAO0C,GAAd,SAAAqG,EAAA,sEACDrK,EAAMyL,aAAanK,GADlB,2CAAH,wDAHZ,SAOK,YAAkC,IAAhCmK,EAA+B,EAA/BA,aAAaC,EAAkB,EAAlBA,OAAOpK,EAAW,EAAXA,OACnB,OACI,eAAC,IAAD,WACI,qBAAKzB,UAAW,gCAAhB,SACK0K,IAGL,sBAAK1K,UAAW,8BAAhB,UACI,cAAC,GAAD,CACIyB,OAAUA,EACV0I,WAAYhK,EAAMgK,WAClBD,YAAa0B,EACbrB,SAAyC,IAA/BI,OAAOC,KAAKiB,GAAQlK,SAAgB,IAGlD,cAAC,GAAD,CACIwI,WAAYhK,EAAMgK,4BExBvCjL,I,OAAAA,aArCO,SAAC,GAKiB,IAAD,EAJZ4M,EAIY,EAJZA,UACAC,EAGY,EAHZA,OACAC,EAEY,EAFZA,MACAC,EACY,EADZA,UACG9L,EAAS,0DACnCT,qBAAU,WAAK,IAAD,EACV,GAAGS,EAAM+L,iBACL,IAAI,IAAI/E,EAAE,EAAEA,EAAEhH,EAAM+L,iBAAiBvK,OAAOwF,IACxChH,EAAM+L,iBAAiB/E,MAG/B,UAAG6E,EAAMG,cAAT,aAAG,EAAc7M,KACba,EAAMiM,YAAYJ,EAAMG,OAAO7M,MAErC,IAEF,IAAMsM,EAAY,uCAAG,WAAMnK,GAAN,eAAA+I,EAAA,yDACjBnI,QAAQC,IAAIb,KADK,UAEduK,EAAMG,cAFQ,aAEd,EAAc7M,IAFA,gCAGPyM,EAAOC,EAAMG,OAAO7M,GAAGmC,GAHhB,6CAKNqK,EAAUrK,GALJ,2CAAH,sDAWlB,OACKwK,GAAa9L,EAAMkM,aAAe,UAACL,EAAMG,cAAP,aAAC,EAAc7M,IAE9C,cAAC,GAAD,aAAQsM,aAAcA,GAAmBzL,IACxC,6C,UCnCP4J,I,OAAa,CAChBuC,aAAa,GACZC,iBAAkB,GAClBC,aAAc,KA6BLC,GAAoB,SAAAC,GAC7B,MAAM,CACFjK,KAAM+G,GACNa,QAASqC,IAGJC,GAAwB,SAAAlL,GACjC,MAAM,CACFgB,KAAO8G,GACPc,QAAS5I,ICQF6I,gBANS,SAAAsC,GACpB,MAAM,CACFL,iBAAmBK,EAAMC,MAAMN,oBAIA,CAACI,yBAAsBF,sBAA/CnC,CAAmEpL,aA3C3D,SAAC,GAA2B,IAAD,IAAzB4N,eAAyB,SAAT3M,EAAS,2BAC9CT,qBAAU,WAIN,OAHGS,EAAM4M,aACL5M,EAAM4M,cAEH,kBAAMJ,GAAsB,OACrC,IAGF,IAAMK,EAAe,CACjBhK,SAAU,SAACiK,EAAiBC,GAAlB,OAAmC/M,EAAMwM,sBAAsBM,KAQ7E,OACI,cAAC,KAAD,CACIE,MAAQ,SAACC,EAAQC,GACb,MAAO,CACPpN,QAAS,SAAAqN,GAAK,OAAGR,GAAW3M,EAAMd,QAAQ0C,KAAd,UAAsB5B,EAAMoN,SAA5B,YAAwCH,EAAOtM,OAC3E0M,cAAe,SAAAF,KACfG,cAAe,SAAAH,KACfI,aAAc,SAAAJ,KACdK,aAAc,SAAAL,OAGlBN,aAAc7M,EAAMyN,SAAN,eAAsBZ,QAAiBrJ,EACrDkK,YAAa,QACbC,WAAY,CAAE9G,SAAS,gBACvB+G,QAAS5N,EAAM4N,QACfC,WAAc7N,EAAM8N,WC/BjBC,I,OALA,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,YACb,OACI,eAAC,IAAD,CAAMhP,GAAIgP,EAAanO,UAAU,SAAjC,UAA0C,qBAAKQ,IAAK4N,EAAQ1N,IAAI,KAAhE,wDC0BR4J,gBANwB,SAAAsC,GACpB,MAAM,CACFL,iBAAmBK,EAAMC,MAAMN,oBAIf,CAACnC,eAAYqC,sBAArCnC,EAxBkB,SAAC,GAA+D,IAA9DF,EAA6D,EAA7DA,YAAYiE,EAAiD,EAAjDA,WAAW9B,EAAsC,EAAtCA,iBAAiBE,EAAqB,EAArBA,kBAElD6B,EAAc,uCAAG,sBAAA9D,EAAA,sEACV6D,EAAW9B,GADD,2CAAH,qDAIpB,OACG,qBAAKvM,UAAW,YAAhB,SAA6B,qBAAMQ,IAAK+N,EAAW7N,IAAI,GACjDT,QAAS,WACX,OAA6B,IAA1BsM,EAAiB5K,OACZ8K,EAAkB,0JAEnBrC,EAAY,CAACH,QAAO,EAAKrJ,MAAM,6NAA8CsJ,YAAaoE,YCA7FE,GAjBK,SAAC,GAQE,EAPApP,KAOC,IALDkC,EAKA,EALAA,YAKA,EAJAmB,KAIA,EAHAmF,gBAGA,EAFAC,iBAEA,EADAI,QAEnB,OACI,sBAAKjI,UAAU,cAAf,UACI,uBAAOyC,KAAK,OAAOnB,YAAaA,IAChC,qBAAKd,IAAKiO,EAAW/N,IAAI,SCQtBgO,GAnBI,SAACvO,GAChB,IAAMC,EAAWD,EAAMwO,mBAAmBtO,KAAI,SAAAC,GAC1C,OACI,cAAC,GAAD,CACIgB,YAAW,OAAEhB,QAAF,IAAEA,OAAF,EAAEA,EAAMkC,MACnBC,KAAI,OAAEnC,QAAF,IAAEA,OAAF,EAAEA,EAAMmC,KACZmF,gBAAe,OAAEtH,QAAF,IAAEA,OAAF,EAAEA,EAAMsH,gBACvBK,QAAS9H,EAAM4K,mBACflD,iBAAgB,OAAEvH,QAAF,IAAEA,OAAF,EAAEA,EAAMuH,sBAIpC,OACI,qBAAK7H,UAAW,mBAAhB,SACKI,KCREwO,I,OAPS,SAAAzO,GAEpB,OACI,cAAC,GAAD,eAAgBA,MCwIpBmK,gBAPoB,SAAAsC,GACpB,MAAM,CACFX,UAAYW,EAAMiC,KAAKC,cACvBC,SAAUnC,EAAMiC,KAAKE,YAIzBzE,CAAyBpL,aA/HR,SAAC,GAoCI,EAnCtBG,QAmCuB,IAlCvB2P,EAkCsB,EAlCtBA,QACAC,EAiCsB,EAjCtBA,UAEAC,EA+BsB,EA/BtBA,UACAC,EA8BsB,EA9BtBA,mBAIAC,GA0BsB,EA5BtBC,uBA4BsB,EA1BtBD,cACAE,EAyBsB,EAzBtBA,aACAC,EAwBsB,EAxBtBA,iBACAZ,EAuBsB,EAvBtBA,mBACAzC,EAsBsB,EAtBtBA,iBACAsD,EAqBsB,EArBtBA,uBACAC,EAoBsB,EApBtBA,yBACAC,EAmBsB,EAnBtBA,yBACAC,EAkBsB,EAlBtBA,eAEA5C,EAgBsB,EAhBtBA,YACAV,EAesB,EAftBA,UACAD,EAcsB,EAdtBA,YACAwD,EAasB,EAbtBA,WACAC,EAYsB,EAZtBA,WAEAxB,GAUsB,EAXtByB,UAWsB,EAVtBzB,YAEApC,EAQsB,EARtBA,UAQsB,IALtB8D,cAKsB,aAJtBjD,eAIsB,aAHtBc,gBAGsB,SADtBmB,EACsB,EADtBA,SAGA,OACI,qCACI,mBAAGiB,KAAK,uBAAwB5L,OAAQ,SAAUpE,UAAY,0BAA9D,iFACA,sBAAKA,UAAY,wBAAjB,UAAyC,+BAAO+O,EAAS3P,OAAzD,IAAsE,qBAAMsB,IAAI,QAChF,eAAC,IAAD,WACY,eAAC,IAAD,CAAOuP,OAAK,EAACC,KAAI,WAAMlB,GAAvB,UAEI,sBAAMhP,UAAU,sBAAhB,SAAuCiP,IACvC,cAAC,GAAD,CACId,YAAW,WAAMa,EAAN,YAAiBA,EAAjB,cAEdL,GACD,cAAC,GAAD,CACIA,mBAAoBA,IAGxB,cAAC,GAAD,CACI1C,UAAWA,EACXc,YAAaA,EACbkB,KAAMiB,EACNnB,QAASoB,EACT5B,SAAQ,WAAMyB,EAAN,YAAiBA,EAAjB,YAGRpB,SAAUA,IAEbA,GACD,cAAC,GAAD,CACIS,WAAcA,OAGrB0B,GACD,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAI,WAAMlB,EAAN,YAAiBA,EAAjB,YAAjB,SACI,cAAC,GAAD,CACI9C,iBAAkBA,EAClB/B,WAAU,WAAM6E,GAChBlD,UAAW8D,EACXpE,UAAW4D,EACXtE,YAAayE,EACbxE,mBAAoByE,EACpB3E,YAAa4E,EACbE,eAAgBA,EAChB1D,UAAWA,MAIlBa,GACD,cAAC,IAAD,CAAOmD,OAAK,EAACC,KAAI,WAAMlB,EAAN,YAAiBA,EAAjB,gBAAjB,SACI,cAAC,GAAD,CACI9C,iBAAkBA,EAClBE,YAAaA,EACbC,UAAWA,EACXlC,WAAU,WAAM6E,GAChBnE,YAAa6E,EACb3D,OAAQ8D,EACRrE,UAAW8D,EACXxE,YAAayE,EACbxE,mBAAoByE,EACpBvD,UAAWA,gBChH9BkE,GAAsB,CAAC,CAChC3N,MAAO,yDACPlB,YAAa,0GACb0G,SAAU,sJAEV,CACIxF,MAAO,2EACPlB,YAAa,4HACbmB,KAAM,QACNyI,SAAU,QACV3J,YAAa,CAACnC,KAAM,M,mBCTtBgR,GAAc,WAAM,MAAO,CAAEC,QAAS,CAAC,+BAA4BC,aAAaC,QAAQ,aAC9FlO,QAAQC,IAAI8N,MACZ,IAAMI,GAAWC,UAAa,CAC1BC,QAAS,6BAGAC,GAAU,SAAC1C,GAAD,OAAQuC,GAASI,KAAK,eAAe3C,IAG/C4C,GAAkB,kBAAIL,GAAShL,IAAI,oBAAoB4K,MAAe/J,MAAK,SAAAyK,GAAQ,OAAEA,EAAS7C,SAC9F8C,GAAoB,kBAAIP,GAAShL,IAAI,iBAAiB4K,MAAe/J,MAAK,SAAAyK,GAAQ,OAAEA,EAAS7C,SAC7F+C,GAAe,kBAAIR,GAAShL,IAAI,gBAAgB4K,MAAe/J,MAAK,SAAAyK,GAAQ,OAAEA,EAAS7C,SAGvFgD,GAAiB,kBAAIT,GAAShL,IAAI,oBAAoB4K,MAAe/J,MAAK,SAAAyK,GAAQ,OAAEA,EAAS7C,SAC7FiD,GAAoB,kBAAIV,GAAShL,IAAI,uBAAuB4K,MAAe/J,MAAK,SAAAyK,GAAQ,OAAEA,EAAS7C,SACnGkD,GAAqB,SAAC7R,GAAD,OAAMkR,GAAShL,IAAT,4BAAkClG,GAAK8Q,MAAe/J,MAAK,SAAAyK,GAAQ,OAAEA,EAAS7C,SACzGmD,GAAkB,SAACnD,GAAD,OAAQuC,GAASI,KAAK,8BAA8B3C,EAAKmC,OAC3EiB,GAAiB,SAAC/R,GAAD,OAAMkR,GAASc,OAAT,kBAAkC,CAAEjB,QAAS,CAAC,+BAA4BC,aAAaC,QAAQ,WAAatC,KAAO3O,KAC1IiS,GAAiB,SAACtD,EAAK3O,GAAN,OAAWkR,GAASgB,IAAT,qBAA2BlS,GAAK2O,EAAKmC,OAIjEqB,GAAmB,kBAAIjB,GAAShL,IAAI,mBAAmB4K,MAAe/J,MAAK,SAAAyK,GAAQ,OAAEA,EAAS7C,SAC9FyD,GAAuB,SAACpS,GAAD,OAAMkR,GAAShL,IAAT,2BAAiClG,IAAM+G,MAAK,SAAAyK,GAAQ,OAAEA,EAAS7C,SAC5F0D,GAAoB,SAAC1D,GAAD,OAAQuC,GAASI,KAAK,+BAA+BgB,KAAKC,MAAM5D,GAAMmC,OAC1F0B,GAAmB,SAACxS,GAAD,OAAMkR,GAASc,OAAT,mBAAmC,CAAEjB,QAAS,CAAC,+BAA4BC,aAAaC,QAAQ,WAAatC,KAAO3O,KAC7IyS,GAAmB,SAAC9D,EAAK3O,GAAN,OAAWkR,GAASgB,IAAT,2BAAiClS,GAAK2O,IAEpE+D,GAAc,kBAAIxB,GAAShL,IAAI,eAAe4K,MAAe/J,MAAK,SAAAyK,GAAQ,OAAEA,EAAS7C,SACrFgE,GAAiB,SAAC3S,GAAD,OAAMkR,GAAShL,IAAT,uBAA6BlG,GAAK8Q,MAAe/J,MAAK,SAAAyK,GAAQ,OAAEA,EAAS7C,SAEhGiE,GAAiB,SAAC5S,GAAD,OAAMkR,GAASc,OAAT,eAA+B,CAAEjB,QAAS,CAAC,+BAA4BC,aAAaC,QAAQ,WAAatC,KAAO3O,KACvI6S,GAAa,SAAClE,EAAK3O,GAAN,OAAWkR,GAASgB,IAAT,uBAA6BlS,GAAK2O,EAAKmC,OClC/DgC,GAAW,uCAAG,WAAOC,EAASC,EAASC,EAAWC,GAApC,+BAAAhI,EAAA,6DAAiDlL,EAAjD,+BAAoD,KAC3E+S,EAASG,GAAa,IADC,SAEFF,EAAQhT,GAFN,OAEnBwR,EAFmB,OAGvBzO,QAAQC,IAAIwO,GACR2B,EAAiB,GAClBC,MAAMC,QAAN,OAAc7B,QAAd,IAAcA,OAAd,EAAcA,EAAU7C,OAASyE,MAAMC,QAAQ7B,GAE1C2B,GADJ,OAAI3B,QAAJ,IAAIA,OAAJ,EAAIA,EAAU7C,MACQ6C,EAAS7C,KAAK5N,KAAI,SAAAC,GAEhC,OADAA,EAAI,IAAUA,EAAKhB,GACZgB,KAGOwQ,EAASzQ,KAAI,SAAAC,GAE3B,OADAA,EAAI,IAAUA,EAAKhB,GACZgB,MAIfmS,EAAgB3B,GACD,IAAQA,EAASxR,GAEpC+C,QAAQC,IAAImQ,GACZJ,EAAS,CAAC5P,KAAK8P,EAAWlI,QAASoI,IACnCJ,EAASG,GAAa,IAvBC,4CAAH,4DCEXI,GAAsB,uCAAG,WAClCP,EACAQ,EACA5E,EACAsE,EACAC,GALkC,2BAAAhI,EAAA,6DAMlClL,EANkC,+BAM/B,GAGH+S,EAASG,GATyB,SAU5BK,EAAK5E,EAAK3O,GAAI+G,MAAK,SAAAyM,GACtB,IAAMC,EAAYD,EAAK7E,KACtB8E,EAAQ,IAAUA,EAASzT,UACpByT,EAASzT,GAChB+S,EAAS,CAAC5P,KAAK8P,EAAWlI,QAAQ0I,OACnCC,OAAM,SAAAC,GAAG,OAAE5Q,QAAQC,IAAI2Q,EAAInC,aAfI,OAgBlCuB,EAASG,GAhByB,2CAAH,8DCFtBU,GAAc,uCAAG,WAAOb,EAAShE,EAAW/O,EAAGkT,EAAaD,GAA3C,SAAA/H,EAAA,6DAC1B6H,EAASG,GAAa,IACtBH,EAAS,CAAC5P,KAAK8P,EAAWlI,QAAS/K,IAFT,SAGpB+O,EAAW/O,GAAI+G,MAAK,SAACyM,GAAD,OAAQzQ,QAAQC,IAAIwQ,MAC9CE,OAAM,SAAAF,GAAI,OAAEzQ,QAAQC,IAAIwQ,MAJE,OAK1BT,EAASG,GAAa,IALI,2CAAH,8DCAdW,GAAoB,SAACvG,EAAMqB,EAAKxL,GACzC,IAAI2Q,GAAO,EACPC,EAAY,aAAOzG,GACvB,OAAQnK,GACJ,IAAK,SAKD,OAJAwL,EAAK5N,KAAI,SAAAiT,GACLF,EAAMC,EAAaE,WAAU,SAACjT,GAAD,OAAQA,EAAKQ,MAAQ0S,SAASF,MAC3DD,EAAY,uBAAOA,EAAaI,MAAM,EAAGL,IAA7B,aAAsCC,EAAaI,MAAML,EAAM,QAExEC,EACX,IAAK,SAED,OADAD,EAAMxG,EAAM2G,WAAU,SAAAjT,GAAI,OAAEA,EAAKhB,KAAOkU,SAASvF,EAAK3O,OAChD,GAAN,oBAAW+T,EAAaI,MAAM,EAAGL,IAAjC,CAAsCnF,GAAtC,aAA+CoF,EAAaI,MAAML,EAAM,KAC5E,QACI,SCHNrJ,GAAa,CACf2J,MAAO,GACPC,SAAU,ICFR5J,GAAa,CACf+E,eAAe,EACf8E,cAAc,EACdC,cAAc,EACdC,sBAAkBnQ,EAClBoL,SAAU,IAyDDgF,GAAa,SAAA/S,GACtB,MAAM,CACFyB,KAAM,cACN4H,QAASrJ,IAGJwR,GAAe,SAAAwB,GACxB,MAAM,CACFvR,KAAM,sBACN4H,QAAS2J,IC3DXjK,GAAa,CACfkK,WAAY,GACZC,aAAc,GACdC,cAAe,ICgCH7J,gBANQ,SAAAsC,GACpB,MAAM,CACFqH,WAAYrH,EAAMwH,SAASH,WAC3BC,aAActH,EAAMwH,SAASF,gBAIjC,CACIG,YDsBmB,WACvB,8CAAO,WAAMhC,GAAN,SAAA7H,EAAA,+EAAkB4H,GAAYC,EAAUpB,GAAgBtI,GAAkB6J,KAA1E,2CAAP,uDCtBI8B,gBDwBuB,SAAChV,GAC5B,8CAAO,WAAM+S,GAAN,SAAA7H,EAAA,+EAAkB4H,GAAYC,EAAUlB,GAAoBtI,GAAsB2J,GAAalT,IAA/F,2CAAP,uDCxBIiV,eD0BsB,SAAAtG,GAEtB,8CAAO,WAAMoE,GAAN,SAAA7H,EAAA,+EAAkBoI,GAAuBP,EAASjB,GAAgBnD,EAAKnF,GAAe0J,KAAtF,2CAAP,uDC3BAgC,eDgCsB,SAAClV,EAAG2O,GAC9B,8CAAO,WAAMoE,GAAN,SAAA7H,EAAA,+EAAkBoI,GAAuBP,EAASd,GAAetD,EAAKjF,GAAiBwJ,GAAalT,IAApG,2CAAP,uDChCImV,eD4BsB,SAAAnV,GAC1B,8CAAO,WAAM+S,GAAN,SAAA7H,EAAA,+EAAmB0I,GAAeb,EAAShB,GAAe/R,EAAGkT,GAAazJ,KAA1E,2CAAP,wDCnCYuB,EAxCO,SAAC,GAAuH,IAAD,IAArH2J,kBAAqH,MAA1G,GAA0G,EAAvGC,EAAuG,EAAvGA,aAAaG,EAA0F,EAA1FA,YAAYC,EAA8E,EAA9EA,gBAAgBC,EAA8D,EAA9DA,eAAeC,EAA+C,EAA/CA,eAAeC,EAAgC,EAAhCA,eAAgC,EAAjBC,cAGzH,OAFArS,QAAQC,IAAI4R,GACZ7R,QAAQC,IAAI2R,GAER,cAAC,GAAD,CACIjF,QAAU,aACVC,UAAY,yDAEZC,UAAW+E,EACX9E,mBAAoBxO,EAIpByO,aAAc,sHACdE,aAAc,gHACfC,iBAAkBY,GACjBV,yBAA0B,CACtBrQ,KAAM,GACN+U,cAAe,IACnBzE,yBAA0B,CACtBtQ,KAAI,OAAE8U,QAAF,IAAEA,OAAF,EAAEA,EAAc9U,KACpB+U,cAAa,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAcC,eAEjCpH,YAAasH,EACbhI,UAAW6H,EACX9H,YAAakI,EACb1E,WAAY2E,EACZ1E,WAAY2E,EAEZnG,WAAYoG,OCJTnK,I,OAAAA,aALS,SAAAsC,GACpB,MAAM,CACF+H,MAAQ/H,EAAM+H,MAAM3K,eAGW,CAACI,gBAAzBE,CAAuCpL,aApCxC,SAAC,GAAyC,IAAxCyV,EAAuC,EAAvCA,MAAMvK,EAAiC,EAAjCA,YAAY/K,EAAqB,EAArBA,QAAqB,EAAb4M,UAStC,OAEI,qCACA,qBAAKjM,UAAU,iBAAiBC,QAAS,kBAAImK,EAAY,CAACH,QAAO,EAAMrJ,MAAM,QAEzE,sBAAKZ,UAAU,mBAAf,UACA,6BAAK2U,EAAM/T,QAEH,sBAAKZ,UAAU,cAAf,UACI,qBAAKA,UAAU,sBAAsBC,QAAS,kBAhB3D0U,EAAMzK,aACNyK,EAAMzK,cAETE,EAAY,CAACH,QAAQ,EAAOrJ,MAAO,UACnCvB,EAAQ0C,KAAK4S,EAAMxK,aAYH,0BACA,qBAAKnK,UAAU,qBAAqBC,QAAS,kBAAMmK,EAAY,CAC3DH,QAAQ,EACRrJ,MAAO,MAFX,8CC1BXgU,GAAkB,CAC3B,CACItT,YAAa,wFAGbmB,KAAM,QACNkF,OAAQ,CAACZ,OAAO,UAEpB,CACAvE,MAAO,qBACPlB,YAAa,gEACb0G,SAAU,yIACVF,aAAc,6EAEd,CACItF,MAAO,6CACPlB,YAAa,wFACb0G,SAAU,kKAEd,CACIxF,MAAO,mDACPlB,YAAa,8FACb0G,SAAU,wKAEd,CACIxF,MAAO,4EACPlB,YAAa,qJACb0G,SAAU,iMAEd,CACIxF,MAAO,qBACPwF,SAAU,yIACVvF,KAAM,QACNsF,WAAY,CAAC,6CAAU,+CAE3B,CACIvF,MAAO,iCACPlB,YAAa,0GACb0G,SAAU,4EACVvF,KAAM,WACNoF,iBAAkB,UAGtB,CACIrF,MAAO,6CACPlB,YAAa,sHACb0G,SAAU,sMACVF,aAAc,oDAElB,CACItF,MAAO,iGACPlB,YAAa,kEAEjB,CACIkB,MAAO,iCACPlB,YAAa,4EACb0G,SAAU,sJAEd,CACIxF,MAAO,uCACPlB,YAAa,kFACbwG,aAAc,uCACdH,OAAQ,CAACkN,UAAU,UAEvB,CACIrS,MAAO,4EACPlB,YAAa,+FAEjB,CACIwG,aAAc,2BACdxG,YAAa,gGCpERwT,GAAc,CACvB,CACIlU,MAAM,KACNC,UAAW,MACXC,IAAI,MACJC,OAAQ,SAACC,GAAD,OAAS,sBAAMC,MAAO,CAACC,MAAO,WAArB,SAAkCF,MAEvD,CACIJ,MAAO,qBACPC,UAAW,OACXC,IAAK,QAET,CACIF,MAAO,6CACPC,UAAW,UACXC,IAAK,WAET,CACIF,MAAO,mDACPC,UAAW,aACXC,IAAK,cAET,CACIF,MAAO,2BACPC,UAAW,OACXC,IAAK,OACLC,OAAQ,SAACC,GACL,MAAW,eAARA,EACQ,sBAAMC,MAAO,CAACC,MAAO,UAAU6T,WAAY,UAAUC,aAAc,MAAMC,QAAS,WAAlF,0EAEA,UAARjU,EACQ,sBAAMC,MAAO,CAACC,MAAO,UAAU6T,WAAY,UAAUC,aAAc,MAAMC,QAAS,WAAlF,4CAEJ,WAGf,CACIrU,MAAO,4EACPC,UAAW,aACXC,IAAK,eC5BPiJ,GAAa,CACfmL,UAAW,GACXC,YAAa,GACbC,OAAQ,IAkCCC,GAAY,WACrB,8CAAO,WAAMhD,GAAN,SAAA7H,EAAA,+EAAkB4H,GAAYC,EAAUrB,GAAcrH,GAAc6I,KAApE,2CAAP,uDC+BalI,gBARO,SAAAsC,GACpB,MAAM,CACF8G,MAAO9G,EAAM0I,KAAK5B,MAClBC,SAAU/G,EAAM0I,KAAK3B,SACrByB,OAAQxI,EAAM2I,KAAKH,UAIc,CAACI,SRnClB,WACpB,8CAAO,WAAMnD,GAAN,SAAA7H,EAAA,+EAAkB4H,GAAYC,EAAUL,GAAapI,GAAa4I,KAAlE,2CAAP,uDQkC+C6C,aAAUI,YRhClC,SAACnW,GACxB,8CAAO,WAAM+S,GAAN,SAAA7H,EAAA,+EAAkB4H,GAAYC,EAAUJ,GAAgBpI,GAAkB2I,GAAalT,IAAvF,2CAAP,uDQ+BqEoW,WR7B/C,SAAApW,GACtB,8CAAO,WAAM+S,GAAN,eAAA7H,EAAA,sDACKrD,EAAE,EADP,YACSA,EAAE7H,EAAGqC,QADd,gCAEOuR,GAAeb,EAASH,GAAe5S,EAAG6H,GAAGqL,GAAa1I,IAFjE,OACqB3C,IADrB,0DAAP,uDQ4BgFwO,WRrB1D,SAACrW,EAAG2O,GAC1B,8CAAO,WAAMoE,GAAN,SAAA7H,EAAA,+EAAiBoI,GAAuBP,EAASF,GAAWlE,ErBxB3C,eqBwB6DuE,GAAalT,IAA3F,2CAAP,wDQoBagL,EAlEC,SAAC,GAAgF,IAA/EoJ,EAA8E,EAA9EA,MAAM0B,EAAwE,EAAxEA,OAAOzB,EAAiE,EAAjEA,SAAS0B,EAAwD,EAAxDA,UAAUG,EAA8C,EAA9CA,SAASC,EAAqC,EAArCA,YAAYE,EAAyB,EAAzBA,WAAWD,EAAc,EAAdA,WAEhF,OADArT,QAAQC,IAAIqR,GAER,cAAC,GAAD,CACI3E,QAAU,QACVC,UAAY,2EAEZC,UAAWwE,EACXvE,mBAAoB2F,GAGpB1F,aAAc,wIACdE,aAAc,kIACdC,iBAAkBqF,GAClBpF,uBAAwB,CACpBoG,OAAQR,EAAM,aAAOA,GAAU,IAEnClJ,iBAAkB,CAACmJ,GACnB5F,yBAA0B,CACtBoG,WAAY,GACZzW,KAAM,GACN0W,QAAS,GACTC,WAAY,GACZC,UAAW,GACXC,OAAQ,EACRL,OAAQ,GACRM,YAAa,GACbC,UAAW,GACXC,MAAO,GACPC,SAAU,GACVC,eAAgB,IAGpB5G,yBAA0B,CACtBmG,WAAU,OAAElC,QAAF,IAAEA,OAAF,EAAEA,EAAUkC,WACtBzW,KAAI,OAAEuU,QAAF,IAAEA,OAAF,EAAEA,EAAUvU,KAChB0W,QAAO,OAAEnC,QAAF,IAAEA,OAAF,EAAEA,EAAUmC,QACnBC,WAAU,OAAEpC,QAAF,IAAEA,OAAF,EAAEA,EAAUoC,WACtBC,UAAS,OAAErC,QAAF,IAAEA,OAAF,EAAEA,EAAUqC,UACrBC,OAAM,OAAEtC,QAAF,IAAEA,OAAF,EAAEA,EAAUsC,OAClBL,OAAM,OAAEjC,QAAF,IAAEA,OAAF,EAAEA,EAAUiC,OAClBM,YAAW,OAAEvC,QAAF,IAAEA,OAAF,EAAEA,EAAUuC,YACvBC,UAAS,OAAExC,QAAF,IAAEA,OAAF,EAAEA,EAAUwC,UACrBC,MAAK,OAAEzC,QAAF,IAAEA,OAAF,EAAEA,EAAUyC,MACjBC,SAAU,GACVC,eAAgB,GAChBC,KAAI,OAAE5C,QAAF,IAAEA,OAAF,EAAEA,EAAU4C,MAGnBxJ,YAAayI,EACbnJ,UAAWsH,EACXvH,YAAaqJ,EACb5F,WAAY8F,EACZtH,WAAYqH,OCnEZc,GAA2B,CACpC,CACIlV,YAAa,wFAGbmB,KAAM,QACNkF,OAAQ,CAACZ,OAAO,UAEpB,CACIvE,MAAO,qBACPlB,YAAa,gEACb0G,SAAU,0IAEd,CACIxF,MAAO,yDACPlB,YAAa,0GACb0G,SAAU,0GACVvF,KAAM,WACNoF,iBAAkB,WAClBqD,SAAU,SAEd,CACI1I,MAAO,2EACPlB,YAAa,4HACb0G,SAAU,4HACVvF,KAAM,WACNoF,iBAAkB,iBAEtB,CACErF,MAAO,MACPlB,YAAa,4BACbmB,KAAM,OAGR,CACID,MAAO,iCACPlB,YAAa,0GACb0G,SAAU,4EACVvF,KAAM,WACNoF,iBAAkB,UAEtB,CACIrF,MAAO,0KACPwF,SAAU,yIACVvF,KAAM,QACNsF,WAAY,CAAC,oDAAY,4DAE7B,CACEvF,MAAO,sEACPwF,SAAU,iHACRvF,KAAM,OAEV,CACID,MAAO,iHACPlB,YAAa,qGAIjB,CACIkB,MAAO,6CACPlB,YAAa,sHACbmB,KAAM,SAEV,CACID,MAAO,oGACPlB,YAAa,6EAEjB,CACIkB,MAAO,iHACPlB,YAAa,0FAEjB,CACIkB,MAAO,iGACPlB,YAAa,iDACbmB,KAAK,WACLyB,UAAWuS,GAEf,CACInV,YAAa,eACbmB,KAAK,WACLyB,UAAWwS,GAEf,CACIpV,YAAa,iEACbmB,KAAK,WACLyB,UAAWyS,GAGf,CACIrV,YAAa,eACdmB,KAAK,WACJyB,UAAW0S,GAKf,CACItV,YAAa,kKACbwG,aAAc,+KAElB,CACExG,YAAa,4JACXmB,KAAM,QACPG,WAAY,EACXsI,SAAU,SAEd,CACI5J,YAAa,2GACbwG,aAAc,8FACdrF,KAAM,QACNlB,YAAa,CAACnC,KAAM,wFAAkByX,KAAM,mEC7GvCC,GAAuB,CAEhC,CACIlW,MAAM,KACNC,UAAW,MACXC,IAAI,MACJC,OAAQ,SAACC,GAAD,OAAS,sBAAMC,MAAO,CAACC,MAAO,WAArB,SAAkCF,MAGvD,CACIJ,MAAO,mDACPC,UAAW,OACXC,IAAK,QAET,CACIF,MAAO,2EACPC,UAAW,kBACXC,IAAK,mBAGT,CACIF,MAAO,4EACPC,UAAW,YACXC,IAAK,YACLC,OAAQ,SAACC,GAAD,OAAS,cAAC,IAAD,CAAQG,OAAO,aAAf,SAA8BH,OCNjD+I,GAAa,CACfgN,YAAa,GACbC,eAAgB,ICyFJ1M,gBAVQ,SAAAsC,GACpB,MAAM,CACFmK,YAAanK,EAAMqK,WAAWF,YAC9BC,eAAgBpK,EAAMqK,WAAWD,eACjC7C,cAAevH,EAAMwH,SAASD,cAC9BiB,OAAQxI,EAAM2I,KAAKH,UAMvB,CACI8B,eD3CsB,WAC1B,8CAAO,WAAM7E,GAAN,SAAA7H,EAAA,+EAAkB4H,GAAYC,EAAUZ,GAAkBxI,GAAmBuJ,KAA7E,2CAAP,uDC2CI2E,kBDzCyB,SAAC7X,GAC9B,8CAAO,WAAM+S,GAAN,SAAA7H,EAAA,+EAAkB4H,GAAYC,EAASX,GAAsBxI,GAAwBsJ,GAAalT,IAAlG,2CAAP,uDCyCI8X,iBDvCwB,SAAAnJ,GAE5B,8CAAO,WAAMoE,GAAN,SAAA7H,EAAA,+EAAkBoI,GAAuBP,EAASV,GAAkB1D,EAAK9E,GAAiBqJ,KAA1F,2CAAP,uDCsCI6E,iBDjCwB,SAAC/X,EAAG2O,GAChC,8CAAO,WAAMoE,GAAN,SAAA7H,EAAA,+EAAkBoI,GAAuBP,EAASN,GAAiB9D,EAAK5E,GAAmBmJ,GAAalT,IAAxG,2CAAP,uDCiCIgY,iBDrCwB,SAAAhY,GAC5B,8CAAO,WAAM+S,GAAN,SAAA7H,EAAA,+EAAmB0I,GAAeb,EAASP,GAAiBxS,EAAGkT,GAAapJ,KAA5E,2CAAP,uDCsCImO,iBVzCwB,WAC5B,8CAAO,WAAMlF,GAAN,SAAA7H,EAAA,+EAAiB4H,GAAYC,EAASnB,GAAkBtI,GAAoB4J,KAA5E,2CAAP,uDUyCI6C,cATQ/K,EAvFU,SAAC,GAAoK,IAAnK6J,EAAkK,EAAlKA,cAAciB,EAAoJ,EAApJA,OAAOC,EAA6I,EAA7IA,UAAUkC,EAAmI,EAAnIA,iBAAiBR,EAAkH,EAAlHA,YAAYC,EAAsG,EAAtGA,eAAeG,EAAuF,EAAvFA,kBAAkBD,EAAqE,EAArEA,eAAeE,EAAsD,EAAtDA,iBAAiBC,EAAqC,EAArCA,iBAAiBC,EAAoB,EAApBA,iBAEtK,OACI,cAAC,GAAD,CACItI,QAAU,iBACVC,UAAY,wIAEZC,UAAW6H,EACX5H,mBAAoB2H,GAGpB1H,aAAc,4HACdE,aAAc,sHACdC,iBAAkBiH,GAClBhH,uBAAwB,CACpB4E,SAAU,GACVwB,OAAQR,EAAM,aAAOA,GAAU,GAC/BjB,cAAeA,EAAa,aAAOA,GAAiB,IAExDjI,iBAAkB,CAACqL,EAAiBlC,GACpC5F,yBAA0B,CACtBoG,WAAY,GACZzW,KAAM,GACNgV,SAAU,GACVoD,YAAa,GACbC,IAAK,GACL7B,OAAQ,GACR8B,SAAU,GACVC,OAAO,GACPC,eAAgB,GAChBC,MAAO,GACPzB,MAAO,GACP0B,QAAS,GACTC,SAAU,GACVC,SAAU,GACV7B,UAAW,GACX8B,SAAU,GACVC,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,SAAU,IAGd3I,yBAA0B,CACtBmG,WAAU,OAAEmB,QAAF,IAAEA,OAAF,EAAEA,EAAgBnB,WAC5BzW,KAAI,OAAE4X,QAAF,IAAEA,OAAF,EAAEA,EAAgB5X,KACtBgV,SAAU,GACVoD,YAAW,OAAER,QAAF,IAAEA,OAAF,EAAEA,EAAgBsB,cAC7Bb,IAAG,OAAET,QAAF,IAAEA,OAAF,EAAEA,EAAgBS,IACrB7B,OAAM,OAAEoB,QAAF,IAAEA,OAAF,EAAEA,EAAgBpB,OACxB8B,SAAU,GACVC,OAAM,OAACX,QAAD,IAACA,OAAD,EAACA,EAAgBW,OACvBC,eAAc,OAAEZ,QAAF,IAAEA,OAAF,EAAEA,EAAgBY,eAChCC,MAAO,GACPzB,MAAO,GACP0B,QAAS,GACTC,SAAU,GACVC,SAAU,GACV7B,UAAW,GACX8B,SAAU,GAEVE,YAAa,GACbC,OAAQ,GACRC,SAAQ,OAAErB,QAAF,IAAEA,OAAF,EAAEA,EAAgBqB,UAG7BtL,YAAamK,EACb7K,UAAW2K,EACX5K,YAAa+K,EACbvH,WAAYwH,EACZvH,WAAYwH,EAEZhJ,WAAYiJ,OClFViB,GATE,SAAApY,GAEb,OACI,mCACI,cAAC,EAAD,OCOIqY,GAZM,SAAC,GAAoC,IAAnCpZ,EAAkC,EAAlCA,KAAKuD,EAA6B,EAA7BA,cAAcrB,EAAe,EAAfA,YAAe,EACP/B,oBAAS,GADF,mBAC/CkZ,EAD+C,KAC9BC,EAD8B,KAGlD,OACI,sBAAK1Y,UAAW,gBAAhB,UACI,uBAAOyC,KAAMgW,EAAiB,OAAS,WAAanX,YAAaA,EAAalC,KAAMA,EAAM4D,SAAU,SAAAmB,GAAC,OAH/FnD,EAG0GmD,EAAEC,OAAOpD,MAH3G2B,EAAcvD,EAAK4B,GAA5B,IAACA,KAIV,qBAAMN,IAAI,GACLT,QAAS,kBAAIyY,GAAoBD,UCiCjDE,GAnCgB,SAACxY,GACd,OACI,cAAC,IAAD,CACIsL,cAAe,CACX2K,MAAM,GACNC,SAAU,IAEd3K,iBAAkBP,IAAW,CACzBiL,MAAOjL,MAAanD,WAAWoO,QAC/BC,SAAUlL,MAAanD,aAE3B2D,SAAU,SAAClK,GAAD,OAAUtB,EAAMyY,cAAcnX,IAT5C,SAWI,eAAC,IAAD,WAGI,cAAC,IAAD,CAAOrC,KAAK,QAAQkC,YAAY,qIAGhC,cAAC,IAAD,CAAOlC,KAAK,WAAZ,SACK,gBAASA,EAAT,EAAEgJ,MAAOhJ,KAAcuD,EAAvB,EAAenB,KAAQmB,cAAvB,OAA0C,cAAC,GAAD,CAAeA,cAAeA,EAAevD,KAAMA,EAAMkC,YAAY,4CAEpH,wBAAQtB,UAAW,YAAayC,KAAM,SAAtC,kDCdD6H,eAAQ,KAAK,CAACuO,Wf8FH,SAAA5K,GACtB,8CAAO,WAAMoE,GAAN,SAAA7H,EAAA,6DACH6H,EAASG,IAAa,IADnB,SAEG7B,GAAQ1C,GAAM5H,MAAK,SAAAyK,GACrBzO,QAAQC,IAAIwO,GAERR,aAAawI,QAAQ,QAAShI,EAAS7C,KAAK8K,OAC5CzI,aAAawI,QAAQ,KAAMhI,EAAS7C,KAAK3O,IACzC+S,EAAS0B,IAAW,OAPzB,OAoBH1B,EAASG,IAAa,IApBnB,2CAAP,wDe/FWlI,EAXO,SAAC,GAAiC,IAAhCuO,EAA+B,EAA/BA,WAA+B,EAApBG,iBAM/B,OACI,cAAC,GAAD,CAAUJ,cANQ,SAACnX,GACnBY,QAAQC,IAAIb,GAEZoX,EAAWpX,SCXJ,I,OAAA,IAA0B,oCCqBxBwX,GAfA,WAGb,OACI,sBAAKjZ,UAAU,kBAAkBiB,MAAO,CAACiY,gBAAgB,OAAD,OAASC,GAAT,MAAxD,UACI,qBAAKnZ,UAAU,aAAf,SAA4B,qBAAKQ,IAAKC,EAASC,IAAI,OACnD,sBAAKV,UAAU,cAAf,UACI,qBAAKA,UAAU,cAAf,4CACA,cAAC,GAAD,WCaDsK,I,cAAAA,YAAQ,KAAK,CAAC8O,aZ0BD,WACxB,8CAAO,WAAM/G,GAAN,SAAA7H,EAAA,+EAAkB4H,GAAYC,EAAUxB,GAAiBpH,GAAiB+I,KAA1E,2CAAP,wDY3BWlI,EAlBQ,SAAAnK,GAInB,OAHJT,qBAAU,WACNS,EAAMiZ,iBACR,IAEM,sBAAKpZ,UAAW,gBAAhB,UACI,sBAAKA,UAAW,YAAhB,UACI,qBAAKQ,IAAKL,EAAMkZ,IAAK3Y,IAAI,KACzB,sBAAKV,UAAU,iBAAf,UACI,6BAAKG,EAAMS,QACX,+BAAOT,EAAM8N,aAGrB,sBAAKjO,UAAW,aAAcC,QAAS,kBAAIE,EAAMiZ,gBAAjD,UAAiE,qBAAK5Y,IAAK8Y,EAAY5Y,IAAI,KAA3F,6DCtBC6Y,I,OAAiB,SAAAvY,GAC1B,OAAQA,GACJ,IAAK,WACD,MAAO,uCACX,IAAK,WACD,MAAO,yDACX,IAAK,cACD,MAAO,2EACX,IAAK,UACD,MAAO,mDACX,IAAK,OACD,MAAO,uFACX,IAAK,SACD,MAAO,mDACX,IAAK,SACD,MAAO,+DACX,IAAK,UACD,MAAO,qEACX,IAAK,OACD,MAAO,iCACX,IAAK,UACD,MAAO,6CACX,IAAK,SACD,MAAO,+DACX,IAAK,MACD,MAAO,uFACX,IAAK,gBACD,MAAO,2EACX,QACI,OAAOA,KCzBNwY,GAAqB,CAG9B,CACI5Y,MAAO,qBACPC,UAAW,cACXC,IAAK,cACLC,OAAQ,SAACC,GACL,IACMyY,EADMzY,EAAM0Y,MAAM,KACH,GAAGA,MAAM,aAC9B,OAAQH,GAAgBE,EAAS,GAAIA,EAAS,GAAKA,EAAS,MAGpE,CACI7Y,MAAO,kFACPC,UAAW,YACXC,IAAK,YACLC,OAAQ,SAACC,GAAD,OAAU,cAAC,IAAD,CAAQG,OAAO,qBAAf,SAAsCH,MAG5D,CACIJ,MAAO,mDACPC,UAAW,aACXC,IAAK,aACNC,OAAQ,SAACC,GACL,IAAMyY,EAAWzY,EAAM0Y,MAAM,aAC7B,OAAOH,GAAgBE,EAAS,OCqB3BnP,gBATQ,SAAAsC,GACpB,MAAM,CACFsI,UAAWtI,EAAM2I,KAAKL,UACtBC,YAAavI,EAAM2I,KAAKJ,YACxBpG,SAAUnC,EAAMiC,KAAKE,YAKW,CAAC4K,WfMf,WACtB,8CAAO,WAAMtH,GAAN,SAAA7H,EAAA,+EAAkB4H,GAAYC,EAAUtB,GAAmBrH,GAAoB8I,KAA/E,2CAAP,wDePYlI,EAhCC,SAAC,GAA+C,IAA9C4K,EAA6C,EAA7CA,UAAUC,EAAmC,EAAnCA,YAAYwE,EAAuB,EAAvBA,WAAW5K,EAAY,EAAZA,SAChD,OACI,qCACI,mBAAGiB,KAAK,uBAAwB5L,OAAQ,SAAUpE,UAAY,0BAA9D,iFACA,sBAAKA,UAAY,wBAAjB,UAAyC,+BAAO+O,EAAS3P,OAAzD,IAAsE,qBAAMsB,IAAI,QAChF,sBAAMV,UAAU,sBAAhB,SAAuC,+CACtC,sBAAKA,UAAW,oBAAhB,UACD,cAAC,GAAD,CAAgBqZ,IAAKO,EAAahZ,MAAO,2EAAgBqN,KAAMiH,EAAU2E,aACzE,cAAC,GAAD,CAAgBR,IAAMS,EAAalZ,MAAO,qEAAeqN,KAAMiH,EAAU6E,aACzE,cAAC,GAAD,CAAgBV,IAAMW,EAAgBpZ,MAAO,mDAAYqN,KAAMiH,EAAU+E,gBAEzE,sBAAMja,UAAU,sBAAsBiB,MAAO,CAACiZ,aAAc,QAA5D,SAAsE,4GACjE,cAAC,GAAD,CAEInN,YAAa4M,EACb1L,KAAMkH,EAAY,GAClBpH,QAASyL,GACT1M,SAAS,UCkB9B,IAOAxC,gBAPwB,SAAAsC,GACpB,MAAM,CACFgH,aAAchH,EAAMiC,KAAK+E,aACzBe,MAAQ/H,EAAM+H,MAAM3K,eAIJ,CAAC+J,cAAWoG,atBwBR,SAAA7a,GACxB,8CAAO,WAAM+S,GAAN,SAAA7H,EAAA,sEACEyH,GAAe3S,GAAI+G,MAAK,SAACyM,GAC3BT,EAhCD,CACF5P,KAAM,iBACN4H,QA8B0ByI,IACtBzQ,QAAQC,IAAIwQ,MAHb,2CAAP,wDsBzBJxI,EA5CA,SAAanK,GAUX,OATET,qBAAU,WCjBP4Q,aAAaC,QAAQ,UDmBhBpQ,EAAM4T,YAAW,GACjB5T,EAAMga,aAAa7J,aAAaC,QAAQ,QAGxCpQ,EAAM4T,YAAW,KAEvB,IAGI5T,EAAMyT,aACF,qCACKzT,EAAMwU,MAAM1K,QAAU,cAAC,GAAD,IAEvB,cAAC,EAAD,IACA,qBAAKjK,UAAU,eAAf,SACI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOkQ,KAAM,SAAUkK,UAAWC,KAClC,cAAC,IAAD,CAAOnK,KAAM,kBAAmBkK,UAAWE,KAC3C,cAAC,IAAD,CAAOpK,KAAM,cAAekK,UAAWG,KACvC,cAAC,IAAD,CAAOrK,KAAM,QAASkK,UAAW7B,KACjC,cAAC,IAAD,CAAOrI,KAAM,QAASkK,UAAWI,aAS7C,cAAC,IAAD,CAAOtK,KAAM,IAAKkK,UAAWnB,Q,SEtC9BwB,GAAcC,aAAgB,CACvC/F,M7CDwB,WAA8B,IAA7B/H,EAA4B,uDAAtB7C,GAAa4Q,EAAS,uCACrD,OAAQA,EAAOlY,MAEX,KAAK4F,GACD,kCACOuE,GADP,IAEI5C,YAAa2Q,EAAOtQ,UAE5B,QACI,sBACOuC,K6CRfiC,KxBMuB,WAA8B,IAA7BjC,EAA4B,uDAAtB7C,GAAa4Q,EAAS,uCACpD,OAAQA,EAAOlY,MACX,KAAK6F,GACD,OAAO,2BACAsE,GADP,IAEIgH,aAAc+G,EAAOtQ,UAE7B,KAAK9B,GACD,kCACOqE,GADP,IAEIkC,cAAe6L,EAAOtQ,UAE9B,KAAK7B,GACD,kCACOoE,GADP,IAEIiH,aAAc8G,EAAOtQ,UAG7B,KAAK5B,GACD,OAAO,2BACAmE,GADP,IAEIkH,iBAAkB6G,EAAOtQ,UAEjC,KAAK3B,GACD,OAAO,2BACAkE,GADP,IAEImC,SAAU4L,EAAOtQ,UAEzB,QACI,sBACOuC,KwBnCfwH,SvBe2B,WAA8B,IAA7BxH,EAA4B,uDAAtB7C,GAAa4Q,EAAS,uCACxD,OAAQA,EAAOlY,MACX,KAAKkG,GACD,kCACOiE,GADP,IAEIqH,WAAY0G,EAAOtQ,UAE3B,KAAKzB,GACD,OAAO,2BACAgE,GADP,IAEIuH,cAAewG,EAAOtQ,UAE9B,KAAKxB,GACD,kCACO+D,GADP,IAEIsH,aAAcyG,EAAOtQ,UAE7B,KAAKvB,GACD,OAAO,2BACA8D,GADP,IAEIqH,WAAW,GAAD,oBACHrH,EAAMqH,YADH,CAEN0G,EAAOtQ,YAEnB,KAAKtB,GACD,kCACO6D,GADP,IAEIqH,WAAYd,GAAkBvG,EAAMqH,WAAW0G,EAAOtQ,QAAQ,YAEtE,KAAKrB,GACD,OAAO,2BACA4D,GADP,IAEIqH,WAAYd,GAAkBvG,EAAMqH,WAAW0G,EAAOtQ,QAAQ,YAEtE,QACI,sBACOuC,KuBlDfC,MvCPwB,WAA8B,IAA7BD,EAA4B,uDAAtB7C,GAAa4Q,EAAS,uCACrD,OAAQA,EAAOlY,MAEX,KAAK6G,GACD,kCACOsD,GADP,IAEIN,aAAcqO,EAAOtQ,UAE7B,KAAKd,GACD,kCACOqD,GADP,IAEIL,iBAAkBoO,EAAOtQ,UAEjC,KAAKb,GACD,kCACOoD,GADP,IAEIJ,aAAcmO,EAAOtQ,UAE7B,QACI,sBACOuC,KuCZfqK,WdU6B,WAA8B,IAA7BrK,EAA4B,uDAAtB7C,GAAa4Q,EAAS,uCAC1D,OAAQA,EAAOlY,MACX,KAAKwG,GACD,kCACO2D,GADP,IAEImK,YAAa4D,EAAOtQ,UAE5B,KAAKnB,GACD,kCACO0D,GADP,IAEIoK,eAAgB2D,EAAOtQ,UAE/B,KAAKlB,GACD,OAAO,2BACAyD,GADP,IAEImK,YAAY,GAAD,oBACJnK,EAAMmK,aADF,CAEP4D,EAAOtQ,YAEnB,KAAKjB,GACD,kCACOwD,GADP,IAEImK,YAAa5D,GAAkBvG,EAAMmK,YAAY4D,EAAOtQ,QAAQ,YAExE,KAAKhB,GACD,OAAO,2BACAuD,GADP,IAEImK,YAAa5D,GAAkBvG,EAAMmK,YAAY4D,EAAOtQ,QAAQ,YAExE,QACI,sBACOuC,KcxCf2I,KlBEuB,WAA8B,IAA7B3I,EAA4B,uDAAtB7C,GAAa4Q,EAAS,uCACpD,OAAQA,EAAOlY,MACX,KAAKkH,GACD,kCACOiD,GADP,IAEIwI,OAAQuF,EAAOtQ,UAEvB,KAAKZ,GACD,kCACOmD,GADP,IAEIsI,UAAWyF,EAAOtQ,UAG1B,KAAKX,GACD,OAAO,2BACAkD,GADP,IAEIuI,YAAY,GAAD,oBACJvI,EAAMuI,aADF,CAEPwF,EAAOtQ,YAGnB,QACI,sBACOuC,KkBxBf0I,KzBFuB,WAA8B,IAA7B1I,EAA4B,uDAAtB7C,GAAa4Q,EAAS,uCACpD,OAAQA,EAAOlY,MACX,KAAKmH,GACD,kCACOgD,GADP,IAEI8G,MAAOiH,EAAOtQ,UAEtB,KAAKR,GACD,kCACO+C,GADP,IAEI+G,SAAUgH,EAAOtQ,UAEzB,KAAKP,GACD,kCACO8C,GADP,IAEI8G,MAAOP,GAAkBvG,EAAM8G,MAAMiH,EAAOtQ,QAAQ,YAE5D,QACI,sBACOuC,O,U0B/BNgO,GAAQC,aACjBJ,GACAK,aACIC,aACIC,MAEJC,OAAOC,8BAAgCD,OAAOC,iCCJtDC,IAASpa,OACP,cAAC,IAAD,CAAU6Z,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,QAKJQ,SAASC,eAAe,W","file":"static/js/main.db8ec776.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport classNames from 'classnames'\r\n\r\n\r\nconst SidebarItem = ({to,name,\r\n\r\n                         id,\r\n                         history,\r\n    ...props\r\n})=>{\r\n    const [clicked,setClick] = useState(false)\r\n    const activeRoute =()=>history.location.pathname.indexOf(to) > -1\r\n    useEffect(()=>{\r\n        if(activeRoute()){\r\n            return setClick(true)\r\n        }\r\n        return setClick(false)\r\n\r\n\r\n    },[history.location.pathname])\r\n    const classes = classNames({\r\n        'sidebar__item' : !clicked,\r\n        'sidebar__item_active' : clicked\r\n    })\r\n    return(\r\n        <li className={classes} ><Link onClick={()=>setClick(true)} to={to} >{name}</Link></li>\r\n    )\r\n}\r\n\r\nexport default withRouter(SidebarItem)","\r\n\r\nexport const sideBarConfig = [\r\n    {\r\n        to: '/main',\r\n        name: 'Главная',\r\n\r\n    },\r\n    {\r\n        to: '/advertisements',\r\n        name: 'Существующие объявления',\r\n\r\n    },\r\n    {\r\n        to: '/users',\r\n        name: 'Пользователи',\r\n\r\n    },\r\n    {\r\n        to: '/categories',\r\n        name: 'Категории',\r\n\r\n    },\r\n    {\r\n        to: '/feedback',\r\n        name: 'Обратная связь',\r\n    },\r\n    {\r\n        to: '/comments',\r\n        name: 'Отзывы',\r\n\r\n    },\r\n    {\r\n        to: '/complaints',\r\n        name: 'Жалобы',\r\n\r\n    },\r\n    {\r\n        to: '/about-us',\r\n        name: 'О компании',\r\n\r\n    },\r\n    {\r\n        to: '/question-answer',\r\n        name: 'Вопрос ответ',\r\n\r\n    },\r\n    {\r\n        to: '/rules',\r\n        name: 'Правила',\r\n\r\n    },\r\n\r\n    {\r\n        to: '/instructions',\r\n        name: 'Инструкции',\r\n    },\r\n\r\n]","export default __webpack_public_path__ + \"static/media/logoSVG.eef6d905.svg\";","export default __webpack_public_path__ + \"static/media/add.d88919a8.svg\";","export default __webpack_public_path__ + \"static/media/delete.2513b4aa.svg\";","export default __webpack_public_path__ + \"static/media/search.80f4a161.svg\";","export default __webpack_public_path__ + \"static/media/removeItem.d8d76063.svg\";","export default __webpack_public_path__ + \"static/media/url.ac0a5d07.svg\";","export default __webpack_public_path__ + \"static/media/whatsapp-icon.53687a38.svg\";","export default __webpack_public_path__ + \"static/media/telegram.638afeff.svg\";","export default __webpack_public_path__ + \"static/media/facebook.75924e95.svg\";","export default __webpack_public_path__ + \"static/media/instagram.5e75c6d5.svg\";","export default __webpack_public_path__ + \"static/media/deleteImage.c3a40544.svg\";","export default __webpack_public_path__ + \"static/media/plus.5a07b261.svg\";","export default __webpack_public_path__ + \"static/media/refresh.183df870.svg\";","export default __webpack_public_path__ + \"static/media/userStat.3997bcea.svg\";","export default __webpack_public_path__ + \"static/media/specStat.dc858793.svg\";","export default __webpack_public_path__ + \"static/media/companyStat.4b1310ab.svg\";","import React, {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport SidebarItem from \"./SidebarItem\";\r\nimport {sideBarConfig} from \"./sideBarConfig\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport {logoSVG} from \"../../assets\";\r\n\r\nconst SidebarList  = (props)=>{\r\n\r\n    const elements = sideBarConfig.map((item,index)=>{\r\n        return(\r\n            <SidebarItem\r\n                key={index}\r\n                id={index}\r\n                to={item.to}\r\n\r\n                name={item.name}\r\n\r\n            />\r\n        )\r\n    })\r\n    return(\r\n        <div className='sidebar__container'>\r\n            <div className=\"sidebar__logo-container\">\r\n            <Link to={'/'}><img  className='sidebar__logo' src={logoSVG} alt=\"\"/></Link>\r\n            </div>\r\n            <ul className='sidebar'>\r\n                {elements}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(SidebarList)","import Moment from \"react-moment\";\r\nimport React from \"react\";\r\n\r\nexport const CategoryColumns  =[\r\n    {\r\n      title:'ID',\r\n      dataIndex: 'key',\r\n      key:'key',\r\n        render: (value)=><span style={{color: '#1E90FF'}}>{value}</span>\r\n    },\r\n    {\r\n        title: \"Название\",\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: 'Дата создания',\r\n        dataIndex: 'createdAt',\r\n        key: 'createdAt',\r\n        render: (value)=> <Moment format=\"DD.MM.YYYY\" >{value}</Moment>\r\n\r\n    }\r\n]","import React, {useState} from 'react'\r\nimport {Field} from \"formik\";\r\nimport {plusSVG, removeItemSVG} from '../../../assets/'\r\nimport './ArrayField.css'\r\n\r\n\r\n\r\n\r\nconst ArrayField = ({arrayHelpers,placeholder,name,labelObject})=>{\r\n    const [obj,setObj] = useState(arrayHelpers.form.values[name] ? arrayHelpers.form.values[name][0]: [])\r\n    return(\r\n        <div className={'arrayField__container'}>\r\n            {arrayHelpers.form.values[name] &&\r\n            arrayHelpers.form.values[name].length > 0 && (\r\n                arrayHelpers.form.values[name].map((item, index) => {\r\n                    let result =[]\r\n                    if(typeof item ==='object'){\r\n                        for (let k in item) {\r\n                            for (let labelKey in labelObject) {\r\n                                if(labelKey===k) {\r\n                                    result.push(\r\n                                        <div key={`${name}.${index}.${k}`} className={'arrayField__item'}>\r\n                                            <label htmlFor={`${name}.${[index]}.${[k]}`}>{labelObject[labelKey]}</label>\r\n                                            <Field name={`${name}.${[index]}.${[k]}`}/>\r\n                                            {index === (arrayHelpers.form.values[name].length - 1) && (\r\n                                                <>\r\n                                                <div\r\n                                                className={'arrayField__removeItemBtn'}\r\n                                                onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\r\n                                            >\r\n                                                <img src={removeItemSVG} alt=\"\"/>\r\n                                            </div>\r\n                                                <div\r\n                                                className={'arrayField__plusItemBtn'}\r\n                                                onClick={() => arrayHelpers.insert(index+1,obj)} // remove a friend from the list\r\n                                                >\r\n                                                <img src={plusSVG} alt=\"\"/>\r\n                                                </div>\r\n                                                </>\r\n                                            )\r\n                                            }\r\n                                        </div>)\r\n                                }}\r\n                            console.log((arrayHelpers.form.values[name].length))\r\n                        }\r\n                        return result\r\n                    }\r\n                    return(\r\n\r\n                        <div key={`${name}.${index}`} className={'arrayField__item'}>\r\n                            <Field name={`${name}.${index}`}/>\r\n                            <div\r\n                                className={'arrayField__removeItemBtn'}\r\n                                onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\r\n                            >\r\n                                <img src={removeItemSVG} alt=\"\"/>\r\n                            </div>\r\n                            <div\r\n                                className={'arrayField__plusItemBtn'}\r\n                                onClick={() => arrayHelpers.insert(index+1,obj)} // remove a friend from the list\r\n                            >\r\n                                <img src={plusSVG} alt=\"\"/>\r\n                            </div>\r\n                        </div>\r\n                    )})\r\n            )\r\n            }\r\n            {(arrayHelpers.form.values[name]?.length=== 0) &&\r\n            <div className={'arrayField__addItemBtn'} onClick={() => arrayHelpers.push(obj)}>\r\n                {placeholder}\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ArrayField\r\n\r\n","import React from 'react'\r\nimport {Field} from \"formik\";\r\n\r\n\r\n\r\n\r\nconst RadioGroup = props=>{\r\n\r\n    const elements = props.label.map((item,index)=>{\r\n        return(\r\n            <label key={index}>\r\n                <Field type=\"radio\" name={props.name} value={`${index}`} />\r\n                {props.label[index]}\r\n            </label>\r\n        )\r\n        })\r\n\r\n\r\n    return(\r\n        <div className={'radio_group_field'}>\r\n            {elements}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default RadioGroup","import {Upload, Modal, Button,message} from 'antd';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport './ImgUploader.css';\r\nimport ImageUploading from 'react-images-uploading';\r\nimport {deleteImageSVG} from \"../../../assets\";\r\n\r\n\r\nconst ImgUploader = ({setFieldValue,name,value,placeholder,imageCount=1})=>{\r\n    const [file,setFile] = useState([])\r\n\r\n    useEffect(()=>{\r\n        setFieldValue(name,file)\r\n    },[file])\r\n\r\n    const onChange = (fileList) => {\r\n        setFile(fileList);\r\n    }\r\n\r\n    console.log(file)\r\n        return (\r\n\r\n            <ImageUploading\r\n                multiple\r\n                value={file}\r\n                onChange={onChange}\r\n                maxNumber={imageCount}\r\n                dataURLKey=\"data_url\"\r\n            >\r\n                {({\r\n                      onImageUpload,\r\n                      onImageRemoveAll,\r\n                      onImageUpdate,\r\n                      onImageRemove,\r\n                      isDragging,\r\n                      dragProps,\r\n                  }) => (\r\n                              imageCount===1 ?\r\n                            <div className=\"upload__image-wrapper\">\r\n                                {file.length===0 && <div\r\n                                    className={'upload__image-uploadBtn'}\r\n                                    style={isDragging ? {borderColor: '#009B00'} : undefined}\r\n                                    onClick={onImageUpload}\r\n                                    {...dragProps}\r\n                                >\r\n                                    Добавить фото пользователя\r\n                                </div>\r\n                                }\r\n                                {file.length!==0 &&\r\n                                <div className={'upload__image-container'}>\r\n\r\n                                    <div className=\"upload__image-item\">\r\n                                        <img src={file[0]?.data_url} alt=\"\"/>\r\n                                    </div>\r\n                                    <span className=\"update__image-item\" onClick={() => onImageUpdate(0)}>Изменить фото профиля</span>\r\n                                        <span className=\"update__image-item\" onClick={() => onImageRemove(0)}>Удалить фото профиля</span>\r\n                                </div>\r\n                                }\r\n                               {/*{files.length!==0 && <div className={'upload__image-remove-allBtn'} onClick={onImageRemoveAll}>Удалить все файлы</div> }*/}\r\n                            </div>\r\n                                  :\r\n\r\n                    <div className=\"upload__imageArray-wrapper\">\r\n                        <div\r\n                            className={'upload__imageArray-uploadBtn-container'}\r\n                            style={isDragging ? { borderColor: '#009B00' } : undefined}\r\n                            onClick={onImageUpload}\r\n                            {...dragProps}\r\n                        >\r\n\r\n                            Нажмите или перетащите файл, чтобы загрузить\r\n                            <div  className={'upload__imageArray-uploadBtn'}>Добавить фото</div>\r\n                        </div>\r\n                        <div className={'upload__imageArray-container'}>\r\n                            {\r\n                                file.map((image, index) => (\r\n                                    <div key={index} className=\"upload__imageArray-item\">\r\n                                        <img src={image['data_url'] ? image['data_url'] : image} alt=\"\"  />\r\n                                        <div className=\"image-itemArray__btn-wrapper\">\r\n\r\n                                            <span><img src={deleteImageSVG} onClick={() => onImageRemove(index)}/></span>\r\n                                        </div>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        {file.length!==0 && <div className={'upload__image-remove-allBtn'} onClick={onImageRemoveAll}>Удалить все файлы</div> }\r\n                    </div>\r\n                )}\r\n            </ImageUploading>\r\n            // <ImageUploading\r\n            //      multiple\r\n            //     value={file}\r\n            //     onChange={onChange}\r\n            //     maxNumber={imageCount}\r\n            //     dataURLKey=\"data_url\"\r\n            // >\r\n            //     {({\r\n            //           onImageUpload,\r\n            //           onImageRemoveAll,\r\n            //           onImageUpdate,\r\n            //           onImageRemove,\r\n            //           isDragging,\r\n            //           dragProps,\r\n            //       }) => (\r\n            //         //   imageCount===1 ?\r\n            //         <div className=\"upload__image-wrapper\">\r\n            //             {file.length===0 && <div\r\n            //                 className={'upload__image-uploadBtn'}\r\n            //                 style={isDragging ? {borderColor: '#009B00'} : undefined}\r\n            //                 onClick={onImageUpload}\r\n            //                 {...dragProps}\r\n            //             >\r\n            //                 Добавить фото пользователя\r\n            //             </div>\r\n            //             }\r\n            //             {file.length!==0 &&\r\n            //             <div className={'upload__image-container'}>\r\n            //\r\n            //                 <div className=\"upload__image-item\">\r\n            //                     <img src={file[0]?.data_url} alt=\"\"/>\r\n            //                 </div>\r\n            //                 <span className=\"update__image-item\" onClick={() => onImageUpdate(0)}>Изменить фото профиля</span>\r\n            //                     <span className=\"update__image-item\" onClick={() => onImageRemove(0)}>Удалить фото профиля</span>\r\n            //             </div>\r\n            //             }\r\n            //            {/*{files.length!==0 && <div className={'upload__image-remove-allBtn'} onClick={onImageRemoveAll}>Удалить все файлы</div> }*/}\r\n            //         </div>\r\n            //         //\r\n            //         //       :\r\n            //         //       <div className=\"upload__image-wrapper\">\r\n            //         //           <div\r\n            //         //               className={'upload__image-uploadBtn'}\r\n            //         //               style={isDragging ? { borderColor: '#009B00' } : undefined}\r\n            //         //               onClick={onImageUpload}\r\n            //         //               {...dragProps}\r\n            //         //           >\r\n            //         //               Нажмите или перетащите файл, чтобы загрузить\r\n            //         //           </div>\r\n            //         //           <div className={'upload__image-container'}>\r\n            //         //               {\r\n            //         //                   file.map((image, index) => (\r\n            //         //                       <div key={index} className=\"upload__image-item\">\r\n            //         //                           <img src={image['data_url'] ? image['data_url'] : image} alt=\"\"  />\r\n            //         //                           <div className=\"image-item__btn-wrapper\">\r\n            //         //                               <span><img src={deleteImageSVG} onClick={() => onImageRemove(index)}/></span>\r\n            //         //                           </div>\r\n            //         //                       </div>\r\n            //         //                   ))\r\n            //         //               }\r\n            //         //           </div>\r\n            //         //           {file.length!==0 && <div className={'upload__image-remove-allBtn'} onClick={onImageRemoveAll}>Удалить все файлы</div> }\r\n            //         //       </div>\r\n            //     )}\r\n            //\r\n            //     )}\r\n            // </ImageUploading>\r\n\r\n        )\r\n}\r\n\r\nexport default ImgUploader","import React from 'react'\r\nimport {Field} from \"formik\";\r\nimport {urlSVG} from \"../../../assets\";\r\n\r\n\r\nconst URLField = props=>{\r\n    return(\r\n        <div className={'urlField'}><Field name={props.name} placeholder={props.placeholder}/><img src={urlSVG} alt=\"\"/></div>\r\n    )\r\n}\r\n\r\nexport default URLField","import React from 'react'\r\nimport './FieldWithIcon.css'\r\n\r\n\r\nconst FieldWithIcon = props=>{\r\n    return(\r\n        <span className={'fieldWithIcon'}>\r\n            <img src={props.iconInput} alt=\"\"/>\r\n            <input type=\"text\" name={props.name} placeholder={props.placeholder} onChange={(e)=>props.setFieldValue(props.name,e.target.value)}/>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default FieldWithIcon","import React, {useEffect, useState} from 'react'\r\nimport {GeolocationControl, Map, Placemark, SearchControl, YMaps} from \"react-yandex-maps\";\r\nimport './MapBlock.css'\r\n\r\n\r\n\r\n\r\nconst MapBlock = props=> {\r\n    const [center, setCenter] = useState([42.8746, 74.5698])\r\n    const ymaps = React.useRef(null);\r\n    const placemarkRef = React.useRef(null);\r\n    const mapRef = React.useRef(null);\r\n    const [address, setAddress] = React.useState(\"\");\r\n    const createPlacemark = (coords) => {\r\n\r\n        return new ymaps.current.Placemark(\r\n            coords,\r\n            {\r\n                iconCaption: \"Секунду...\"\r\n            },\r\n            {\r\n                preset: \"islands#violetDotIconWithCaption\",\r\n                draggable: false\r\n            }\r\n        );\r\n    };\r\n    useEffect(()=>{\r\n        props.setFieldValue(props.name,address)\r\n    },[address])\r\n    const getAddress = (coords) => {\r\n        setCenter(coords)\r\n        placemarkRef.current.properties.set(\"iconCaption\", \"Секунду...\");\r\n        ymaps.current.geocode(coords).then((res) => {\r\n            const firstGeoObject = res.geoObjects.get(0);\r\n            setAddress(firstGeoObject.getAddressLine());\r\n            placemarkRef.current.properties.set({\r\n                iconCaption: firstGeoObject.getAddressLine(),\r\n                balloonContent: firstGeoObject.getAddressLine()\r\n            });\r\n        });\r\n    };\r\n\r\n    const onMapClick = (e) => {\r\n        const coords = e.get(\"coords\");\r\n\r\n        if (placemarkRef.current) {\r\n            placemarkRef.current.geometry.setCoordinates(coords);\r\n        } else {\r\n            placemarkRef.current = createPlacemark(coords);\r\n            mapRef.current.geoObjects.add(placemarkRef.current);\r\n        }\r\n        getAddress(coords);\r\n    };\r\n\r\n    return (\r\n        <div className={'mapField'}>\r\n            <label htmlFor={props.name}>{props.placeholder}</label>\r\n            <input type=\"text\" name={props.name} value={address} readOnly/>\r\n            <YMaps enterprise query={{apikey: \"1a9e7380-7d7d-47a9-bdb3-eb90e115a1a3\"}}>\r\n                <div className={'map-container'}>\r\n                <Map\r\n                    modules={[\"Placemark\", \"geocode\", \"geoObject.addon.balloon\"]}\r\n                    instanceRef={mapRef}\r\n                    onLoad={(ympasInstance) => (ymaps.current = ympasInstance)}\r\n                    onClick={onMapClick}\r\n                    defaultState={{\r\n                        center: [42.8746, 74.5698],\r\n                        zoom: 16\r\n                    }}\r\n                    style={{width:'100%',height:'100%',position:'absolute'}}\r\n                />\r\n                </div>\r\n            </YMaps>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default MapBlock\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport './ScheduleField.css'\r\nimport {Field} from \"formik\";\r\n\r\n\r\nconst ScheduleField = props=>{\r\n    const daysArray = ['Понедельник',\"Вторник\",\"Среда\",\"Четверг\",\"Пятница\", \"Суббота\", \"Воскресенье\"]\r\n    console.log(props.arrayHelpers.form.values[props.name])\r\n    useEffect(()=>{\r\n        for (let i=0;i<7;i++){\r\n            props.arrayHelpers.push({comSpecID: '',\r\n                fromHour:'',\r\n                fromMinute: '',\r\n                toHour:'',\r\n                toMinute:'',\r\n                day:'',} )\r\n        }\r\n    },[])\r\n\r\n    return(\r\n        <div>\r\n            {\r\n                props.arrayHelpers.form.values[props.name].map((item, index) => {\r\n\r\n                    return(\r\n                        <div key={index} className={'schedule-item'}>\r\n                            <Field type=\"checkbox\" name={`${props.name}.${[index]}[\"day\"]`} value={index} />\r\n                            <span>{daysArray[index]}</span>\r\n                            <div className={'timeFrom'}><Field name={`${props.name}.${[index]}[\"fromHour\"]`} type=\"text\"/>:<Field name={`${props.name}.${[index]}[\"fromMinute\"]`} type=\"text\"/> </div>\r\n                            -\r\n                            <div className={'timeTo'} ><Field name={`${props.name}.${[index]}[\"toHour\"]`} type=\"text\"/>:<Field name={`${props.name}.${[index]}[\"toMinute\"]`}  type=\"text\"/> </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ScheduleField","import React, {useEffect} from 'react'\r\nimport {ErrorMessage, Field, FieldArray, Form} from \"formik\";\r\nimport ArrayField from \"../Fields/ArrayField/ArrayField\";\r\nimport RadioGroup from \"../Fields/RadioGroup/RadioGroup\";\r\nimport ImgUploader from \"../Fields/ImgUploader/ImgUploader\";\r\nimport URLField from \"../Fields/URLField/URLField\";\r\nimport FieldWithIcon from \"../Fields/FieldWithIcon/FieldWithIcon\";\r\nimport MapBlock from \"../Fields/MapBlock/MapBlock\";\r\nimport ScheduleField from \"../Fields/ScheduleField/ScheduleField\";\r\n\r\n\r\n\r\nconst FormInput = ({\r\n                name,\r\n                label,\r\n                labelObject,\r\n                placeholder,\r\n                type='',\r\n                imageCount,\r\n                styles,\r\n               selectInputData=[],\r\n               selectorProperty='',\r\n               additionally,\r\n                iconInput,\r\n               radioLabel,\r\n               required,\r\n               options=[]\r\n                   })=>{\r\n    return(\r\n        <div className=\"createOrEditField\" style={styles ? styles : undefined} >\r\n            {additionally &&   <span className={'formTitle'}>{additionally}</span>}\r\n            <label htmlFor={name}>{label} {required && <span className={'required_field'}>*</span>}</label>\r\n\r\n\r\n\r\n\r\n            { type === 'array' ?\r\n                    <FieldArray\r\n                    name={name}>\r\n                        { (arrayHelpers) => <ArrayField\r\n                            placeholder={placeholder}\r\n                            name={name}\r\n                            arrayHelpers={arrayHelpers}\r\n                            labelObject={labelObject}\r\n                        />}\r\n                    </FieldArray>\r\n\r\n            : type === 'radio' ?\r\n                    <RadioGroup name={name} label={radioLabel}/>\r\n\r\n                : type==='selector' ?\r\n                <Field name={name} as={'select'} placeholder={placeholder} >\r\n\r\n                {options[selectorProperty].map(item=> {\r\n                    return (\r\n                        <option key={item.id} value={item.id}>{item?.name ? item.name : item.fullName}</option>\r\n                    )})\r\n                }\r\n                </Field>\r\n                : type==='image' ?\r\n                <Field name={name} >\r\n                {({field:{name,value},form: { setFieldValue}}) =><ImgUploader setFieldValue={setFieldValue}\r\n                                                                              placeholder={placeholder}\r\n                                                                              imageCount={imageCount}\r\n                                                                              value={value}\r\n                                                                              name={name}/>}\r\n                </Field>\r\n                : type==='url' ?\r\n                                <URLField name={name} placeholder={placeholder}/>\r\n                : type ==='withIcon' ?\r\n                <Field name={name}>\r\n                    {({field:{name},form: { setFieldValue}}) =><FieldWithIcon setFieldValue={setFieldValue}\r\n                                                                              iconInput={iconInput}\r\n                                                                                  name={name}/>}\r\n                </Field>\r\n                :type==='map'?\r\n                <Field name={name}>\r\n                    {({field:{name},form: { setFieldValue}}) => <MapBlock setFieldValue={setFieldValue}\r\n                                                                          placeholder={placeholder}\r\n                                                                          name={name}\r\n                                                                            />}\r\n                </Field>\r\n                :type==='schedule'?\r\n                <FieldArray\r\n                    name={name}>\r\n                    {(arrayHelpers) =>\r\n                        <ScheduleField\r\n                            placeholder={placeholder}\r\n                            name={name}\r\n                            arrayHelpers={arrayHelpers}\r\n                        />\r\n                    }\r\n                </FieldArray>\r\n                 :\r\n                <Field name={name} placeholder={placeholder}/>\r\n\r\n            }\r\n            <span  className='formErrorMessage'><ErrorMessage name={name}/></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormInput\r\n","export const TOGGLE_MODAL = 'TOGGLE_MODAL'\r\n\r\nexport const TOGGLE_AUTH ='TOGGLE_AUTH'\r\nexport const TOGGLE_FETCH_LOADER = 'TOGGLE_FETCH_LOADER'\r\nexport const TOGGLE_PAGE_LOADER = 'TOGGLE_PAGE_LOADER'\r\nexport const WRITE_AUTH_MESSAGE = 'WRITE_AUTH_MESSAGE'\r\nexport const WRITE_USERNAME = 'WRITE_USERNAME'\r\n\r\n\r\nexport const WRITE_CATEGORIES = 'WRITE_CATEGORIES'\r\nexport const WRITE_SUBCATEGORIES = 'WRITE_SUBCATEGORIES'\r\nexport const WRITE_CATEGORY_BY_ID = 'WRITE_CATEGORY_BY_ID'\r\nexport const ADDED_CATEGORY = 'ADDED_CATEGORY'\r\nexport const DELETED_CATEGORY = 'DELETED_CATEGORY'\r\nexport const UPDATED_CATEGORY = 'UPDATED_CATEGORY'\r\n\r\n\r\nexport const WRITE_SPECIALISTS = 'WRITE_CATEGORIES'\r\nexport const WRITE_SPECIALIST_BY_ID = 'WRITE_CATEGORY_BY_ID'\r\nexport const ADDED_SPECIALIST = 'ADDED_CATEGORY'\r\nexport const DELETED_SPECIALIST = 'DELETED_CATEGORY'\r\nexport const UPDATED_SPECIALIST = 'UPDATED_CATEGORY'\r\n\r\n\r\nexport const WRITE_RECORD_ID = 'WRITE_RECORD_ID'\r\nexport const WRITE_ELEMENTS_TO_DELETE = 'WRITE_ELEMENTS_TO_DELETE'\r\nexport const WRITE_TABLE_MESSAGE = 'WRITE_TABLE_MESSAGE'\r\n\r\n\r\nexport const WRITE_STATISTIC = 'WRITE_STATISTIC'\r\nexport const WRITE_LAST_ACTIONS = 'WRITE_LAST_ACTIONS'\r\nexport const WRITE_CITIES = 'WRITE_CITIES'\r\n\r\n\r\nexport const WRITE_USERS = 'WRITE_USERS'\r\nexport const WRITE_USER_BY_ID = 'WRITE_USER_BY_ID'\r\n\r\nexport const DELETED_USER = 'DELETED_USER'\r\nexport const UPDATED_USER = 'UPDATED_USER'\r\n\r\n","import { TOGGLE_MODAL} from './types'\r\n\r\nconst initialState={\r\n    isOpenModal: {\r\n        isOpen:false,\r\n        title:'',\r\n        confirmFunc: undefined,\r\n        urlToTable : ''\r\n    }\r\n}\r\n\r\n\r\nexport const modalReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n\r\n        case TOGGLE_MODAL:\r\n            return{\r\n                ...state,\r\n                isOpenModal: action.payload\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const toggleModal = obj=>{\r\n    return{\r\n        type:  TOGGLE_MODAL,\r\n        payload: obj\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\n\r\n\r\n\r\nconst EditBtn = ({toggleModal,confirmFunc,urlToTable='main',disabled=false})=>{\r\n    return(\r\n        <div className='createOrEditBtn-submit'\r\n             onClick={async ()=>{\r\n                 if(!disabled){\r\n                     return toggleModal(\r\n                         {   isOpen:true,\r\n                             title:'Вы действительно хотите сохранить изменения?',\r\n                             confirmFunc: confirmFunc,\r\n                             urlToTable: urlToTable\r\n                         },\r\n                     )\r\n                 }\r\n                 return confirmFunc()\r\n             }}\r\n        >\r\n            Сохранить</div>\r\n                )\r\n}\r\n\r\nexport default\r\nconnect(null,{toggleModal})\r\n(EditBtn)","import React from 'react'\r\nimport {Form} from \"formik\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\n\r\n\r\n\r\nconst CancelBtn = ({toggleModal,urlToTable})=>{\r\n    return(\r\n        <div className='createOrEditBtn-cancel'\r\n                onClick={()=>toggleModal({\r\n                    isOpen:true,\r\n                    title:'Вы действительно хотите\\n' +\r\n                        'отменить изменения?',\r\n                    urlToTable: urlToTable})}\r\n              >\r\n        Отмена\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default\r\nconnect(null,{toggleModal})\r\n(CancelBtn)","import React from 'react'\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormInput from \"./FormInput\";\r\nimport {validationGenerator} from \"./validationGenerator\";\r\nimport EditBtn from \"../Btns/EditBtn\";\r\nimport CancelBtn from \"../Btns/CancelBtn\";\r\n\r\n\r\n\r\n\r\nconst Former = (props)=>{\r\n    const inputs = Object.keys(props.initialVals).map((item,index)=>{\r\n        return(\r\n            <FormInput\r\n                key={item}\r\n                name={item}\r\n                placeholder={props.inputConfig[index]?.placeholder}\r\n                label={props.inputConfig[index]?.label}\r\n                labelObject={props.inputConfig[index]?.labelObject}\r\n                radioLabel={props.inputConfig[index]?.radioLabel}\r\n                type={props.inputConfig[index]?.type}\r\n                imageCount={props.inputConfig[index]?.imageCount}\r\n                additionally={ props.inputConfig[index]?.additionally}\r\n                iconInput={ props.inputConfig[index]?.iconInput}\r\n                required={props.inputConfig[index]?.required}\r\n                selectInputData={props.inputConfig[index]?.selectInputData}\r\n                options={props.optionsForSelector}\r\n                selectorProperty={props.inputConfig[index]?.selectorProperty}\r\n                styles={props.inputConfig[index]?.styles}\r\n\r\n            />\r\n        )\r\n    })\r\n    const array= Object.keys(props.initialVals)\r\n    const schema = validationGenerator(array,props.inputConfig)\r\n    return(\r\n        <>\r\n        <div className={'createOrEditContainer__title'}>\r\n            <h2>{props.formTitle}</h2>\r\n        </div>\r\n        <div className='createOrEditContainer'>\r\n\r\n            <Formik\r\n                initialValues={props.initialVals}\r\n                validationSchema={Yup.object(schema)}\r\n                onSubmit={ async (values,e)=>{\r\n                    await props.handleSubmit(values)\r\n                }}\r\n            >\r\n                {({handleSubmit,errors,values}) =>{\r\n                    return (\r\n                        <Form>\r\n                            <div className={\"createOrEditContainer__fields\"}>\r\n                                {inputs}\r\n                            </div>\r\n\r\n                            <div className={\"createOrEditContainer__btns\"}>\r\n                                <EditBtn\r\n                                    values = {values}\r\n                                    urlToTable={props.urlToTable}\r\n                                    confirmFunc={handleSubmit}\r\n                                    disabled={Object.keys(errors).length !== 0 && true}\r\n                                />\r\n\r\n                                <CancelBtn\r\n                                    urlToTable={props.urlToTable}\r\n                                />\r\n                            </div>\r\n                        </Form>\r\n                    )}}\r\n\r\n            </Formik>\r\n        </div>\r\n            </>\r\n    )\r\n}\r\nexport default Former\r\n","import * as Yup from \"yup\";\r\n\r\nexport const validationGenerator = (key, config)=>{\r\n    let schema = {}\r\n    key.map((item,index)=> {\r\n        if(config[index]?.dataType) {\r\n            switch (config[index].dataType) {\r\n                case 'number':\r\n                    schema[item] = Yup.number();\r\n                    break;\r\n                case 'array':\r\n                    schema[item] = Yup.array();\r\n                    break;\r\n                default:\r\n                    schema[item] = Yup.string()\r\n            }\r\n        }\r\n            else{\r\n                schema[item] = Yup.string()\r\n            }\r\n\r\n\r\n\r\n        if(config[index]?.required){\r\n            schema[item] =  schema[item].required(config[index].required)\r\n        }\r\n        if(config[index]?.min){\r\n            schema[item] =  schema[item].min(config[index].min)\r\n        }\r\n        if(config[index]?.max){\r\n            schema[item] =  schema[item].min(config[index].max)\r\n        }\r\n        if(config[index]?.nullable){\r\n            schema[item] =  schema[item].nullable(config[index].nullable)\r\n        }\r\n    })\r\n    return schema\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Former from \"./Former\";\r\nimport './Form.css'\r\n//import Preloader from \"../Preloader/Preloader\";\r\nconst FormContainer = ({\r\n                           createReq,\r\n                           updReq,\r\n                           match,\r\n                           isLoading,\r\n                           ...props})=>{\r\n    useEffect(()=>{\r\n        if(props.loadSelectorData) {\r\n            for(let i=0;i<props.loadSelectorData.length;i++){\r\n                props.loadSelectorData[i]()\r\n            }\r\n        }\r\n        if(match.params?.id )  {\r\n            props.getByIdFunc(match.params.id)\r\n        }\r\n    },[])\r\n\r\n    const handleSubmit = async values=>{\r\n        console.log(values)\r\n        if(match.params?.id){\r\n            await updReq(match.params.id,values)\r\n        }else {\r\n            await  createReq(values)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n       (!isLoading && props.valueById ) || !match.params?.id\r\n           ?\r\n            <Former handleSubmit={handleSubmit}  {...props}/>\r\n           : <h2>Loading</h2>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(FormContainer)","import { WRITE_RECORD_ID,WRITE_ELEMENTS_TO_DELETE,WRITE_TABLE_MESSAGE} from './types'\r\n\r\nconst initialState={\r\n   recordViewId:'',\r\n    elementsToDelete: [],\r\n    tableMessage: ''\r\n}\r\n\r\n\r\nexport const tableReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n\r\n        case WRITE_RECORD_ID:\r\n            return{\r\n                ...state,\r\n                recordViewId: action.payload\r\n            }\r\n        case WRITE_ELEMENTS_TO_DELETE:\r\n            return{\r\n                ...state,\r\n                elementsToDelete: action.payload\r\n            }\r\n        case WRITE_TABLE_MESSAGE:\r\n            return{\r\n                ...state,\r\n                tableMessage: action.payload\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const writeTableMessage = str=>{\r\n    return{\r\n        type: WRITE_TABLE_MESSAGE,\r\n        payload: str\r\n    }\r\n}\r\nexport const writeElementsToDelete = values=>{\r\n    return{\r\n        type:  WRITE_ELEMENTS_TO_DELETE,\r\n        payload: values\r\n    }\r\n}\r\nexport const writeRecordId = value=>{\r\n    return{\r\n        type:  WRITE_RECORD_ID,\r\n        payload: value\r\n    }\r\n}\r\n\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport { Table, Switch, Radio, Form, Space } from 'antd';\r\n//import 'antd/dist/antd.css';\r\nimport './Table.css'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {writeElementsToDelete, writeTableMessage} from \"../../redux/reducers/tableReducer\";\r\n\r\nconst TableContainer = ({editing=true,...props})=>{\r\n    useEffect(()=>{\r\n        if(props.getDataFunc) {\r\n            props.getDataFunc()\r\n        }\r\n        return () => writeElementsToDelete([])\r\n    },[])\r\n\r\n\r\n    const rowSelection = {\r\n        onChange: (selectedRowKeys, selectedRows) => props.writeElementsToDelete(selectedRowKeys),\r\n    };\r\n    // const [clickedRow,setClickedRow] = useState(undefined)\r\n    // console.log(clickedRow)\r\n    //\r\n    // useEffect(()=>{\r\n    //\r\n    // },[clickedRow])\r\n    return(\r\n        <Table\r\n            onRow={ (record, rowIndex) => {\r\n                return {\r\n                onClick: event =>editing && props.history.push(`${props.urlToUpd}/${record.key}`), // click row\r\n                onDoubleClick: event => {}, // double click row\r\n                onContextMenu: event => {}, // right button click row\r\n                onMouseEnter: event => {}, // mouse enter row\r\n                onMouseLeave: event => {}, // mouse leave row\r\n            }\r\n            }}\r\n            rowSelection={props.deleting ? { ...rowSelection } : undefined}\r\n            tableLayout={'fixed'}\r\n            pagination={{ position:'BottomCenter' }}\r\n            columns={props.columns}\r\n            dataSource={  props.data  }\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        elementsToDelete : state.table.elementsToDelete\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{writeElementsToDelete,writeTableMessage})(withRouter(TableContainer))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport './Btns.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport {addSVG} from '../../assets'\r\n\r\nconst AddBtn = ({urlToCreate})=>{\r\n    return(\r\n        <Link to={urlToCreate} className='addBtn'><img src={addSVG} alt=\"\"/>Добавить</Link>\r\n    )\r\n}\r\nexport default AddBtn","import React from 'react'\r\nimport './Btns.css'\r\n\r\nimport {connect} from \"react-redux\";\r\nimport {deleteSVG} from \"../../assets\";\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\nimport {writeTableMessage} from \"../../redux/reducers/tableReducer\";\r\n\r\n\r\nconst DeleteBtn = ({toggleModal,deleteFunc,elementsToDelete,writeTableMessage})=>{\r\n\r\n    const confirmHandler = async ()=>{\r\n           await deleteFunc(elementsToDelete)\r\n    }\r\n\r\n    return(\r\n       <div className={'deleteBtn'}><img  src={deleteSVG} alt=\"\"\r\n             onClick={()=>{\r\n           if(elementsToDelete.length===0){\r\n            return writeTableMessage('Вы не выбрали ни одной записи!')\r\n           }\r\n           return toggleModal({isOpen:true,title:'Вы действительно хотите удалить запись(-и)?',confirmFunc: confirmHandler})\r\n        }}\r\n        />\r\n       </div>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        elementsToDelete : state.table.elementsToDelete\r\n    }\r\n}\r\nexport default\r\nconnect(mapStateToProps,{toggleModal,writeTableMessage})\r\n(DeleteBtn)","\r\nimport React from \"react\";\r\nimport {searchSVG} from \"../../assets\";\r\n\r\nconst SearchInput = ({\r\n                       name,\r\n\r\n                       placeholder,\r\n                       type='',\r\n                       selectInputData=[],\r\n                       selectorProperty,\r\n                       options=[]\r\n                   })=>{\r\n    return(\r\n        <div className=\"searchInput\">\r\n            <input type=\"text\" placeholder={placeholder}/>\r\n            <img src={searchSVG} alt=\"\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchInput","import React from 'react'\r\nimport SearchInput from \"./SearchInputs\";\r\n\r\n\r\n\r\nconst SearchForm = (props)=>{\r\n    const elements = props.searchInputsConfig.map(item=>{\r\n        return(\r\n            <SearchInput\r\n                placeholder={item?.label}\r\n                type={item?.type}\r\n                selectInputData={item?.selectInputData}\r\n                options={props.optionsForSelector}\r\n                selectorProperty={item?.selectorProperty}\r\n            />\r\n        )\r\n    })\r\n    return(\r\n        <div className={'searchInput-list'}>\r\n            {elements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm","import React from 'react'\r\nimport SearchForm from \"./SearchForm\";\r\nimport './Search.css'\r\n\r\nconst SearchContainer = props =>{\r\n\r\n    return(\r\n        <SearchForm {...props}/>\r\n    )\r\n}\r\n\r\nexport default SearchContainer","import React, {useEffect, useRef, useState} from 'react'\r\n\r\nimport {Link, Route, Switch, withRouter} from \"react-router-dom\";\r\n\r\n\r\nimport FormContainer from \"../FormGenerator/FormContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport TableContainer from \"../Table/TableContainer\";\r\nimport AddBtn from \"../Btns/AddBtn\";\r\nimport {avatarPNG} from \"../../assets\";\r\nimport DeleteBtn from \"../Btns/DeleteBtn\";\r\nimport SearchContainer from \"../SearchGenerator/SearchContainer\";\r\n\r\n\r\n\r\n\r\nconst PageRenderer = ({\r\n    history,\r\n    pageUrl,\r\n    pageTitle,\r\n\r\n    tableData,\r\n    tableColumnsConfig,\r\n\r\n    recordViewTitlesConfig,\r\n\r\n    creatorTitle,\r\n    updaterTitle,\r\n    formInputsConfig,\r\n    searchInputsConfig,\r\n    loadSelectorData,\r\n    optionsForSelectorData,\r\n    creatorInitialFormValues,\r\n    updaterInitialFormValues,\r\n    fileUploadKeys,\r\n\r\n    getDataFunc,\r\n    valueById,\r\n    getByIdFunc,\r\n    createFunc,\r\n    updateFunc,\r\n    clearFunc,\r\n    deleteFunc,\r\n\r\n    isLoading,\r\n\r\n\r\n    adding=true,\r\n    editing=true,\r\n    deleting=true,\r\n\r\n    username\r\n                      })=>{\r\n    //const clickOnRecord=(id)=>history.push(`/${pageUrl}/view/${id}`)\r\n    return(\r\n        <>\r\n            <a href=\"http://46.101.99.48/\"  target={'_blank'} className = 'page-content__open-site'>Открыть сайт</a>\r\n            <div className = 'page-content__profile'><span>{username.name}</span> <img  alt=\"\"/></div>\r\n            <Switch>\r\n                        <Route exact path={`/${pageUrl}`}>\r\n\r\n                            <span className='page-content__title'>{pageTitle}</span>\r\n                            <AddBtn\r\n                                urlToCreate={`/${pageUrl}/${pageUrl}-creator`}\r\n                            />\r\n                            {searchInputsConfig &&\r\n                            <SearchContainer\r\n                                searchInputsConfig={searchInputsConfig}\r\n                            />\r\n                            }\r\n                            <TableContainer\r\n                                isLoading={isLoading}\r\n                                getDataFunc={getDataFunc}\r\n                                data={tableData}\r\n                                columns={tableColumnsConfig}\r\n                                urlToUpd={`/${pageUrl}/${pageUrl}-updater`}\r\n\r\n                                //  handlerClick={clickOnRecord}\r\n                                deleting={deleting}\r\n                            />\r\n                            {deleting &&\r\n                            <DeleteBtn\r\n                                deleteFunc = {deleteFunc}\r\n                            />}\r\n                        </Route>\r\n                        {adding &&\r\n                        <Route exact path={`/${pageUrl}/${pageUrl}-creator`}>\r\n                            <FormContainer\r\n                                loadSelectorData={loadSelectorData}\r\n                                urlToTable={`/${pageUrl}`}\r\n                                createReq={createFunc}\r\n                                formTitle={creatorTitle}\r\n                                inputConfig={formInputsConfig}\r\n                                optionsForSelector={optionsForSelectorData}\r\n                                initialVals={creatorInitialFormValues}\r\n                                fileUploadKeys={fileUploadKeys}\r\n                                isLoading={isLoading}\r\n                            />\r\n                        </Route>\r\n                        }\r\n                        {editing &&\r\n                        <Route exact path={`/${pageUrl}/${pageUrl}-updater/:id`}>\r\n                            <FormContainer\r\n                                loadSelectorData={loadSelectorData}\r\n                                getByIdFunc={getByIdFunc}\r\n                                valueById={valueById}\r\n                                urlToTable={`/${pageUrl}`}\r\n                                initialVals={updaterInitialFormValues}\r\n                                updReq={updateFunc}\r\n                                formTitle={updaterTitle}\r\n                                inputConfig={formInputsConfig}\r\n                                optionsForSelector={optionsForSelectorData}\r\n                                isLoading={isLoading}\r\n                            />\r\n                        </Route>\r\n                        }\r\n                        {/*<Route path={`/${pageUrl}/view/:id`}>*/}\r\n                        {/*    <RecordViewerContainer*/}\r\n                        {/*        titles={recordViewTitlesConfig}*/}\r\n                        {/*        urlToUpd={`/${pageUrl}/${pageUrl}-updater`}*/}\r\n                        {/*        urlToTable={`/${pageUrl}`}*/}\r\n\r\n                        {/*        valueById={valueById}*/}\r\n                        {/*        getByIdFunc={getByIdFunc}*/}\r\n                        {/*        clearFunc={clearFunc}*/}\r\n                        {/*        isLoading={isLoading}*/}\r\n\r\n                        {/*        editing={editing}*/}\r\n                        {/*    />*/}\r\n                        {/*</Route>*/}\r\n                    </Switch>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        isLoading : state.auth.isFetchLoader,\r\n        username: state.auth.username\r\n    }\r\n}\r\nexport default\r\n    connect(mapStateToProps)(withRouter(\r\n    PageRenderer\r\n    ))","export const categoryInputConfig = [{\r\n    label: \"Категория\",\r\n    placeholder: \"Красивая категория\",\r\n    required: \"Впишите название категории\",\r\n},\r\n    {\r\n        label: \"Подкатегории\",\r\n        placeholder: \"Добавить подкатегорию\",\r\n        type: 'array',\r\n        dataType: 'array',\r\n        labelObject: {name: ''}\r\n    },\r\n\r\n]","import * as axios from 'axios'\r\nconst tokenGetter = ()=>{ return { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('token')}`} }}\r\nconsole.log(tokenGetter())\r\nconst instance = axios.create({\r\n    baseURL: 'http://46.101.99.48:8000',\r\n    //headers: {\"Authorization\" : `Bearer ${localStorage.getItem('accessToken')}`}\r\n})\r\nexport const authReq = (data)=>instance.post('/User/SignIn',data)\r\n//export const authRefreshReq = (data)=>instance.post('refresh',data).then(response=>response.data)\r\n\r\nexport const statisticGetReq = ()=>instance.get('/Admin/Statistics',tokenGetter()).then(response=>response.data)\r\nexport const lastActionsGetReq = ()=>instance.get('/Admin/Actions',tokenGetter()).then(response=>response.data)\r\nexport const citiesGetReq = ()=>instance.get('/Admin/Cities',tokenGetter()).then(response=>response.data)\r\n\r\n\r\nexport const categoryGetReq = ()=>instance.get('/Admin/Categories',tokenGetter()).then(response=>response.data)\r\nexport const subcategoryGetReq = ()=>instance.get('/Admin/Subcategories',tokenGetter()).then(response=>response.data)\r\nexport const categoryGetByIdReq = (id)=>instance.get(`/Admin/Categories/${id}`,tokenGetter()).then(response=>response.data)\r\nexport const categoryPostReq = (data)=>instance.post('/Admin/Category/Subcategory',data,tokenGetter())\r\nexport const categoryDelReq = (id)=>instance.delete(`/Admin/Category`,{ headers: {\"Authorization\" : `Bearer ${localStorage.getItem('token')}`} ,data : id })\r\nexport const categoryUpdReq = (data,id)=>instance.put(`categories/${id}`,data,tokenGetter())\r\n//tokenGetter(),id\r\n\r\n\r\nexport const specialistGetReq = ()=>instance.get('/Admin/Companies',tokenGetter()).then(response=>response.data)\r\nexport const specialistGetByIdReq = (id)=>instance.get(`/Admin/Companies/${id}`).then(response=>response.data)\r\nexport const specialistPostReq = (data)=>instance.post('/Admin/Companies/Subcategory',JSON.parse(data),tokenGetter())\r\nexport const specialistDelReq = (id)=>instance.delete(`/Admin/Companies`,{ headers: {\"Authorization\" : `Bearer ${localStorage.getItem('token')}`} ,data : id })\r\nexport const specialistUpdReq = (data,id)=>instance.put(`/Admin/Companies/${id}`,data)\r\n\r\nexport const usersGetReq = ()=>instance.get('/Admin/Users',tokenGetter()).then(response=>response.data)\r\nexport const userGetByIdReq = (id)=>instance.get(`/Admin/Users/${id}`,tokenGetter()).then(response=>response.data)\r\n//export const specialistPostReq = (data)=>instance.post('/Admin/Companies/Subcategory',JSON.parse(data),tokenGetter())\r\nexport const userDelByIdReq = (id)=>instance.delete(`/Admin/Users`,{ headers: {\"Authorization\" : `Bearer ${localStorage.getItem('token')}`} ,data : id })\r\nexport const userUpdReq = (data,id)=>instance.put(`/Admin/Users/${id}`,data,tokenGetter())","export const getTemplate = async (dispatch,getFunc, actionType,toggleLoader,id=null)=>{\r\n    dispatch(toggleLoader(true));\r\n    let response = await getFunc(id);\r\n    console.log(response)\r\n    let changedResponse =[]\r\n    if(Array.isArray(response?.data) || Array.isArray(response)) {\r\n        if (response?.data) {\r\n            changedResponse = response.data.map(item => {\r\n                item[\"key\"] = item.id\r\n                return item\r\n            })\r\n        } else {\r\n            changedResponse = response.map(item => {\r\n                item[\"key\"] = item.id\r\n                return item\r\n            })\r\n        }\r\n    }else{\r\n        changedResponse=response\r\n        changedResponse['key']=response.id\r\n    }\r\n    console.log(changedResponse)\r\n    dispatch({type:actionType,payload: changedResponse})\r\n    dispatch(toggleLoader(false))\r\n\r\n}","\r\n\r\nexport const createOrChangeTemplate = async (\r\n    dispatch,\r\n    func,\r\n    data,\r\n    actionType,\r\n    toggleLoader,\r\n    id=''\r\n\r\n    )=>{\r\n    dispatch(toggleLoader);\r\n    await func(data,id).then(resp=>{\r\n       const copyData =  resp.data\r\n        copyData[\"key\"] = copyData.id\r\n        delete copyData.id\r\n        dispatch({type:actionType,payload:copyData})\r\n    }).catch(err=>console.log(err.response))\r\n    dispatch(toggleLoader)\r\n}","export const deleteTemplate = async (dispatch,deleteFunc,id,toggleLoader,actionType)=>{\r\n    dispatch(toggleLoader(true))\r\n    dispatch({type:actionType,payload: id})\r\n    await deleteFunc(id).then((resp)=>console.log(resp))\r\n   .catch(resp=>console.log(resp))\r\n    dispatch(toggleLoader(false))\r\n}","export const updateItemInStore = (state,data,type)=>{\r\n    let idx = -1;\r\n    let newArrayData = [...state]\r\n    switch (type) {\r\n        case 'delete':\r\n            data.map(mapItem=>{\r\n                idx = newArrayData.findIndex((item)=>item.key === parseInt(mapItem))\r\n                newArrayData = [...newArrayData.slice(0, idx), ...newArrayData.slice(idx + 1)]\r\n            })\r\n            return newArrayData\r\n        case 'update':\r\n            idx = state.findIndex(item=>item.id === parseInt(data.id))\r\n            return [...newArrayData.slice(0, idx),data, ...newArrayData.slice(idx + 1)]\r\n        default:{\r\n            return\r\n        }\r\n    }\r\n}","import {DELETED_USER, UPDATED_USER, WRITE_USER_BY_ID, WRITE_USERS} from './types'\r\nimport {\r\n    userDelByIdReq,\r\n    userGetByIdReq, usersGetReq, userUpdReq,\r\n} from \"../../utils/Requests\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {toggleLoader} from \"./authReducer\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\n\r\nconst initialState={\r\n    users: [],\r\n    userById: {}\r\n}\r\n\r\n\r\nexport const userReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case WRITE_USERS:\r\n            return{\r\n                ...state,\r\n                users: action.payload\r\n            }\r\n        case WRITE_USER_BY_ID:\r\n            return{\r\n                ...state,\r\n                userById: action.payload\r\n            }\r\n        case DELETED_USER:\r\n            return{\r\n                ...state,\r\n                users: updateItemInStore(state.users,action.payload,'delete')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const clearUser = ()=>{\r\n    return{\r\n        type: WRITE_USER_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const getUsers = ()=> {\r\n    return async dispatch => getTemplate(dispatch, usersGetReq, WRITE_USERS, toggleLoader)\r\n}\r\nexport const getUserById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, userGetByIdReq, WRITE_USER_BY_ID, toggleLoader,id)\r\n}\r\nexport const deleteUser = id =>{\r\n    return async dispatch => {\r\n        for(let i=0;i<id.length;i++){\r\n            await deleteTemplate(dispatch,userDelByIdReq,id[i],toggleLoader,DELETED_USER)\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateUser = (id,data)=>{\r\n    return async dispatch =>createOrChangeTemplate(dispatch,userUpdReq,data,UPDATED_USER,toggleLoader,id)\r\n}\r\n\r\n\r\n","import {\r\n    TOGGLE_AUTH,\r\n    TOGGLE_FETCH_LOADER,\r\n    TOGGLE_PAGE_LOADER,\r\n    WRITE_AUTH_MESSAGE,\r\n    WRITE_USERNAME\r\n} from './types'\r\nimport {authReq, userGetByIdReq} from \"../../utils/Requests\";\r\nimport {getUserById} from \"./userReducer\";\r\n\r\n\r\nconst initialState={\r\n    isFetchLoader: false,\r\n    isAuthorized: false,\r\n    isPageLoader: false,\r\n    authErrorMessage: undefined,\r\n    username: {}\r\n}\r\n\r\n\r\nexport const authReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case TOGGLE_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuthorized: action.payload\r\n            }\r\n        case TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                isFetchLoader: action.payload\r\n            }\r\n        case TOGGLE_PAGE_LOADER:\r\n            return{\r\n                ...state,\r\n                isPageLoader: action.payload\r\n\r\n            }\r\n        case WRITE_AUTH_MESSAGE:\r\n            return {\r\n                ...state,\r\n                authErrorMessage: action.payload\r\n            }\r\n        case WRITE_USERNAME:\r\n            return {\r\n                ...state,\r\n                username: action.payload\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nconst writeUsername = value=>{\r\n    return{\r\n        type: 'WRITE_USERNAME',\r\n        payload: value\r\n    }\r\n}\r\nexport const writeAuthMessage = str =>{\r\n    return{\r\n        type: 'WRITE_AUTH_MESSAGE',\r\n        payload: str\r\n    }\r\n}\r\nexport const togglePageLoader = bool =>{\r\n    return{\r\n        type: 'TOGGLE_PAGE_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\nexport const toggleAuth = value =>{\r\n    return{\r\n        type: 'TOGGLE_AUTH',\r\n        payload: value\r\n    }\r\n}\r\nexport const toggleLoader = bool=>{\r\n    return{\r\n        type: 'TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\nexport const writeProfile = id=>{\r\n    return async dispatch =>{\r\n       await userGetByIdReq(id).then((resp)=>{\r\n           dispatch(writeUsername(resp))\r\n            console.log(resp)\r\n        })\r\n    }\r\n}\r\n// export const authRefresh = data=> {\r\n//     return async dispatch => {\r\n//         dispatch(toggleLoader(true))\r\n//         await authRefreshReq(data).then(async response => {\r\n//             localStorage.setItem(\"accessToken\", response.result.body.accessToken)\r\n//             localStorage.setItem(\"tokenExpirationTime\", response.result.body.tokenExpirationTime)\r\n//             localStorage.setItem(\"refreshExpirationTime\", response.result.body.refreshExpirationTime)\r\n//             localStorage.setItem(\"id\", response.result.body.id)\r\n//             localStorage.setItem(\"refreshToken\", response.result.body.refreshToken)\r\n//             await userGetByIdReq(response.result.body.id).then(response=>{\r\n//                 console.log(response)\r\n//                 dispatch(writeUsername(response.result.phoneNumber))\r\n//             })\r\n//             console.log(response)\r\n//             dispatch(toggleAuth(true))\r\n//         }).catch(err => console.log(err))\r\n//         dispatch(toggleLoader(false))\r\n//     }\r\n// }\r\nexport const authSignIn = data =>{\r\n    return async dispatch =>{\r\n        dispatch(toggleLoader(true))\r\n        await authReq(data).then(response=>{\r\n            console.log(response)\r\n            //if(response.status.ok){\r\n                localStorage.setItem(\"token\", response.data.token)\r\n                localStorage.setItem(\"id\", response.data.id)\r\n                dispatch(toggleAuth(true))\r\n           // }else {\r\n            //    dispatch(writeAuthMessage('Неверно введены данные.'))\r\n           // }\r\n            //     await userGetByIdReq(response.result.body.id).then(response=>{\r\n            //         console.log(response)\r\n            //         dispatch(writeUsername(response.result.phoneNumber))\r\n            //     })\r\n            //\r\n            //     setTimeout(()=>dispatch(togglePageLoader(false)),4000)\r\n           // }\r\n                //\r\n        })\r\n        dispatch(toggleLoader(false))\r\n    }\r\n}\r\n\r\n\r\n","import {\r\n    WRITE_CATEGORIES,\r\n    WRITE_CATEGORY_BY_ID,\r\n    ADDED_CATEGORY,\r\n    DELETED_CATEGORY,\r\n    UPDATED_CATEGORY,\r\n    WRITE_SUBCATEGORIES\r\n} from './types'\r\nimport {\r\n    categoryDelReq,\r\n   categoryGetByIdReq,\r\n    categoryGetReq,\r\n    categoryPostReq,\r\n    categoryUpdReq,\r\n    subcategoryGetReq\r\n} from \"../../utils/Requests\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {toggleLoader} from \"./authReducer\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\n//import {toClearImageArray} from \"../../utils/templates/toClearImageArray\";\r\n\r\nconst initialState={\r\n    categories: [],\r\n    categoryById: {},\r\n    subcategories: []\r\n}\r\n\r\n\r\nexport const categoryReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case WRITE_CATEGORIES:\r\n            return{\r\n                ...state,\r\n                categories: action.payload\r\n            }\r\n        case WRITE_SUBCATEGORIES:\r\n            return {\r\n                ...state,\r\n                subcategories: action.payload\r\n            }\r\n        case WRITE_CATEGORY_BY_ID:\r\n            return{\r\n                ...state,\r\n                categoryById: action.payload\r\n            }\r\n        case ADDED_CATEGORY:\r\n            return {\r\n                ...state,\r\n                categories: [\r\n                    ...state.categories,\r\n                    action.payload]\r\n            }\r\n        case DELETED_CATEGORY:\r\n            return{\r\n                ...state,\r\n                categories: updateItemInStore(state.categories,action.payload,'delete')\r\n            }\r\n        case UPDATED_CATEGORY:\r\n            return {\r\n                ...state,\r\n                categories: updateItemInStore(state.categories,action.payload,'update')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const clearCategory = ()=>{\r\n    return{\r\n        type: WRITE_CATEGORY_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const getSubCategories = ()=>{\r\n    return async dispatch =>getTemplate(dispatch,subcategoryGetReq,WRITE_SUBCATEGORIES,toggleLoader)\r\n}\r\nexport const getCategory = ()=> {\r\n    return async dispatch => getTemplate(dispatch, categoryGetReq, WRITE_CATEGORIES, toggleLoader)\r\n}\r\nexport const getCategoryById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, categoryGetByIdReq, WRITE_CATEGORY_BY_ID, toggleLoader,id)\r\n}\r\nexport const createCategory = data=>{\r\n\r\n        return async dispatch => createOrChangeTemplate(dispatch,categoryPostReq,data,ADDED_CATEGORY,toggleLoader)\r\n}\r\nexport const deleteCategory = id =>{\r\n    return async dispatch =>  deleteTemplate(dispatch,categoryDelReq,id,toggleLoader,DELETED_CATEGORY)\r\n}\r\nexport const updateCategory = (id,data) =>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,categoryUpdReq,data,UPDATED_CATEGORY,toggleLoader,id)\r\n}\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {CategoryColumns} from \"../../configs/Categories/tableColumnsConfig\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {categoryInputConfig} from \"../../configs/Categories/formInputsConfig\";\r\nimport {\r\n    createCategory,\r\n    deleteCategory,\r\n    getCategory,\r\n    getCategoryById,\r\n    updateCategory\r\n} from \"../../redux/reducers/categoryReducer\";\r\n\r\n\r\n\r\n\r\n\r\nconst CategoriesPage = ({categories=[],categoryById,getCategory,getCategoryById,createCategory,updateCategory,deleteCategory,clearCategory})=>{\r\n    console.log(categoryById)\r\n    console.log(categories)\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'categories'}\r\n            pageTitle ={'Категории'}\r\n\r\n            tableData={categories}\r\n            tableColumnsConfig={CategoryColumns}\r\n\r\n           // recordViewTitlesConfig={recordViewCategoryConfig}\r\n\r\n            creatorTitle={'Добавление категории'}\r\n            updaterTitle={'Изменение категории'}\r\n           formInputsConfig={categoryInputConfig}\r\n            creatorInitialFormValues={{\r\n                name: '',\r\n                subcategories: []}}\r\n            updaterInitialFormValues={{\r\n                name: categoryById?.name,\r\n                subcategories: categoryById?.subcategories,\r\n            }}\r\n            getDataFunc={getCategory}\r\n            valueById={categoryById}\r\n            getByIdFunc={getCategoryById}\r\n            createFunc={createCategory}\r\n            updateFunc={updateCategory}\r\n           //  clearFunc={clearCategory}\r\n            deleteFunc={deleteCategory}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        categories: state.category.categories,\r\n        categoryById: state.category.categoryById\r\n    }\r\n}\r\nexport  default connect(mapStateToProps,\r\n    {\r\n        getCategory,\r\n        getCategoryById,\r\n        createCategory,\r\n        updateCategory,\r\n        deleteCategory,\r\n        //clearCategory\r\n    }\r\n)(CategoriesPage)\r\n","import React, {useEffect, useState} from 'react'\r\nimport './Modal.css'\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\n\r\n\r\nconst Modal = ({modal,toggleModal,history,isLoading})=>{\r\n    const handleConfirm = ()=>{\r\n        if(modal.confirmFunc) {\r\n           modal.confirmFunc()\r\n        }\r\n        toggleModal({isOpen: false, title: ''})\r\n        history.push(modal.urlToTable)\r\n    }\r\n\r\n    return(\r\n\r\n        <>\r\n        <div className='modal__wrapper' onClick={()=>toggleModal({isOpen:false,title:''})}>\r\n        </div>\r\n            <div className='modal__container'>\r\n            <h2>{modal.title}</h2>\r\n\r\n                    <div className='modal__btns'>\r\n                        <div className='modal__btns-confirm' onClick={() => handleConfirm()}>Да</div>\r\n                        <div className='modal__btns-cancel' onClick={() => toggleModal({\r\n                            isOpen: false,\r\n                            title: ''\r\n                        })}>Нет\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        modal : state.modal.isOpenModal\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{toggleModal})(withRouter(Modal));","export const userInputConfig = [\r\n    {\r\n        placeholder: \"Добавление фото\",\r\n       // required: \"Впишите имя пользователя\",\r\n        //additionally: 'Личные данные'\r\n        type: 'image',\r\n        styles: {height:'120px'}\r\n    },\r\n    {\r\n    label: \"Имя\",\r\n    placeholder: \"Введите имя\",\r\n    required: \"Впишите имя пользователя\",\r\n    additionally: 'Личные данные'\r\n    },\r\n    {\r\n        label: \"Фамилия\",\r\n        placeholder: \"Введите фамилию\",\r\n        required: \"Впишите фамилию пользователя\",\r\n    },\r\n    {\r\n        label: \"Отчество\",\r\n        placeholder: \"Введите отчество\",\r\n        required: \"Впишите отчество пользователя\",\r\n    },\r\n    {\r\n        label: \"Дата рождения\",\r\n        placeholder: \"Дата рождения пользователя\",\r\n        required: \"Впишите дату рождения пользователя\",\r\n    },\r\n    {\r\n        label: \"Пол\",\r\n        required: \"Укажите пол пользователя\",\r\n        type: 'radio',\r\n        radioLabel: ['Женский','Мужской']\r\n    },\r\n    {\r\n        label: \"Город\",\r\n        placeholder: \"Город пользователя\",\r\n        required: \"Укажите город\",\r\n        type: 'selector',\r\n        selectorProperty: 'cityID'\r\n    },\r\n\r\n    {\r\n        label: \"Телефон\",\r\n        placeholder: \"Телефон пользователя\",\r\n        required: \"Впишите номер телефона пользователя\",\r\n        additionally: 'Контакты'\r\n    },\r\n    {\r\n        label: \"Ссылка на соц. сети\",\r\n        placeholder: \"Вставьте URL Instagram\",\r\n    },\r\n    {\r\n        label: \"Почта\",\r\n        placeholder: \"Введите почту\",\r\n        required: \"Впишите почту пользователя\",\r\n    },\r\n    {\r\n        label: \"Пароль\",\r\n        placeholder: \"Введите пароль\",\r\n        additionally: 'Пароль',\r\n        styles: {marginTop:'150px'}\r\n    },\r\n    {\r\n        label: \"Повтор пароля\",\r\n        placeholder: \"Повторите пароль\",\r\n    },\r\n    {\r\n        additionally: 'Роль',\r\n        placeholder: \"Повторите пароль\",\r\n    },\r\n]\r\n","import React from \"react\";\r\n\r\nexport const UserColumns  =[\r\n    {\r\n        title:'ID',\r\n        dataIndex: 'key',\r\n        key:'key',\r\n        render: (value)=><span style={{color: '#1E90FF'}}>{value}</span>\r\n    },\r\n    {\r\n        title: \"Имя\",\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: \"Фамилия\",\r\n        dataIndex: 'surname',\r\n        key: 'surname',\r\n    },\r\n    {\r\n        title: \"Отчество\",\r\n        dataIndex: 'patronymic',\r\n        key: 'patronymic',\r\n    },\r\n    {\r\n        title: \"Роль\",\r\n        dataIndex: 'role',\r\n        key: 'role',\r\n        render: (value)=>{\r\n            if(value==='Superadmin'){\r\n                return <span style={{color: '#FFFFFF',background: '#FFC822',borderRadius: '5px',padding: '3px 6px'}}>Суперадмин</span>\r\n            }\r\n            if(value==='admin'){\r\n                return <span style={{color: '#FFFFFF',background: '#1E90FF',borderRadius: '5px',padding: '3px 6px'}}>Админ</span>\r\n            }\r\n            return '------'\r\n        }\r\n    },\r\n    {\r\n        title: \"Дата создания\",\r\n        dataIndex: 'registered',\r\n        key: 'registered',\r\n    },\r\n]","import {\r\n    WRITE_STATISTIC, WRITE_LAST_ACTIONS, WRITE_CITIES,\r\n} from './types'\r\nimport {\r\n    lastActionsGetReq,\r\n    statisticGetReq,citiesGetReq\r\n} from \"../../utils/Requests\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {toggleLoader} from \"./authReducer\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\n\r\nconst initialState={\r\n    statistic: {},\r\n    lastActions: [],\r\n    cities: []\r\n}\r\n\r\n\r\nexport const mainReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case WRITE_CITIES:\r\n            return{\r\n                ...state,\r\n                cities: action.payload\r\n            }\r\n        case WRITE_STATISTIC:\r\n            return{\r\n                ...state,\r\n                statistic: action.payload\r\n            }\r\n\r\n        case WRITE_LAST_ACTIONS:\r\n            return {\r\n                ...state,\r\n                lastActions: [\r\n                    ...state.lastActions,\r\n                    action.payload]\r\n            }\r\n\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const getCities = ()=> {\r\n    return async dispatch => getTemplate(dispatch, citiesGetReq, WRITE_CITIES, toggleLoader)\r\n}\r\nexport const getStatistic = ()=> {\r\n    return async dispatch => getTemplate(dispatch, statisticGetReq, WRITE_STATISTIC, toggleLoader)\r\n}\r\n\r\nexport const getActions = ()=> {\r\n    return async dispatch => getTemplate(dispatch, lastActionsGetReq, WRITE_LAST_ACTIONS, toggleLoader)\r\n}\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {CategoryColumns} from \"../../configs/Categories/tableColumnsConfig\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {categoryInputConfig} from \"../../configs/Categories/formInputsConfig\";\r\nimport {userInputConfig} from \"../../configs/Users/formInputsConfig\";\r\nimport {UserColumns} from \"../../configs/Users/tableColumnsConfig\";\r\nimport {userSearchInputConfig} from \"../../configs/Users/searchInputsConfig\";\r\nimport {deleteUser, getUserById, getUsers, updateUser} from \"../../redux/reducers/userReducer\";\r\nimport {getCities} from \"../../redux/reducers/mainReducer\";\r\n\r\n\r\n\r\n\r\n\r\nconst UsersPage = ({users,cities,userById,getCities,getUsers,getUserById,updateUser,deleteUser})=>{\r\n    console.log(userById)\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'users'}\r\n            pageTitle ={'Пользователи'}\r\n\r\n            tableData={users}\r\n            tableColumnsConfig={UserColumns}\r\n\r\n\r\n            creatorTitle={'Добавление пользователя'}\r\n            updaterTitle={'Изменение пользователя'}\r\n            formInputsConfig={userInputConfig}\r\n            optionsForSelectorData={{\r\n                cityID: cities ? [...cities] : []\r\n            }}\r\n            loadSelectorData={[getCities]}\r\n            creatorInitialFormValues={{\r\n                avatarPath: '',\r\n                name: \"\",\r\n                surname: \"\",\r\n                patronymic: \"\",\r\n                birthDate: \"\",\r\n                gender: 0,\r\n                cityID: '',\r\n                phoneNumber: \"\",\r\n                instagram: \"\",\r\n                email: \"\",\r\n                password: '',\r\n                repeatPassword: ''\r\n\r\n            }}\r\n            updaterInitialFormValues={{\r\n                avatarPath: userById?.avatarPath,\r\n                name: userById?.name,\r\n                surname: userById?.surname,\r\n                patronymic: userById?.patronymic,\r\n                birthDate: userById?.birthDate,\r\n                gender: userById?.gender,\r\n                cityID: userById?.cityID,\r\n                phoneNumber: userById?.phoneNumber,\r\n                instagram: userById?.instagram,\r\n                email: userById?.email,\r\n                password: '',\r\n                repeatPassword: '',\r\n                role: userById?.role\r\n            }}\r\n            //searchInputsConfig = {userSearchInputConfig}\r\n             getDataFunc={getUsers}\r\n             valueById={userById}\r\n             getByIdFunc={getUserById}\r\n             updateFunc={updateUser}\r\n             deleteFunc={deleteUser}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        users: state.user.users,\r\n        userById: state.user.userById,\r\n        cities: state.main.cities\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,{getUsers,getCities,getUserById,deleteUser,updateUser})(UsersPage)\r\n","import {facebookSVG, instagramSVG, telegramSVG, whatsappSVG} from \"../../assets\";\r\n\r\nexport const advertisementInputConfig = [\r\n    {\r\n        placeholder: \"Добавление фото\",\r\n        // required: \"Впишите имя пользователя\",\r\n        //additionally: 'Личные данные'\r\n        type: 'image',\r\n        styles: {height:'120px'}\r\n    },\r\n    {\r\n        label: \"Имя\",\r\n        placeholder: \"Введите имя\",\r\n        required: \"Впишите имя пользователя\",\r\n    },\r\n    {\r\n        label: \"Категории\",\r\n        placeholder: \"Выберите категорию\",\r\n        required: \"Выберите категорию\",\r\n        type: 'selector',\r\n        selectorProperty: 'category',\r\n        dataType: 'array'\r\n    },\r\n    {\r\n        label: \"Подкатегория\",\r\n        placeholder: \"Выберите подкатегорию\",\r\n        required: \"Выберите подкатегорию\",\r\n        type: 'selector',\r\n        selectorProperty: 'subcategories',\r\n    },\r\n    {\r\n      label: 'URL',\r\n      placeholder: 'https://www.naidi.kg/....',\r\n      type: 'url',\r\n\r\n    },\r\n    {\r\n        label: \"Город\",\r\n        placeholder: \"Город пользователя\",\r\n        required: \"Укажите город\",\r\n        type: 'selector',\r\n        selectorProperty: 'cityID'\r\n    },\r\n    {\r\n        label: \"Оказываете ли вы услуги выездом?\",\r\n        required: \"Укажите пол пользователя\",\r\n        type: 'radio',\r\n        radioLabel: ['С выездом','Без выезда']\r\n    },\r\n    {\r\n      label: 'Адрес работы',\r\n      required: 'Укажите адрес работы',\r\n        type: 'map'\r\n    },\r\n    {\r\n        label: \"Комментарии к адресу\",\r\n        placeholder: \"Введите уточнение\",\r\n\r\n    },\r\n\r\n    {\r\n        label: \"Телефон\",\r\n        placeholder: \"Телефон пользователя\",\r\n        type: 'array',\r\n    },\r\n    {\r\n        label: \"Почта специалиста\",\r\n        placeholder: \"Введите почту\",\r\n    },\r\n    {\r\n        label: \"Веб-сайт специалиста\",\r\n        placeholder: \"Введите веб-сайт\",\r\n    },\r\n    {\r\n        label: \"Ссылка на соц. сети\",\r\n        placeholder: \"Номер в WhatsApp\",\r\n        type:'withIcon',\r\n        iconInput: whatsappSVG\r\n    },\r\n    {\r\n        placeholder: \"URL Telegram\",\r\n        type:'withIcon',\r\n        iconInput: telegramSVG\r\n    },\r\n    {\r\n        placeholder: \"Вставьте URL Instagram\",\r\n        type:'withIcon',\r\n        iconInput: instagramSVG\r\n    },\r\n\r\n    {\r\n        placeholder: \"URL Facebook\",\r\n       type:'withIcon',\r\n        iconInput: facebookSVG\r\n    },\r\n    // {\r\n    //   type: 'schedule'\r\n    // },\r\n    {\r\n        placeholder: \"Описание об опыте специалиста\",\r\n        additionally: 'Информация об опыте специалиста'\r\n    },\r\n    {\r\n      placeholder: 'Исполнитель не добавлял фото',\r\n        type: 'image',\r\n       imageCount: 4,\r\n        dataType: 'array'\r\n    },\r\n    {\r\n        placeholder: \"Добавить еще услугу\",\r\n        additionally: 'Добавление услуг',\r\n        type: 'array',\r\n        labelObject: {name: 'Название услуги',cost: 'Цена услуги'}\r\n    },\r\n\r\n]\r\n","import Moment from \"react-moment\";\r\nimport React from \"react\";\r\n\r\nexport const AdvertisementColumns  =[\r\n\r\n    {\r\n        title:'ID',\r\n        dataIndex: 'key',\r\n        key:'key',\r\n        render: (value)=><span style={{color: '#1E90FF'}}>{value}</span>\r\n\r\n    },\r\n    {\r\n        title: \"Название\",\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n    },\r\n    {\r\n        title: \"Подкатегория\",\r\n        dataIndex: 'subcategoryName',\r\n        key: 'subcategoryName',\r\n\r\n    },\r\n    {\r\n        title: \"Дата создания\",\r\n        dataIndex: 'createdAt',\r\n        key: 'createdAt',\r\n        render: (value)=><Moment format=\"DD.MM.YYYY\" >{value}</Moment>\r\n    },\r\n]","import {\r\n    WRITE_SPECIALISTS,\r\n    WRITE_SPECIALIST_BY_ID,\r\n    ADDED_SPECIALIST,\r\n    DELETED_SPECIALIST,\r\n    UPDATED_SPECIALIST,\r\n} from './types'\r\nimport {\r\n    specialistDelReq,\r\n    specialistGetByIdReq,\r\n    specialistGetReq,\r\n    specialistPostReq,\r\n    specialistUpdReq\r\n} from \"../../utils/Requests\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {toggleLoader} from \"./authReducer\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\n//import {toClearImageArray} from \"../../utils/templates/toClearImageArray\";\r\n\r\nconst initialState={\r\n    specialists: [],\r\n    specialistById: {}\r\n}\r\n\r\n\r\nexport const specialistReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case WRITE_SPECIALISTS:\r\n            return{\r\n                ...state,\r\n                specialists: action.payload\r\n            }\r\n        case WRITE_SPECIALIST_BY_ID:\r\n            return{\r\n                ...state,\r\n                specialistById: action.payload\r\n            }\r\n        case ADDED_SPECIALIST:\r\n            return {\r\n                ...state,\r\n                specialists: [\r\n                    ...state.specialists,\r\n                    action.payload]\r\n            }\r\n        case DELETED_SPECIALIST:\r\n            return{\r\n                ...state,\r\n                specialists: updateItemInStore(state.specialists,action.payload,'delete')\r\n            }\r\n        case UPDATED_SPECIALIST:\r\n            return {\r\n                ...state,\r\n                specialists: updateItemInStore(state.specialists,action.payload,'update')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const clearSpecialist = ()=>{\r\n    return{\r\n        type: WRITE_SPECIALIST_BY_ID,\r\n        action: undefined\r\n    }\r\n}\r\nexport const getSpecialists = ()=> {\r\n    return async dispatch => getTemplate(dispatch, specialistGetReq, WRITE_SPECIALISTS, toggleLoader)\r\n}\r\nexport const getSpecialistById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch,specialistGetByIdReq, WRITE_SPECIALIST_BY_ID, toggleLoader,id)\r\n}\r\nexport const createSpecialist = data=>{\r\n\r\n    return async dispatch => createOrChangeTemplate(dispatch,specialistPostReq,data,ADDED_SPECIALIST,toggleLoader)\r\n}\r\nexport const deleteSpecialist = id =>{\r\n    return async dispatch =>  deleteTemplate(dispatch,specialistDelReq,id,toggleLoader,DELETED_SPECIALIST)\r\n}\r\nexport const updateSpecialist = (id,data) =>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,specialistUpdReq,data,UPDATED_SPECIALIST,toggleLoader,id)\r\n}\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\n\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {advertisementInputConfig} from \"../../configs/Advertisements/formInputsConfig\";\r\nimport {AdvertisementColumns} from \"../../configs/Advertisements/tableColumnsConfig\";\r\nimport {\r\n    createCategory,\r\n    deleteCategory,\r\n    getCategory,\r\n    getCategoryById, getSubCategories,\r\n    updateCategory\r\n} from \"../../redux/reducers/categoryReducer\";\r\nimport {\r\n    createSpecialist,\r\n    deleteSpecialist, getSpecialistById,\r\n    getSpecialists,\r\n    updateSpecialist\r\n} from \"../../redux/reducers/specialistReducer\";\r\nimport {getCities} from \"../../redux/reducers/mainReducer\";\r\n\r\n\r\n\r\n\r\n\r\nconst AdvertisementPage = ({subcategories,cities,getCities,getSubCategories,specialists,specialistById,getSpecialistById,getSpecialists,createSpecialist,updateSpecialist,deleteSpecialist})=>{\r\n\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'advertisements'}\r\n            pageTitle ={'Существующие объявления'}\r\n\r\n            tableData={specialists}\r\n            tableColumnsConfig={AdvertisementColumns}\r\n\r\n\r\n            creatorTitle={'Добавление объявления'}\r\n            updaterTitle={'Изменение объявления'}\r\n            formInputsConfig={advertisementInputConfig}\r\n            optionsForSelectorData={{\r\n                category: [],\r\n                cityID: cities ? [...cities] : [],\r\n                subcategories: subcategories ? [...subcategories] : []\r\n            }}\r\n            loadSelectorData={[getSubCategories,getCities]}\r\n            creatorInitialFormValues={{\r\n                avatarPath: \"\",\r\n                name: \"\",\r\n                category: \"\",\r\n                subcategory: \"\",\r\n                url: \"\",\r\n                cityID: \"\",\r\n                equipage: '',\r\n                street:\"\",\r\n                addressComment: \"\",\r\n                phone: [],\r\n                email: \"\",\r\n                webSite: \"\",\r\n                whatsApp: \"\",\r\n                telegram: \"\",\r\n                instagram: \"\",\r\n                facebook: '',\r\n                modes: [],\r\n                description: '',\r\n                photos: [],\r\n                services: [],\r\n\r\n            }}\r\n            updaterInitialFormValues={{\r\n                avatarPath: specialistById?.avatarPath,\r\n                name: specialistById?.name,\r\n                category: [],\r\n                subcategory: specialistById?.subcategoryID,\r\n                url: specialistById?.url,\r\n                cityID: specialistById?.cityID,\r\n                equipage: '',\r\n                street:specialistById?.street,\r\n                addressComment: specialistById?.addressComment,\r\n                phone: [],\r\n                email: \"\",\r\n                webSite: \"\",\r\n                whatsApp: \"\",\r\n                telegram: \"\",\r\n                instagram: \"\",\r\n                facebook: '',\r\n               // modes: [],\r\n                description: '',\r\n                photos: [],\r\n                services: specialistById?.services,\r\n\r\n            }}\r\n             getDataFunc={getSpecialists}\r\n             valueById={specialistById}\r\n             getByIdFunc={getSpecialistById}\r\n             createFunc={createSpecialist}\r\n             updateFunc={updateSpecialist}\r\n             //clearFunc={clearCategory}\r\n             deleteFunc={deleteSpecialist}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        specialists: state.specialist.specialists,\r\n        specialistById: state.specialist.specialistById,\r\n        subcategories: state.category.subcategories,\r\n        cities: state.main.cities\r\n    }\r\n}\r\n\r\n\r\nexport  default connect(mapStateToProps,\r\n    {\r\n        getSpecialists,\r\n        getSpecialistById,\r\n        createSpecialist,\r\n        updateSpecialist,\r\n        deleteSpecialist,\r\n        //clearCategory,\r\n        getSubCategories,\r\n        getCities\r\n    })\r\n    (AdvertisementPage)\r\n","import React from 'react'\r\nimport URLField from \"../../components/Fields/URLField/URLField\";\r\n\r\n\r\n\r\n\r\nconst TestPage = props=>{\r\n\r\n    return(\r\n        <>\r\n            <URLField />\r\n            </>\r\n    )\r\n}\r\n\r\nexport default TestPage","import React, {useState} from 'react'\r\nimport {Field, Form} from \"formik\";\r\n//import {checkPasSVG} from \"../../../assets/icons\";\r\n\r\n\r\nconst PasswordInput = ({name,setFieldValue,placeholder})=>{\r\n    const [visiblePassword, setVisiblePassword]  = useState(false);\r\n    const onChange = (value)=>setFieldValue(name,value)\r\n        return(\r\n            <div className={'passwordInput'}>\r\n                <input type={visiblePassword? 'text' : 'password'}  placeholder={placeholder} name={name} onChange={e=>onChange(e.target.value)}/>\r\n            <img  alt=\"\"\r\n                 onClick={()=>setVisiblePassword(!visiblePassword)}/>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default  PasswordInput","import React from 'react'\r\nimport {Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport PasswordInput from \"../Fields/PasswordInput/PasswordInput\";\r\nimport {connect} from \"react-redux\";\r\nimport ErrorMsg from \"../Modals/ErrorMessage\";\r\nimport {writeAuthMessage} from \"../../redux/reducers/authReducer\";\r\n\r\n\r\n\r\nconst AuthForm = (props)=>{\r\n    return(\r\n        <Formik\r\n            initialValues={{\r\n                email:'',\r\n                password: ''\r\n            }}\r\n            validationSchema={Yup.object({\r\n                email: Yup.string().required().email(),\r\n                password: Yup.string().required(),\r\n            })}\r\n            onSubmit={(values)=>props.submitHandler(values)}\r\n        >\r\n            <Form\r\n              //  onClick={()=>props.writeAuthMessage('')}\r\n            >\r\n                <Field name=\"email\" placeholder=\"Адрес электронной почты\"/>\r\n\r\n\r\n                <Field name=\"password\" >\r\n                    {({field:{name},form: { setFieldValue}})=> <PasswordInput setFieldValue={setFieldValue} name={name} placeholder=\"Пароль\"/>}\r\n                </Field>\r\n                <button className={\"auth__btn\"} type={'submit'}>Войти</button>\r\n                {/*{props.authErrorMessage && <ErrorMsg text={props.authErrorMessage}/>}*/}\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n// const mapStateToProps = state=>{\r\n//     return{\r\n//         authErrorMessage: state.main.authErrorMessage\r\n//     }\r\n// }\r\nexport default\r\n//connect(mapStateToProps,{writeAuthMessage})\r\n(AuthForm)","import React from 'react'\r\nimport AuthForm from \"./AuthForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {authSignIn} from \"../../redux/reducers/authReducer\";\r\n\r\n\r\n\r\nconst AuthContainer = ({authSignIn,togglePageLoader})=>{\r\n    const submitHandler = (values)=>{\r\n        console.log(values)\r\n\r\n        authSignIn(values)\r\n    }\r\n    return(\r\n        <AuthForm submitHandler={submitHandler}/>\r\n    )\r\n}\r\n\r\nexport default connect(null,{authSignIn})(AuthContainer)","export default __webpack_public_path__ + \"static/media/authBg.cf2f9f6a.jpg\";","import React from 'react'\r\nimport FormContainer from \"../../components/FormGenerator/FormContainer\";\r\nimport AuthContainer from \"../../components/Auth/AuthContainer\";\r\nimport './AuthPage.css'\r\nimport bgIMG from '../../assets/img/authBg.jpg'\r\nimport {logoSVG} from '../../assets/index'\r\nconst AuthPage = ()=>{\r\n\r\n\r\n    return(\r\n        <div className='auth__container' style={{backgroundImage: `url(${bgIMG})`}}>\r\n            <div className=\"auth__logo\"><img src={logoSVG} alt=\"\"/></div>\r\n            <div className=\"auth__block\">\r\n                <div className=\"auth__title\">Войти</div>\r\n                <AuthContainer />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport  default  AuthPage","import React, {useEffect} from 'react'\r\nimport {refreshSVG} from '../../assets/'\r\nimport mapStateToProps from \"react-redux/lib/connect/mapStateToProps\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatistic} from \"../../redux/reducers/mainReducer\";\r\nimport './StatisticBlock.css'\r\n\r\n\r\n\r\nconst StatisticBlock = props =>{\r\nuseEffect(()=>{\r\n    props.getStatistic()\r\n},[])\r\n    return(\r\n        <div className={'statContainer'}>\r\n            <div className={'statistic'}>\r\n                <img src={props.img} alt=\"\"/>\r\n                <div className=\"statisticBlock\">\r\n                    <h2>{props.title}</h2>\r\n                    <span>{props.data}</span>\r\n                </div>\r\n            </div>\r\n            <div className={'refreshBtn'} onClick={()=>props.getStatistic()}><img src={refreshSVG} alt=\"\"/>Обновить</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null,{getStatistic})(StatisticBlock)","export const toBeautifyValue =value=>{\r\n    switch (value) {\r\n        case 'Password':\r\n            return 'Пароль'\r\n        case 'Category':\r\n            return 'Категория'\r\n        case 'Subcategory':\r\n            return 'Подкатегория'\r\n        case 'Company':\r\n            return 'Компания'\r\n        case 'Edit':\r\n            return 'Редактирование'\r\n        case 'Delete':\r\n            return 'Удаление'\r\n        case 'Create':\r\n            return 'Добавление'\r\n        case 'Comment':\r\n            return 'Комментарий'\r\n        case 'City':\r\n            return 'Город'\r\n        case 'Account':\r\n            return 'Аккаунт'\r\n        case 'Update':\r\n            return 'Обновление'\r\n        case 'Put':\r\n            return 'Редактирование'\r\n        case 'Subcategories':\r\n            return 'Подкатегории'\r\n        default:\r\n            return value\r\n    }\r\n}","import Moment from \"react-moment\";\r\nimport React from \"react\";\r\nimport {toBeautifyValue} from \"../../utils/toBeautifyValue\";\r\n\r\nexport const LastActionsColumns  =[\r\n\r\n\r\n    {\r\n        title: \"Тип\",\r\n        dataIndex: 'displayInfo',\r\n        key: 'displayInfo',\r\n        render: (value)=>{\r\n            const arr = value.split(' ')\r\n            const newValue = arr[2].split(/(?=[A-Z])/)\r\n            return  toBeautifyValue(newValue[1]? newValue[1] : newValue[0])\r\n        }\r\n    },\r\n    {\r\n        title: 'Время действия',\r\n        dataIndex: 'createdAt',\r\n        key: 'createdAt',\r\n        render: (value)=> <Moment format=\"hh:mm | DD.MM.YYYY\" >{value}</Moment>\r\n\r\n    },\r\n    {\r\n        title: 'Действие',\r\n        dataIndex: 'methodName',\r\n        key: 'methodName',\r\n       render: (value)=> {\r\n           const newValue = value.split(/(?=[A-Z])/)\r\n           return toBeautifyValue(newValue[0])\r\n       }\r\n\r\n    }\r\n]","import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport StatisticBlock from \"../../components/Statisctic/StatisticBlock\";\r\nimport {\r\n    avatarPNG,\r\n    companyStatSVG,\r\n    specStatSVG,\r\n    userStatSVG\r\n} from '../../assets/'\r\nimport {getActions, getStatistic} from \"../../redux/reducers/mainReducer\";\r\n\r\nimport './MainPage.css'\r\nimport {Link, Route} from \"react-router-dom\";\r\nimport TableContainer from \"../../components/Table/TableContainer\";\r\nimport {LastActionsColumns} from \"../../configs/Main/tableColumnsConfig\";\r\n\r\n\r\n\r\n\r\nconst MainPage = ({statistic,lastActions,getActions,username})=>{\r\n    return(\r\n        <>\r\n            <a href=\"http://46.101.99.48/\"  target={'_blank'} className = 'page-content__open-site'>Открыть сайт</a>\r\n            <div className = 'page-content__profile'><span>{username.name}</span> <img  alt=\"\"/></div>\r\n            <span className='page-content__title'>{'Главная'}</span>\r\n             <div className={'statistic-wrapper'}>\r\n            <StatisticBlock img={userStatSVG} title={'Пользователи'} data={statistic.user_count}  />\r\n            <StatisticBlock img ={specStatSVG} title={'Специалисты'} data={statistic.spec_count}/>\r\n            <StatisticBlock img ={companyStatSVG} title={'Компании'} data={statistic.comp_count}/>\r\n             </div>\r\n            <span className='page-content__title' style={{marginBottom: '60px'}}>{'Последние действия'}</span>\r\n                 <TableContainer\r\n                     //isLoading={isLoading}\r\n                     getDataFunc={getActions}\r\n                     data={lastActions[0]}\r\n                     columns={LastActionsColumns}\r\n                     editing={false}\r\n                 />\r\n\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        statistic: state.main.statistic,\r\n        lastActions: state.main.lastActions,\r\n        username: state.auth.username\r\n    }\r\n}\r\n\r\n\r\nexport  default connect(mapStateToProps,{getActions})\r\n(MainPage)\r\n","import React, {useEffect} from 'react'\r\nimport './App.css';\r\nimport {Route, Switch, withRouter} from 'react-router-dom';\r\n\r\nimport SidebarList from \"./components/Sidebar/SidebarList\";\r\nimport CategoriesPage from \"./pages/CategoriesPage/CategoriesPage\";\r\nimport {connect} from \"react-redux\";\r\nimport Modal from \"./components/Modals/Modal\";\r\nimport UsersPage from \"./pages/Users/Users\";\r\nimport AdvertisementPage from \"./pages/AdvertisementPage/AdvertisementPage\";\r\nimport TestPage from \"./pages/TestPage/TestPage\";\r\nimport AuthPage from \"./pages/AuthPage/AuthPage\";\r\nimport {tokensChecker} from \"./components/Auth/tokensChecker\";\r\nimport {toggleAuth, writeProfile} from \"./redux/reducers/authReducer\";\r\nimport MainPage from \"./pages/MainPage/MainPage\";\r\nimport {getUserById} from \"./redux/reducers/userReducer\";\r\n\r\nfunction App(props) {\r\n    useEffect(()=>{\r\n        if(tokensChecker()){\r\n            props.toggleAuth(true)\r\n            props.writeProfile(localStorage.getItem('id'))\r\n        }\r\n        else{\r\n            props.toggleAuth(false)\r\n        }\r\n    },[])\r\n  return (\r\n\r\n          props.isAuthorized ?\r\n              <>\r\n                  {props.modal.isOpen && <Modal/>}\r\n\r\n                  <SidebarList/>\r\n                  <div className=\"page-content\">\r\n                      <Switch>\r\n                          {/*<Route path={'/orders'} component={OrdersPage}/>*/}\r\n                          <Route path={'/users'} component={UsersPage}/>\r\n                          <Route path={'/advertisements'} component={AdvertisementPage}/>\r\n                          <Route path={'/categories'} component={CategoriesPage}/>\r\n                          <Route path={'/test'} component={TestPage}/>\r\n                          <Route path={'/main'} component={MainPage}/>\r\n\r\n                          {/*<Route path={'/providers'} component={Users}/>*/}\r\n                          {/*<Route path={'/profile'} exact component={ProfilePage}/>*/}\r\n\r\n                      </Switch>\r\n                  </div>\r\n              </>\r\n              :\r\n              <Route path={'/'} component={AuthPage}/>\r\n\r\n  );\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        isAuthorized: state.auth.isAuthorized,\r\n        modal : state.modal.isOpenModal\r\n    }\r\n}\r\nexport default\r\nconnect(mapStateToProps,{toggleAuth,writeProfile})\r\n(App);\r\n","export const tokensChecker = ()=>{\r\n    if(localStorage.getItem('token')){\r\n        return true\r\n    }\r\n    return false\r\n}","import { combineReducers } from \"redux\";\r\nimport {modalReducer} from \"./modalReducer\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport {categoryReducer} from \"./categoryReducer\";\r\nimport {tableReducer} from \"./tableReducer\";\r\nimport {specialistReducer} from \"./specialistReducer\";\r\nimport {mainReducer} from \"./mainReducer\";\r\nimport {userReducer} from \"./userReducer\";\r\n\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    modal : modalReducer,\r\n    auth: authReducer,\r\n    category: categoryReducer,\r\n    table: tableReducer,\r\n    specialist: specialistReducer,\r\n    main: mainReducer,\r\n    user: userReducer,\r\n})\r\n\r\n\r\n\r\n","import {rootReducer} from \"./reducers/rootReducer\";\r\n\r\nimport { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk'\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(\r\n            thunk\r\n        ),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\n    )\r\n)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n</Provider>,\r\n\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}