[{"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\index.js":"1","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\App.js":"2","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\store.js":"3","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\authReducer.js":"4","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\userReducer.js":"5","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\rootReducer.js":"6","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Auth\\tokensChecker.js":"7","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\pages\\AdvertisementPage\\AdvertisementPage.js":"8","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\pages\\Users\\Users.js":"9","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\pages\\AuthPage\\AuthPage.js":"10","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\pages\\MainPage\\MainPage.js":"11","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\pages\\AboutPage\\AboutPage.js":"12","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\pages\\InstructionPage\\InstructionPage.js":"13","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\pages\\QasPage\\QasPage.js":"14","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\pages\\RulesPage\\RulesPage.js":"15","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Modals\\Modal.jsx":"16","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\pages\\CategoriesPage\\CategoriesPage.jsx":"17","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Sidebar\\SidebarList.jsx":"18","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\types.js":"19","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\categoryReducer.js":"20","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\tableReducer.js":"21","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\qasReducer.js":"22","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\ruleReducer.js":"23","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\aboutReducer.js":"24","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\instructionReducer.js":"25","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\specialistReducer.js":"26","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\mainReducer.js":"27","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Auth\\AuthContainer.js":"28","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\utils\\Requests.js":"29","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\utils\\toClearImageArray.js":"30","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\utils\\templates\\deleteTemplate.js":"31","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\utils\\templates\\updateItemInStore.js":"32","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\utils\\templates\\createOrChangeTemplate.js":"33","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\assets\\index.js":"34","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Statisctic\\StatisticBlock.js":"35","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Advertisements\\formInputsConfig.js":"36","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Users\\formInputsConfig.js":"37","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Main\\tableColumnsConfig.js":"38","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\About\\tableColumnsConfig.js":"39","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Advertisements\\tableColumnsConfig.js":"40","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Users\\tableColumnsConfig.js":"41","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\About\\formInputsConfig.js":"42","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Qas\\formInputsConfig.js":"43","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Rules\\tableColumnsConfig.js":"44","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Rules\\formInputsConfig.js":"45","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Qas\\tableColumnsConfig.js":"46","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Instruction\\formInputsConfig.js":"47","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\modalReducer.jsx":"48","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\utils\\templates\\getTemplate.jsx":"49","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Sidebar\\sideBarConfig.js":"50","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Categories\\formInputsConfig.js":"51","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Categories\\tableColumnsConfig.js":"52","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\PageRenderer\\PageRendererContainer.jsx":"53","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\FormGenerator\\FormContainer.jsx":"54","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Table\\TableContainer.jsx":"55","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Sidebar\\SidebarItem.jsx":"56","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\URLField\\URLField.jsx":"57","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Auth\\AuthForm.js":"58","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\utils\\toBeautifyValue.js":"59","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\utils\\imageRouter.js":"60","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Preloader\\Preloader.js":"61","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\FormGenerator\\Former.jsx":"62","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Btns\\DeleteBtn.jsx":"63","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\SearchGenerator\\SearchContainer.jsx":"64","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Btns\\AddBtn.jsx":"65","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Modals\\ErrorMessage.jsx":"66","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\PasswordInput\\PasswordInput.jsx":"67","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\FormGenerator\\validationGenerator.js":"68","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Btns\\EditBtn.jsx":"69","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\FormGenerator\\FormInput.jsx":"70","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Btns\\CancelBtn.jsx":"71","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\SearchGenerator\\SearchForm.jsx":"72","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\FileInput\\FileInput.js":"73","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\CalendarInput\\CalendarInput.js":"74","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\SearchGenerator\\SearchInputs.jsx":"75","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\TextEditor\\TextEditor.js":"76","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\ScheduleField\\ScheduleField.jsx":"77","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\MapBlock\\MapBlock.jsx":"78","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\FieldWithIcon\\FieldWithIcon.jsx":"79","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\ScheduleField\\ScheduleItem.js":"80","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\ArrayField\\ArrayField.js":"81","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\ImgUploader\\ImgUploader.jsx":"82","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\RadioGroup\\RadioGroup.jsx":"83"},{"size":382,"mtime":1611642457231,"results":"84","hashOfConfig":"85"},{"size":2536,"mtime":1611651926379,"results":"86","hashOfConfig":"85"},{"size":376,"mtime":1612325832702,"results":"87","hashOfConfig":"85"},{"size":3844,"mtime":1611651862555,"results":"88","hashOfConfig":"85"},{"size":4396,"mtime":1611647777697,"results":"89","hashOfConfig":"85"},{"size":931,"mtime":1611642457236,"results":"90","hashOfConfig":"85"},{"size":123,"mtime":1611642457213,"results":"91","hashOfConfig":"85"},{"size":4631,"mtime":1611649124019,"results":"92","hashOfConfig":"85"},{"size":2894,"mtime":1611649296521,"results":"93","hashOfConfig":"85"},{"size":704,"mtime":1611642457232,"results":"94","hashOfConfig":"85"},{"size":2157,"mtime":1611654397293,"results":"95","hashOfConfig":"85"},{"size":1894,"mtime":1611648653822,"results":"96","hashOfConfig":"85"},{"size":1900,"mtime":1611642457233,"results":"97","hashOfConfig":"85"},{"size":1879,"mtime":1611649268689,"results":"98","hashOfConfig":"85"},{"size":1817,"mtime":1611649313456,"results":"99","hashOfConfig":"85"},{"size":1360,"mtime":1611642457222,"results":"100","hashOfConfig":"85"},{"size":2205,"mtime":1611649165580,"results":"101","hashOfConfig":"85"},{"size":932,"mtime":1611656162294,"results":"102","hashOfConfig":"85"},{"size":3076,"mtime":1611642457237,"results":"103","hashOfConfig":"85"},{"size":3395,"mtime":1611642457236,"results":"104","hashOfConfig":"85"},{"size":1200,"mtime":1611642457237,"results":"105","hashOfConfig":"85"},{"size":2744,"mtime":1611642457236,"results":"106","hashOfConfig":"85"},{"size":2861,"mtime":1611642457237,"results":"107","hashOfConfig":"85"},{"size":2884,"mtime":1611642457235,"results":"108","hashOfConfig":"85"},{"size":1820,"mtime":1611642457236,"results":"109","hashOfConfig":"85"},{"size":4245,"mtime":1611642457237,"results":"110","hashOfConfig":"85"},{"size":1779,"mtime":1611642457236,"results":"111","hashOfConfig":"85"},{"size":464,"mtime":1611642457212,"results":"112","hashOfConfig":"85"},{"size":5896,"mtime":1611656314767,"results":"113","hashOfConfig":"85"},{"size":294,"mtime":1611642457240,"results":"114","hashOfConfig":"85"},{"size":298,"mtime":1611642457238,"results":"115","hashOfConfig":"85"},{"size":661,"mtime":1611642457239,"results":"116","hashOfConfig":"85"},{"size":446,"mtime":1611642457238,"results":"117","hashOfConfig":"85"},{"size":1104,"mtime":1611642457212,"results":"118","hashOfConfig":"85"},{"size":926,"mtime":1611642457225,"results":"119","hashOfConfig":"85"},{"size":4713,"mtime":1611642457227,"results":"120","hashOfConfig":"85"},{"size":3106,"mtime":1611642457229,"results":"121","hashOfConfig":"85"},{"size":948,"mtime":1611642457228,"results":"122","hashOfConfig":"85"},{"size":550,"mtime":1611642457227,"results":"123","hashOfConfig":"85"},{"size":693,"mtime":1611642457227,"results":"124","hashOfConfig":"85"},{"size":1498,"mtime":1611642457231,"results":"125","hashOfConfig":"85"},{"size":537,"mtime":1611642457226,"results":"126","hashOfConfig":"85"},{"size":581,"mtime":1611642457228,"results":"127","hashOfConfig":"85"},{"size":549,"mtime":1611642457229,"results":"128","hashOfConfig":"85"},{"size":539,"mtime":1611642457229,"results":"129","hashOfConfig":"85"},{"size":546,"mtime":1611642457228,"results":"130","hashOfConfig":"85"},{"size":303,"mtime":1611642457228,"results":"131","hashOfConfig":"85"},{"size":643,"mtime":1611642457236,"results":"132","hashOfConfig":"85"},{"size":830,"mtime":1611642457239,"results":"133","hashOfConfig":"85"},{"size":751,"mtime":1611648418657,"results":"134","hashOfConfig":"85"},{"size":617,"mtime":1611642457227,"results":"135","hashOfConfig":"85"},{"size":547,"mtime":1611642457228,"results":"136","hashOfConfig":"85"},{"size":4942,"mtime":1611654412576,"results":"137","hashOfConfig":"85"},{"size":1145,"mtime":1611654613505,"results":"138","hashOfConfig":"85"},{"size":1879,"mtime":1611642457226,"results":"139","hashOfConfig":"85"},{"size":824,"mtime":1611648216533,"results":"140","hashOfConfig":"85"},{"size":570,"mtime":1611642457220,"results":"141","hashOfConfig":"85"},{"size":2064,"mtime":1611655946962,"results":"142","hashOfConfig":"85"},{"size":989,"mtime":1611642457239,"results":"143","hashOfConfig":"85"},{"size":137,"mtime":1611642457238,"results":"144","hashOfConfig":"85"},{"size":255,"mtime":1611642457223,"results":"145","hashOfConfig":"85"},{"size":4371,"mtime":1611642457221,"results":"146","hashOfConfig":"85"},{"size":1121,"mtime":1611642457214,"results":"147","hashOfConfig":"85"},{"size":218,"mtime":1611642457223,"results":"148","hashOfConfig":"85"},{"size":307,"mtime":1611642457213,"results":"149","hashOfConfig":"85"},{"size":233,"mtime":1611642457221,"results":"150","hashOfConfig":"151"},{"size":691,"mtime":1611642457218,"results":"152","hashOfConfig":"85"},{"size":1095,"mtime":1611642457221,"results":"153","hashOfConfig":"85"},{"size":919,"mtime":1611642457214,"results":"154","hashOfConfig":"85"},{"size":7632,"mtime":1611642457221,"results":"155","hashOfConfig":"85"},{"size":671,"mtime":1611642457213,"results":"156","hashOfConfig":"85"},{"size":626,"mtime":1611642457223,"results":"157","hashOfConfig":"85"},{"size":1030,"mtime":1611642457217,"results":"158","hashOfConfig":"85"},{"size":998,"mtime":1611642457215,"results":"159","hashOfConfig":"85"},{"size":555,"mtime":1611642457223,"results":"160","hashOfConfig":"85"},{"size":1388,"mtime":1611642457219,"results":"161","hashOfConfig":"85"},{"size":1916,"mtime":1611642457219,"results":"162","hashOfConfig":"85"},{"size":3659,"mtime":1611642457218,"results":"163","hashOfConfig":"85"},{"size":423,"mtime":1611642457215,"results":"164","hashOfConfig":"85"},{"size":1827,"mtime":1611642457219,"results":"165","hashOfConfig":"85"},{"size":3883,"mtime":1611642457214,"results":"166","hashOfConfig":"85"},{"size":5927,"mtime":1611642457217,"results":"167","hashOfConfig":"85"},{"size":657,"mtime":1611642457218,"results":"168","hashOfConfig":"85"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},"7scnvl",{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"171"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"171"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"171"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"171"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"171"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"171"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"171"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"171"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"171"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"171"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"171"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"171"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"171"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"171"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"171"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"171"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"171"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"171"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"171"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"171"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"171"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"171"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"171"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"171"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"171"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"171"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ictar1",{"filePath":"328","messages":"329","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"171"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"171"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"171"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"171"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"171"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"171"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"171"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"171"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"171"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"171"},"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\index.js",[],["373","374"],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\App.js",["375"],"import React, {useEffect} from 'react'\r\nimport './App.css';\r\nimport {Route, Switch} from 'react-router-dom';\r\n\r\nimport SidebarList from \"./components/Sidebar/SidebarList\";\r\nimport CategoriesPage from \"./pages/CategoriesPage/CategoriesPage\";\r\nimport {connect} from \"react-redux\";\r\nimport Modal from \"./components/Modals/Modal\";\r\nimport UsersPage from \"./pages/Users/Users\";\r\nimport AdvertisementPage from \"./pages/AdvertisementPage/AdvertisementPage\";\r\nimport AuthPage from \"./pages/AuthPage/AuthPage\";\r\nimport {tokensChecker} from \"./components/Auth/tokensChecker\";\r\nimport {toggleAuth, writeProfile} from \"./redux/reducers/authReducer\";\r\nimport MainPage from \"./pages/MainPage/MainPage\";\r\nimport QasPage from \"./pages/QasPage/QasPage\";\r\nimport RulesPage from \"./pages/RulesPage/RulesPage\";\r\nimport AboutPage from \"./pages/AboutPage/AboutPage\";\r\nimport InstructionsPage from \"./pages/InstructionPage/InstructionPage\";\r\n\r\nfunction App(props) {\r\n    useEffect(()=>{\r\n        if(tokensChecker()){\r\n            props.toggleAuth(true)\r\n            props.writeProfile(localStorage.getItem('id'))\r\n        }\r\n        else{\r\n            props.toggleAuth(false)\r\n        }\r\n    },[props.isAuthorized])\r\n  return (\r\n          props.isAuthorized ?\r\n              <>\r\n                  {props.modal.isOpen && <Modal/>}\r\n\r\n                  <SidebarList/>\r\n                  <div className=\"page-content\">\r\n                      <Switch>\r\n                          <Route path={'/admin/users'} component={UsersPage}/>\r\n                          <Route path={'/admin/advertisements'} component={AdvertisementPage}/>\r\n                          <Route path={'/admin/categories'} component={CategoriesPage}/>\r\n                          <Route path={'/admin/main'} component={MainPage}/>\r\n                          <Route path={'/admin/qas'} component={QasPage}/>\r\n                          <Route path={'/admin/rules'} component={RulesPage}/>\r\n                          <Route path={'/admin/about'} component={AboutPage}/>\r\n                          <Route path={'/admin/instruction'} component={InstructionsPage}/>\r\n                      </Switch>\r\n                  </div>\r\n              </>\r\n              :\r\n              <Switch>\r\n              <Route path={'/admin'} component={AuthPage}/>\r\n              </Switch>\r\n  );\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        isAuthorized: state.auth.isAuthorized,\r\n        modal : state.modal.isOpenModal\r\n    }\r\n}\r\nexport default\r\nconnect(mapStateToProps,{toggleAuth,writeProfile})\r\n(App);\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\store.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\authReducer.js",["376"],"import {\r\n    AUTH_TOGGLE_FETCH_LOADER,\r\n    TOGGLE_AUTH,\r\n    TOGGLE_FETCH_LOADER,\r\n    TOGGLE_PAGE_LOADER,\r\n    WRITE_AUTH_MESSAGE,\r\n    WRITE_USERNAME\r\n} from './types'\r\nimport {authReq, userGetByIdReq} from \"../../utils/Requests\";\r\n\r\n\r\nconst initialState={\r\n    authFetchLoader: false,\r\n    isAuthorized: false,\r\n    isPageLoader: false,\r\n    authErrorMessage: '',\r\n    username: {}\r\n}\r\n\r\n\r\nexport const authReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case TOGGLE_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuthorized: action.payload\r\n            }\r\n        case AUTH_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                authFetchLoader: action.payload\r\n            }\r\n        case TOGGLE_PAGE_LOADER:\r\n            return{\r\n                ...state,\r\n                isPageLoader: action.payload\r\n\r\n            }\r\n        case WRITE_AUTH_MESSAGE:\r\n            return {\r\n                ...state,\r\n                authErrorMessage: action.payload\r\n            }\r\n        case WRITE_USERNAME:\r\n            return {\r\n                ...state,\r\n                username: action.payload\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nconst writeUsername = value=>{\r\n    return{\r\n        type: 'WRITE_USERNAME',\r\n        payload: value\r\n    }\r\n}\r\nexport const writeAuthMessage = str =>{\r\n    return{\r\n        type: 'WRITE_AUTH_MESSAGE',\r\n        payload: str\r\n    }\r\n}\r\nexport const togglePageLoader = bool =>{\r\n    return{\r\n        type: 'TOGGLE_PAGE_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\nexport const toggleAuth = value =>{\r\n    return{\r\n        type: 'TOGGLE_AUTH',\r\n        payload: value\r\n    }\r\n}\r\nexport const authToggleLoader = bool=>{\r\n    return{\r\n        type: 'AUTH_TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const writeProfile = id=>{\r\n    return async dispatch =>{\r\n        dispatch(authToggleLoader(true))\r\n       await userGetByIdReq(id).then((resp)=>{\r\n           dispatch(writeUsername(resp))\r\n        })\r\n        dispatch(authToggleLoader(false))\r\n    }\r\n}\r\n// export const authRefresh = data=> {\r\n//     return async dispatch => {\r\n//         dispatch(toggleLoader(true))\r\n//         await authRefreshReq(data).then(async response => {\r\n//             localStorage.setItem(\"accessToken\", response.result.body.accessToken)\r\n//             localStorage.setItem(\"tokenExpirationTime\", response.result.body.tokenExpirationTime)\r\n//             localStorage.setItem(\"refreshExpirationTime\", response.result.body.refreshExpirationTime)\r\n//             localStorage.setItem(\"id\", response.result.body.id)\r\n//             localStorage.setItem(\"refreshToken\", response.result.body.refreshToken)\r\n//             await userGetByIdReq(response.result.body.id).then(response=>{\r\n//                 console.log(response)\r\n//                 dispatch(writeUsername(response.result.phoneNumber))\r\n//             })\r\n//             console.log(response)\r\n//             dispatch(toggleAuth(true))\r\n//         }).catch(err => console.log(err))\r\n//         dispatch(toggleLoader(false))\r\n//     }\r\n// }\r\nexport const authSignIn = data =>{\r\n    return async dispatch =>{\r\n        dispatch(authToggleLoader(true))\r\n        await authReq(data).then(response=>{\r\n            if(response.status===200){\r\n                localStorage.setItem(\"token\", response.data.token)\r\n                localStorage.setItem(\"id\", response.data.id)\r\n                dispatch(authToggleLoader(true))\r\n                dispatch(toggleAuth(true))\r\n                dispatch(writeProfile(response.data.id))\r\n           }\r\n        }).catch(()=>dispatch(writeAuthMessage('Неверно введены данные.')))\r\n        dispatch(authToggleLoader(false))\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\userReducer.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\rootReducer.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Auth\\tokensChecker.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\pages\\AdvertisementPage\\AdvertisementPage.js",["377"],"import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\n\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {advertisementInputConfig} from \"../../configs/Advertisements/formInputsConfig\";\r\nimport {AdvertisementColumns} from \"../../configs/Advertisements/tableColumnsConfig\";\r\nimport {\r\n\r\n   getSubCategories,\r\n\r\n} from \"../../redux/reducers/categoryReducer\";\r\nimport {\r\n    clearSpecialist,\r\n    createSpecialist,\r\n    deleteSpecialist, getSpecialistById,\r\n    getSpecialists,\r\n    updateSpecialist\r\n} from \"../../redux/reducers/specialistReducer\";\r\nimport {getCities} from \"../../redux/reducers/mainReducer\";\r\n\r\n\r\n\r\n\r\n\r\nconst AdvertisementPage = ({specialistFetchLoader,subcategories,cities,clearSpecialist,getCities,getSubCategories,specialists,specialistById,getSpecialistById,getSpecialists,createSpecialist,updateSpecialist,deleteSpecialist})=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'admin/advertisements'}\r\n            pageTitle ={'Существующие объявления'}\r\n\r\n            tableData={specialists}\r\n            tableColumnsConfig={AdvertisementColumns}\r\n\r\n\r\n            creatorTitle={'Добавление объявления'}\r\n            updaterTitle={'Изменение объявления'}\r\n            formInputsConfig={advertisementInputConfig}\r\n            optionsForSelectorData={{\r\n                category: [],\r\n                cityID: cities ? [...cities] : [],\r\n                subcategories: subcategories ? [...subcategories] : []\r\n            }}\r\n            loadSelectorData={[getSubCategories,getCities]}\r\n            creatorInitialFormValues={{\r\n                type: 0,\r\n                avatar: [],\r\n                name: \"\",\r\n                category: \"\",\r\n                subcategory: 0,\r\n                cityID: 0,\r\n                url: \"\",\r\n                viezd: 0,\r\n                street:{},\r\n                phone: '',\r\n                email: \"\",\r\n                webSite: \"\",\r\n                whatsApp: \"\",\r\n                instagram: \"\",\r\n                telegram: \"\",\r\n                facebook: '',\r\n                modes: [],\r\n                description: '',\r\n                photosForm: [],\r\n                services: [],\r\n\r\n            }}\r\n            updaterInitialFormValues={{\r\n                type: specialistById?.type,\r\n                avatar: specialistById?.type,\r\n                name: specialistById?.name,\r\n                category: specialistById?.type,\r\n                subcategory: specialistById?.subcategoryID,\r\n                cityID: specialistById?.cityID,\r\n                url: specialistById?.url,\r\n                viezd: specialistById?.viezd,\r\n                street: {\r\n                    street: specialistById?.street,\r\n                    addressComment: specialistById?.addressComment,\r\n                    latitude: specialistById?.latitude,\r\n                    longitude:specialistById?.longitude},\r\n                phone: specialistById?.links?.phone,\r\n                email: specialistById?.links?.email,\r\n                webSite: specialistById?.links?.webSite,\r\n                whatsApp: specialistById?.links?.whatsApp,\r\n                instagram: specialistById?.links?.instagram,\r\n                telegram: specialistById?.links?.telegram,\r\n                facebook: specialistById?.links?.facebook,\r\n                modes: specialistById?.modes,\r\n                description: specialistById?.description,\r\n                photosForm: specialistById?.photos,\r\n                services: specialistById?.services,\r\n               \r\n\r\n            }}\r\n             getDataFunc={getSpecialists}\r\n             valueById={specialistById}\r\n             getByIdFunc={getSpecialistById}\r\n             createFunc={createSpecialist}\r\n             updateFunc={updateSpecialist}\r\n             clearFunc={clearSpecialist}\r\n             deleteFunc={deleteSpecialist}\r\n            isLoading={specialistFetchLoader}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        specialists: state.specialist.specialists,\r\n        specialistById: state.specialist.specialistById,\r\n        subcategories: state.category.subcategories,\r\n        cities: state.main.cities,\r\n        specialistFetchLoader: state.specialist.specialistFetchLoader\r\n    }\r\n}\r\n\r\n\r\nexport  default connect(mapStateToProps,\r\n    {\r\n        getSpecialists,\r\n        getSpecialistById,\r\n        createSpecialist,\r\n        updateSpecialist,\r\n        deleteSpecialist,\r\n        clearSpecialist,\r\n        getSubCategories,\r\n        getCities\r\n    })\r\n    (AdvertisementPage)\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\pages\\Users\\Users.js",["378"],"import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {userInputConfig} from \"../../configs/Users/formInputsConfig\";\r\nimport {UserColumns} from \"../../configs/Users/tableColumnsConfig\";\r\nimport {clearUser, createUser, deleteUser, getUserById, getUsers, updateUser} from \"../../redux/reducers/userReducer\";\r\nimport {getCities} from \"../../redux/reducers/mainReducer\";\r\n\r\n\r\n\r\n\r\n\r\nconst UsersPage = ({userFetchLoader,users,cities,userById,createUser,getCities,clearUser,getUsers,getUserById,updateUser,deleteUser})=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'admin/users'}\r\n            pageTitle ={'Пользователи'}\r\n            tableData={users}\r\n            tableColumnsConfig={UserColumns}\r\n            creatorTitle={'Добавление пользователя'}\r\n            updaterTitle={'Изменение пользователя'}\r\n            formInputsConfig={userInputConfig}\r\n            optionsForSelectorData={{\r\n                cityID: cities ? [...cities] : []\r\n            }}\r\n            loadSelectorData={[getCities]}\r\n            creatorInitialFormValues={{\r\n                type: '',\r\n                avatarPath: '',\r\n                name: \"\",\r\n                surname: \"\",\r\n                patronymic: \"\",\r\n                birthDate: \"\",\r\n                gender: 0,\r\n                cityID: 0,\r\n                phoneNumber: \"\",\r\n                instagram: \"\",\r\n                email: \"\",\r\n                password: '',\r\n                repeatPassword: ''\r\n            }}\r\n            updaterInitialFormValues={{\r\n                avatarPath: userById?.avatarPath,\r\n                name: userById?.name,\r\n                surname: userById?.surname,\r\n                patronymic:userById?.patronymic,\r\n                birthDate: userById?.birthDate,\r\n                gender: userById?.gender,\r\n                cityID: userById?.cityID,\r\n                phoneNumber: userById?.phoneNumber,\r\n                instagram: userById?.instagram,\r\n                email: userById?.email,\r\n            }}\r\n            //searchInputsConfig = {userSearchInputConfig}\r\n             getDataFunc={getUsers}\r\n             valueById={userById}\r\n             getByIdFunc={getUserById}\r\n             createFunc={createUser}\r\n             updateFunc={updateUser}\r\n             deleteFunc={deleteUser}\r\n            clearFunc={clearUser}\r\n            isLoading={userFetchLoader}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        users: state.user.users,\r\n        userById: state.user.userById,\r\n        cities: state.main.cities,\r\n        userFetchLoader: state.user.userFetchLoader\r\n    }\r\n}\r\n\r\nexport  default  connect(mapStateToProps,{clearUser,createUser,getUsers,getCities,getUserById,deleteUser,updateUser})(UsersPage)\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\pages\\AuthPage\\AuthPage.js",["379"],"import React from 'react'\r\nimport FormContainer from \"../../components/FormGenerator/FormContainer\";\r\nimport AuthContainer from \"../../components/Auth/AuthContainer\";\r\nimport './AuthPage.css'\r\nimport bgIMG from '../../assets/img/authBg.jpg'\r\nimport {logoSVG} from '../../assets/index'\r\nconst AuthPage = ()=>{\r\n\r\n\r\n    return(\r\n        <div className='auth__container' style={{backgroundImage: `url(${bgIMG})`}}>\r\n            <div className=\"auth__logo\"><img src={logoSVG} alt=\"\"/></div>\r\n            <div className=\"auth__block\">\r\n                <div className=\"auth__title\">Войти</div>\r\n                <AuthContainer />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport  default  AuthPage","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\pages\\MainPage\\MainPage.js",["380","381","382"],"import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport StatisticBlock from \"../../components/Statisctic/StatisticBlock\";\r\nimport {\r\n    companyStatSVG,\r\n    specStatSVG,\r\n    userStatSVG\r\n} from '../../assets/'\r\nimport {getActions, getStatistic} from \"../../redux/reducers/mainReducer\";\r\n\r\nimport './MainPage.css'\r\nimport TableContainer from \"../../components/Table/TableContainer\";\r\nimport {LastActionsColumns} from \"../../configs/Main/tableColumnsConfig\";\r\nimport {imageRouter} from \"../../utils/imageRouter\";\r\n\r\n\r\n\r\n\r\nconst MainPage = ({mainFetchLoader,statistic,lastActions,getActions,username})=>{\r\n    return(\r\n        <>\r\n            <a href=\"https://naidi.kg\"  target={'_blank'} className = 'page-content__open-site'>Открыть сайт</a>\r\n            <div className = 'page-content__profile'><span>{username.name}</span> <img src={imageRouter(username.avatarPath)} alt=\"\"/></div>\r\n            <span className='page-content__title'>{'Главная'}</span>\r\n             <div className={'statistic-wrapper'}>\r\n            <StatisticBlock img={userStatSVG} title={'Пользователи'} data={statistic.user_count}  />\r\n            <StatisticBlock img ={specStatSVG} title={'Специалисты'} data={statistic.spec_count}/>\r\n            <StatisticBlock img ={companyStatSVG} title={'Компании'} data={statistic.comp_count}/>\r\n             </div>\r\n            <span className='page-content__title' style={{marginBottom: '60px'}}>{'Последние действия'}</span>\r\n                 <TableContainer\r\n                     isLoading={mainFetchLoader}\r\n                     getDataFunc={getActions}\r\n                     data={lastActions[0]}\r\n                     columns={LastActionsColumns}\r\n                     editing={false}\r\n                 />\r\n\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        statistic: state.main.statistic,\r\n        lastActions: state.main.lastActions,\r\n        username: state.auth.username,\r\n        mainFetchLoader: state.main.mainFetchLoader\r\n    }\r\n}\r\n\r\n\r\nexport  default connect(mapStateToProps,{getActions})\r\n(MainPage)\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\pages\\AboutPage\\AboutPage.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\pages\\InstructionPage\\InstructionPage.js",["383"],"import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {\r\n    clearInstruction,\r\n    createInstruction,\r\n    getInstruction,\r\n} from \"../../redux/reducers/instructionReducer\";\r\nimport './InstructionPage.css'\r\nimport FormContainer from \"../../components/FormGenerator/FormContainer\";\r\nimport {instructionInputConfig} from \"../../configs/Instruction/formInputsConfig\";\r\n\r\nconst InstructionsPage = ({instructionFetchLoader,clearInstruction,instruction=[],getInstruction,createInstruction})=>{\r\n    return(\r\n        <>\r\n        <PageRenderer\r\n            pageTitle ={'Инструкция'}\r\n            title={true}\r\n            table={false}\r\n            adding={false}\r\n            editing={false}\r\n            deleting={false}\r\n        />\r\n        <p className={'instructionPage-p'}>Здесь находится блок для добавления одной инструкции,\r\n            которая будет скачиваться при нажатии на нее.\r\n            Этот файл будет отображаться при регистрации компании или специалиста.</p>\r\n    <FormContainer\r\n        getByIdFunc={getInstruction}\r\n        valueById={instruction}\r\n        initialVals={{file:instruction}}\r\n        createReq={createInstruction}\r\n        inputConfig={instructionInputConfig}\r\n        isLoading={instructionFetchLoader}\r\n        clearFunc={clearInstruction}\r\n    />\r\n    </>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        instruction: state.instruction.instruction,\r\n        instructionFetchLoader : state.instruction.instructionFetchLoader,\r\n    }\r\n}\r\nexport  default connect(mapStateToProps,\r\n    {\r\n        getInstruction,\r\n        createInstruction,clearInstruction\r\n    }\r\n)(InstructionsPage)\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\pages\\QasPage\\QasPage.js",["384"],"import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\n\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {\r\n    clearQas,\r\n    createQas,\r\n    deleteQas,\r\n    getQas,\r\n    getQasById,\r\n    updateQas\r\n} from \"../../redux/reducers/qasReducer\";\r\nimport {qasInputConfig} from \"../../configs/Qas/formInputsConfig\";\r\nimport {QasColumns} from \"../../configs/Qas/tableColumnsConfig\";\r\n\r\n\r\n\r\n\r\n\r\nconst QasPage = ({qasFetchLoader,qas=[],qasById,getQas,getQasById,createQas,updateQas,deleteQas,clearQas})=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'admin/qas'}\r\n            pageTitle ={'Вопрос-ответ'}\r\n\r\n            tableData={qas}\r\n            tableColumnsConfig={QasColumns}\r\n\r\n\r\n            creatorTitle={'Добавление вопрос-ответа'}\r\n            updaterTitle={'Изменение вопрос-ответа'}\r\n            formInputsConfig={qasInputConfig}\r\n            creatorInitialFormValues={{\r\n                question: '',\r\n                answer: ''}}\r\n            updaterInitialFormValues={{\r\n                question: qasById?.question,\r\n                answer: qasById?.answer,\r\n            }}\r\n            getDataFunc={getQas}\r\n            valueById={qasById}\r\n            getByIdFunc={getQasById}\r\n            createFunc={createQas}\r\n            updateFunc={updateQas}\r\n            clearFunc={clearQas}\r\n            deleteFunc={deleteQas}\r\n            isLoading={qasFetchLoader}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        qas: state.qas.qas,\r\n        qasById: state.qas.qasById,\r\n        qasFetchLoader: state.qas.qasFetchLoader\r\n    }\r\n}\r\nexport  default connect(mapStateToProps,\r\n    {\r\n        getQas,\r\n        getQasById,\r\n        createQas,\r\n        updateQas,\r\n        deleteQas,\r\n        clearQas\r\n    }\r\n)(QasPage)\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\pages\\RulesPage\\RulesPage.js",["385"],"import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\n\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {\r\n    createRule,\r\n    deleteRule,\r\n    getRule,\r\n    getRuleById,\r\n    updateRule\r\n} from \"../../redux/reducers/ruleReducer\";\r\nimport {rulesInputConfig} from \"../../configs/Rules/formInputsConfig\";\r\nimport {ruleColumns} from \"../../configs/Rules/tableColumnsConfig\";\r\n\r\n\r\n\r\n\r\n\r\nconst RulesPage = ({ruleFetchLoader,rules=[],ruleById,getRule,getRuleById,createRule,updateRule,deleteRule})=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'admin/rules'}\r\n            pageTitle ={'Правила'}\r\n\r\n            tableData={rules}\r\n            tableColumnsConfig={ruleColumns}\r\n\r\n            creatorTitle={'Добавление правила'}\r\n            updaterTitle={'Изменение правила'}\r\n            formInputsConfig={rulesInputConfig}\r\n            creatorInitialFormValues={{\r\n                header: '',\r\n                text: ''}}\r\n            updaterInitialFormValues={{\r\n                header: ruleById?.header,\r\n                text: ruleById?.text,\r\n            }}\r\n            getDataFunc={getRule}\r\n            valueById={ruleById}\r\n            getByIdFunc={getRuleById}\r\n            createFunc={createRule}\r\n            updateFunc={updateRule}\r\n            deleteFunc={deleteRule}\r\n            isLoading={ruleFetchLoader}\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        rules: state.rules.rules,\r\n        ruleById: state.rules.ruleById,\r\n        ruleFetchLoader: state.rules.ruleFetchLoader\r\n    }\r\n}\r\nexport  default connect(mapStateToProps,\r\n    {\r\n        getRule,\r\n        getRuleById,\r\n        createRule,\r\n        updateRule,\r\n        deleteRule,\r\n    }\r\n)(RulesPage)\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Modals\\Modal.jsx",["386","387","388"],"import React, {useEffect, useState} from 'react'\r\nimport './Modal.css'\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\nimport {Redirect, withRouter} from \"react-router-dom\";\r\n\r\n\r\nconst Modal = ({modal,toggleModal,history,isLoading})=>{\r\n    const handleConfirm = ()=>{\r\n        if(modal.confirmFunc) {\r\n           modal.confirmFunc()\r\n        }\r\n        toggleModal({isOpen: false, title: ''})\r\n        history.push(modal.urlToTable)\r\n    }\r\n\r\n    return(\r\n\r\n        <>\r\n        <div className='modal__wrapper' onClick={()=>toggleModal({isOpen:false,title:''})}>\r\n        </div>\r\n            <div className='modal__container'>\r\n            <h2>{modal.title}</h2>\r\n\r\n                    <div className='modal__btns'>\r\n                        <div className='modal__btns-confirm' onClick={() => handleConfirm()}>Да</div>\r\n                        <div className='modal__btns-cancel' onClick={() => toggleModal({\r\n                            isOpen: false,\r\n                            title: ''\r\n                        })}>Нет\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        modal : state.modal.isOpenModal\r\n    }\r\n}\r\nexport default connect(mapStateToProps,{toggleModal})(withRouter(Modal));","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\pages\\CategoriesPage\\CategoriesPage.jsx",["389"],"import React, {useEffect} from 'react'\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {CategoryColumns} from \"../../configs/Categories/tableColumnsConfig\";\r\nimport PageRenderer from \"../../components/PageRenderer/PageRendererContainer\";\r\nimport {categoryInputConfig} from \"../../configs/Categories/formInputsConfig\";\r\nimport {\r\n    clearCategory,\r\n    createCategory,\r\n    deleteCategory,\r\n    getCategory,\r\n    getCategoryById,\r\n    updateCategory\r\n} from \"../../redux/reducers/categoryReducer\";\r\n\r\n\r\n\r\n\r\nconst CategoriesPage = ({categoryFetchLoader,categories=[],categoryById,getCategory,getCategoryById,createCategory,updateCategory,deleteCategory,clearCategory})=>{\r\n    return(\r\n        <PageRenderer\r\n            pageUrl ={'admin/categories'}\r\n            pageTitle ={'Категории'}\r\n\r\n            tableData={categories}\r\n            tableColumnsConfig={CategoryColumns}\r\n\r\n           // recordViewTitlesConfig={recordViewCategoryConfig}\r\n\r\n            creatorTitle={'Добавление категории'}\r\n            updaterTitle={'Изменение категории'}\r\n           formInputsConfig={categoryInputConfig}\r\n            creatorInitialFormValues={{\r\n                name: '',\r\n                subcategories: []}}\r\n            updaterInitialFormValues={{\r\n                name: categoryById?.name,\r\n                subcategories: categoryById?.subcategories,\r\n            }}\r\n            getDataFunc={getCategory}\r\n            valueById={categoryById}\r\n            getByIdFunc={getCategoryById}\r\n            createFunc={createCategory}\r\n            updateFunc={updateCategory}\r\n            clearFunc={clearCategory}\r\n            deleteFunc={deleteCategory}\r\n            isLoading={categoryFetchLoader}\r\n\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        categories: state.category.categories,\r\n        categoryById: state.category.categoryById,\r\n        categoryFetchLoader : state.category.categoryFetchLoader\r\n    }\r\n}\r\nexport  default connect(mapStateToProps,\r\n    {\r\n        getCategory,\r\n        getCategoryById,\r\n        createCategory,\r\n        updateCategory,\r\n        deleteCategory,\r\n        clearCategory\r\n    }\r\n)(CategoriesPage)\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Sidebar\\SidebarList.jsx",["390","391"],"import React, {useEffect, useState} from 'react'\r\nimport './Sidebar.css'\r\nimport SidebarItem from \"./SidebarItem\";\r\nimport {sideBarConfig} from \"./sideBarConfig\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport {logoSVG} from \"../../assets\";\r\n\r\nconst SidebarList  = (props)=>{\r\n\r\n    const elements = sideBarConfig.map((item,index)=>{\r\n        return(\r\n            <SidebarItem\r\n                key={index}\r\n                id={index}\r\n                to={item.to}\r\n                name={item.name}\r\n            />\r\n        )\r\n    })\r\n    return(\r\n        <div className='sidebar__container'>\r\n            <div className=\"sidebar__logo-container\">\r\n            <Link to={'/admin/main'}><img  className='sidebar__logo' src={logoSVG} alt=\"\"/></Link>\r\n            </div>\r\n            <ul className='sidebar'>\r\n                {elements}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(SidebarList)","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\types.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\categoryReducer.js",["392"],"import {\r\n    WRITE_CATEGORIES,\r\n    WRITE_CATEGORY_BY_ID,\r\n    ADDED_CATEGORY,\r\n    DELETED_CATEGORY,\r\n    UPDATED_CATEGORY,\r\n    WRITE_SUBCATEGORIES, USER_TOGGLE_FETCH_LOADER, CATEGORY_TOGGLE_FETCH_LOADER\r\n} from './types'\r\nimport {\r\n    categoryDelReq,\r\n   categoryGetByIdReq,\r\n    categoryGetReq,\r\n    categoryPostReq,\r\n    categoryUpdReq,\r\n    subcategoryGetReq\r\n} from \"../../utils/Requests\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\n\r\nconst initialState={\r\n    categories: [],\r\n    categoryById: {},\r\n    subcategories: [],\r\n    categoryFetchLoader: false\r\n}\r\n\r\n\r\nexport const categoryReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case CATEGORY_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                categoryFetchLoader: action.payload\r\n            }\r\n        case WRITE_CATEGORIES:\r\n            return{\r\n                ...state,\r\n                categories: action.payload\r\n            }\r\n        case WRITE_SUBCATEGORIES:\r\n            return {\r\n                ...state,\r\n                subcategories: action.payload\r\n            }\r\n        case WRITE_CATEGORY_BY_ID:\r\n            return{\r\n                ...state,\r\n                categoryById: action.payload\r\n            }\r\n        case ADDED_CATEGORY:\r\n            return {\r\n                ...state,\r\n                categories: [\r\n                    ...state.categories,\r\n                    action.payload]\r\n            }\r\n        case DELETED_CATEGORY:\r\n            return{\r\n                ...state,\r\n                categories: updateItemInStore(state.categories,action.payload,'delete')\r\n            }\r\n        case UPDATED_CATEGORY:\r\n            return {\r\n                ...state,\r\n                categories: updateItemInStore(state.categories,action.payload,'update')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const categoryToggleLoader = bool=>{\r\n    return{\r\n        type: 'CATEGORY_TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const clearCategory = ()=>{\r\n    return{\r\n        type: WRITE_CATEGORY_BY_ID,\r\n        action: {}\r\n    }\r\n}\r\nexport const getSubCategories = ()=>{\r\n    return async dispatch =>getTemplate(dispatch,subcategoryGetReq,WRITE_SUBCATEGORIES,categoryToggleLoader)\r\n}\r\nexport const getCategory = ()=> {\r\n    return async dispatch => getTemplate(dispatch, categoryGetReq, WRITE_CATEGORIES, categoryToggleLoader)\r\n}\r\nexport const getCategoryById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, categoryGetByIdReq, WRITE_CATEGORY_BY_ID, categoryToggleLoader,id)\r\n}\r\nexport const createCategory = data=>{\r\n\r\n        return async dispatch => createOrChangeTemplate(dispatch,categoryPostReq,data,ADDED_CATEGORY,categoryToggleLoader)\r\n}\r\nexport const deleteCategory = id =>{\r\n    return async dispatch =>  deleteTemplate(dispatch,categoryDelReq,id,categoryToggleLoader,DELETED_CATEGORY)\r\n}\r\nexport const updateCategory = (id,data) =>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,categoryUpdReq,data,UPDATED_CATEGORY,categoryToggleLoader,id)\r\n}\r\n\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\tableReducer.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\qasReducer.js",["393"],"import {\r\n    WRITE_QAS,\r\n    WRITE_QAS_BY_ID,\r\n    ADDED_QAS,\r\n    DELETED_QAS,\r\n    UPDATED_QAS, SPECIALIST_TOGGLE_FETCH_LOADER, QAS_TOGGLE_FETCH_LOADER,\r\n} from './types'\r\nimport {\r\n    qasDelReq,\r\n    qasGetByIdReq,\r\n    qasGetReq,\r\n    qasPostReq,\r\n    qasUpdReq,\r\n} from \"../../utils/Requests\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\n\r\nconst initialState={\r\n    qas: [],\r\n    qasById: {},\r\n    qasFetchLoader: false\r\n\r\n}\r\n\r\n\r\nexport const qasReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case QAS_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                qasFetchLoader: action.payload\r\n            }\r\n        case WRITE_QAS:\r\n            return{\r\n                ...state,\r\n                qas: action.payload\r\n            }\r\n\r\n        case WRITE_QAS_BY_ID:\r\n            return{\r\n                ...state,\r\n                qasById: action.payload\r\n            }\r\n        case ADDED_QAS:\r\n            return {\r\n                ...state,\r\n                qas: [\r\n                    ...state.qas,\r\n                    action.payload]\r\n            }\r\n        case DELETED_QAS:\r\n            return{\r\n                ...state,\r\n                qas: updateItemInStore(state.qas,action.payload,'delete')\r\n            }\r\n        case UPDATED_QAS:\r\n            return {\r\n                ...state,\r\n                qas: updateItemInStore(state.qas,action.payload,'update')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const qasToggleLoader = bool=>{\r\n    return{\r\n        type: 'QAS_TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const clearQas = ()=>{\r\n    return{\r\n        type: WRITE_QAS_BY_ID,\r\n        action: {}\r\n    }\r\n}\r\n\r\nexport const getQas = ()=> {\r\n    return async dispatch => getTemplate(dispatch, qasGetReq, WRITE_QAS, qasToggleLoader)\r\n}\r\nexport const getQasById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, qasGetByIdReq, WRITE_QAS_BY_ID, qasToggleLoader,id)\r\n}\r\nexport const createQas = data=>{\r\n\r\n    return async dispatch => createOrChangeTemplate(dispatch,qasPostReq,data,ADDED_QAS,qasToggleLoader)\r\n}\r\nexport const deleteQas = id =>{\r\n    return async dispatch =>  deleteTemplate(dispatch,qasDelReq,id,qasToggleLoader,DELETED_QAS)\r\n}\r\nexport const updateQas = (id,data) =>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,qasUpdReq,data,UPDATED_QAS,qasToggleLoader,id)\r\n}\r\n\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\ruleReducer.js",["394","395","396"],"import {\r\n    WRITE_RULE,\r\n    WRITE_RULE_BY_ID,\r\n    ADDED_RULE,\r\n    DELETED_RULE,\r\n    UPDATED_RULE, WRITE_QAS_BY_ID, QAS_TOGGLE_FETCH_LOADER, RULE_TOGGLE_FETCH_LOADER,\r\n} from './types'\r\nimport {\r\n    ruleDelReq,\r\n    ruleGetByIdReq,\r\n    ruleGetReq,\r\n    rulePostReq,\r\n    ruleUpdReq,\r\n} from \"../../utils/Requests\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {toggleLoader} from \"./authReducer\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\n\r\nconst initialState={\r\n    rules: [],\r\n    ruleById: {},\r\n    ruleFetchLoader: false\r\n}\r\n\r\n\r\nexport const ruleReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case RULE_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                ruleFetchLoader: action.payload\r\n            }\r\n        case WRITE_RULE:\r\n            return{\r\n                ...state,\r\n                rules: action.payload\r\n            }\r\n\r\n        case WRITE_RULE_BY_ID:\r\n            return{\r\n                ...state,\r\n                ruleById: action.payload\r\n            }\r\n        case ADDED_RULE:\r\n            return {\r\n                ...state,\r\n                rules: [\r\n                    ...state.rules,\r\n                    action.payload]\r\n            }\r\n        case DELETED_RULE:\r\n            return{\r\n                ...state,\r\n                rules: updateItemInStore(state.rules,action.payload,'delete')\r\n            }\r\n        case UPDATED_RULE:\r\n            return {\r\n                ...state,\r\n                rules: updateItemInStore(state.rules,action.payload,'update')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const ruleToggleLoader = bool=>{\r\n    return{\r\n        type: 'RULE_TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\n\r\n\r\nexport const clearRule = ()=>{\r\n    return{\r\n        type: WRITE_RULE_BY_ID,\r\n        action: {}\r\n    }\r\n}\r\n\r\nexport const getRule = ()=> {\r\n    return async dispatch => getTemplate(dispatch, ruleGetReq, WRITE_RULE, ruleToggleLoader)\r\n}\r\nexport const getRuleById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, ruleGetByIdReq, WRITE_RULE_BY_ID, ruleToggleLoader,id)\r\n}\r\nexport const createRule = data=>{\r\n\r\n    return async dispatch => createOrChangeTemplate(dispatch,rulePostReq,data,ADDED_RULE,ruleToggleLoader)\r\n}\r\nexport const deleteRule = id =>{\r\n    return async dispatch =>  deleteTemplate(dispatch,ruleDelReq,id,ruleToggleLoader,DELETED_RULE)\r\n}\r\nexport const updateRule = (id,data) =>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,ruleUpdReq,data,UPDATED_RULE,ruleToggleLoader,id)\r\n}\r\n\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\aboutReducer.js",["397","398"],"import {\r\n    WRITE_ABOUT,\r\n    WRITE_ABOUT_BY_ID,\r\n    ADDED_ABOUT,\r\n    DELETED_ABOUT,\r\n    UPDATED_ABOUT, AUTH_TOGGLE_FETCH_LOADER, ABOUT_TOGGLE_FETCH_LOADER,\r\n} from './types'\r\nimport {\r\n    aboutDelReq,aboutGetByIdReq,\r\n    aboutGetReq,\r\n    aboutPostReq,\r\n    aboutUpdReq,\r\n} from \"../../utils/Requests\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {toggleLoader} from \"./authReducer\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\n\r\nconst initialState={\r\n    about: [],\r\n    aboutById: {},\r\n    aboutFetchLoader: false,\r\n}\r\n\r\n\r\nexport const aboutReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case ABOUT_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                aboutFetchLoader: action.payload\r\n            }\r\n        case WRITE_ABOUT:\r\n            return{\r\n                ...state,\r\n                about: action.payload\r\n            }\r\n\r\n        case WRITE_ABOUT_BY_ID:\r\n            return{\r\n                ...state,\r\n                aboutById: action.payload\r\n            }\r\n        case ADDED_ABOUT:\r\n            return {\r\n                ...state,\r\n                about: [\r\n                    ...state.about,\r\n                    action.payload]\r\n            }\r\n        case DELETED_ABOUT:\r\n            return{\r\n                ...state,\r\n                about: updateItemInStore(state.about,action.payload,'delete')\r\n            }\r\n        case UPDATED_ABOUT:\r\n            return {\r\n                ...state,\r\n                about: updateItemInStore(state.about,action.payload,'update')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const aboutToggleLoader = bool=>{\r\n    return{\r\n        type: 'ABOUT_TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const clearAbout = ()=>{\r\n    return{\r\n        type: WRITE_ABOUT_BY_ID,\r\n        action: {}\r\n    }\r\n}\r\n\r\nexport const getAbout = ()=> {\r\n    return async dispatch => getTemplate(dispatch, aboutGetReq, WRITE_ABOUT, aboutToggleLoader)\r\n}\r\nexport const getAboutById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch, aboutGetByIdReq, WRITE_ABOUT_BY_ID, aboutToggleLoader,id)\r\n}\r\nexport const createAbout = data=>{\r\n\r\n    return async dispatch => createOrChangeTemplate(dispatch,aboutPostReq,data,ADDED_ABOUT,aboutToggleLoader)\r\n}\r\nexport const deleteAbout = id =>{\r\n    return async dispatch =>  deleteTemplate(dispatch,aboutDelReq,id,aboutToggleLoader,DELETED_ABOUT)\r\n}\r\nexport const updateAbout = (id,data) =>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,aboutUpdReq,data,UPDATED_ABOUT,aboutToggleLoader,id)\r\n}\r\n\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\instructionReducer.js",["399","400","401"],"import {\r\n    WRITE_INSTRUCTION,\r\n    ADDED_INSTRUCTION, AUTH_TOGGLE_FETCH_LOADER, INSTRUCTION_TOGGLE_FETCH_LOADER, WRITE_CATEGORY_BY_ID,\r\n} from './types'\r\nimport {\r\n    instructionGetReq,\r\n    instructionPostReq,\r\n} from \"../../utils/Requests\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {toClearImageArray} from \"../../utils/toClearImageArray\";\r\n\r\nconst initialState={\r\n    instruction: [],\r\n    instructionFetchLoader: false,\r\n}\r\n\r\n\r\nexport const instructionReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case INSTRUCTION_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                instructionFetchLoader: action.payload\r\n            }\r\n        case WRITE_INSTRUCTION:\r\n            return{\r\n                ...state,\r\n                instruction: action.payload\r\n            }\r\n\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const instructionToggleLoader = bool=>{\r\n    return{\r\n        type: 'INSTRUCTION_TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\n\r\nexport const clearInstruction = ()=>{\r\n    return{\r\n        type: WRITE_INSTRUCTION,\r\n        action: []\r\n    }\r\n}\r\n\r\nexport const getInstruction = ()=> {\r\n    return async dispatch => getTemplate(dispatch, instructionGetReq, WRITE_INSTRUCTION, instructionToggleLoader)\r\n}\r\nexport const createInstruction = data=>{\r\n\r\n    let formData = new FormData()\r\n    formData.append('file', toClearImageArray(data.file));\r\n    for (let pair of formData.entries()) {\r\n        console.log(pair[0]+ ', ' + pair[1]);\r\n    }\r\n    return async dispatch => {\r\n        dispatch(instructionToggleLoader(true))\r\n        await instructionPostReq(formData)\r\n        dispatch(instructionToggleLoader(false))\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\specialistReducer.js",["402","403"],"import {\r\n    WRITE_SPECIALISTS,\r\n    WRITE_SPECIALIST_BY_ID,\r\n    ADDED_SPECIALIST,\r\n    DELETED_SPECIALIST,\r\n    UPDATED_SPECIALIST, SPECIALIST_TOGGLE_FETCH_LOADER,\r\n} from './types'\r\nimport {\r\n    specialistDelReq,\r\n    specialistGetByIdReq,\r\n    specialistGetReq,\r\n    specialistPostReq,\r\n    specialistUpdReq\r\n} from \"../../utils/Requests\";\r\nimport {getTemplate} from \"../../utils/templates/getTemplate\";\r\nimport {createOrChangeTemplate} from \"../../utils/templates/createOrChangeTemplate\";\r\nimport {deleteTemplate} from \"../../utils/templates/deleteTemplate\";\r\nimport {updateItemInStore} from \"../../utils/templates/updateItemInStore\";\r\nimport {toClearImageArray} from \"../../utils/toClearImageArray\";\r\n\r\nconst initialState={\r\n    specialists: [],\r\n    specialistById: {},\r\n    specialistFetchLoader: false\r\n}\r\n\r\n\r\nexport const specialistReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case SPECIALIST_TOGGLE_FETCH_LOADER:\r\n            return{\r\n                ...state,\r\n                specialistFetchLoader: action.payload\r\n            }\r\n        case WRITE_SPECIALISTS:\r\n            return{\r\n                ...state,\r\n                specialists: action.payload\r\n            }\r\n        case WRITE_SPECIALIST_BY_ID:\r\n            return{\r\n                ...state,\r\n                specialistById: action.payload\r\n            }\r\n        case ADDED_SPECIALIST:\r\n            return {\r\n                ...state,\r\n                specialists: [\r\n                    ...state.specialists,\r\n                    action.payload]\r\n            }\r\n        case DELETED_SPECIALIST:\r\n            return{\r\n                ...state,\r\n                specialists: updateItemInStore(state.specialists,action.payload,'delete')\r\n            }\r\n        case UPDATED_SPECIALIST:\r\n            return {\r\n                ...state,\r\n                specialists: updateItemInStore(state.specialists,action.payload,'update')\r\n            }\r\n        default:{\r\n            return{\r\n                ...state\r\n            }\r\n        }\r\n    }\r\n}\r\nexport const specialistToggleLoader = bool=>{\r\n    return{\r\n        type: 'SPECIALIST_TOGGLE_FETCH_LOADER',\r\n        payload: bool\r\n    }\r\n}\r\nexport const clearSpecialist = ()=>{\r\n    return{\r\n        type: WRITE_SPECIALIST_BY_ID,\r\n        action: {}\r\n    }\r\n}\r\n\r\nexport const getSpecialists = ()=> {\r\n    return async dispatch => getTemplate(dispatch, specialistGetReq, WRITE_SPECIALISTS, specialistToggleLoader)\r\n}\r\nexport const getSpecialistById = (id)=> {\r\n    return async dispatch => getTemplate(dispatch,specialistGetByIdReq, WRITE_SPECIALIST_BY_ID, specialistToggleLoader,id)\r\n}\r\nexport const createSpecialist = data=>{\r\n    let formData = new FormData()\r\n    // toClearImageArray(data.photosForm).map(item=>{\r\n    //     formData.append('photosForm', item);\r\n    // })\r\n    // formData.append('avatar', toClearImageArray(data.avatar));\r\n   const newData = {\r\n       subcategoryID: data.subcategory,\r\n       type:data.type,\r\n       viezd: data.viezd,\r\n       name: data.name,\r\n       description: data.description,\r\n       street: data.street.street,\r\n       addressComment: data.street.addressComment,\r\n       cityID:  data.cityID,\r\n       latitude: data.street.latitude,\r\n       longitude: data.street.longitude,\r\n       url: data.email,\r\n       links: {\r\n           phone: data.phone,\r\n           webSite: data.webSite,\r\n           whatsApp: data.whatsApp,\r\n           facebook: data.facebook,\r\n           telegram: data.telegram,\r\n           instagram: data.instagram,\r\n           email: data.email\r\n       },\r\n       services:data.services,\r\n       ///modes: data.modes\r\n   }\r\n    return async dispatch => {\r\n        dispatch(specialistToggleLoader(true))\r\n        await specialistPostReq(newData).then(response=>{\r\n            console.log(response)\r\n        })\r\n        dispatch(specialistToggleLoader(false))\r\n    }\r\n\r\n}\r\nexport const deleteSpecialist = id =>{\r\n    return async dispatch =>  deleteTemplate(dispatch,specialistDelReq,id,specialistToggleLoader,DELETED_SPECIALIST)\r\n}\r\nexport const updateSpecialist = (id,data) =>{\r\n    return async dispatch => createOrChangeTemplate(dispatch,specialistUpdReq,data,UPDATED_SPECIALIST,specialistToggleLoader,id)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\mainReducer.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Auth\\AuthContainer.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\utils\\Requests.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\utils\\toClearImageArray.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\utils\\templates\\deleteTemplate.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\utils\\templates\\updateItemInStore.js",["404"],"export const updateItemInStore = (state,data,type)=>{\r\n    let idx = -1;\r\n    let newArrayData = [...state]\r\n    switch (type) {\r\n        case 'delete':\r\n            data.map(mapItem=>{\r\n                idx = newArrayData.findIndex((item)=>item.key === parseInt(mapItem))\r\n                newArrayData = [...newArrayData.slice(0, idx), ...newArrayData.slice(idx + 1)]\r\n            })\r\n            return newArrayData\r\n        case 'update':\r\n            idx = state.findIndex(item=>item.id === parseInt(data.id))\r\n            return [...newArrayData.slice(0, idx),data, ...newArrayData.slice(idx + 1)]\r\n        default:{\r\n            return\r\n        }\r\n    }\r\n}","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\utils\\templates\\createOrChangeTemplate.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\assets\\index.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Statisctic\\StatisticBlock.js",["405","406"],"import React, {useEffect} from 'react'\r\nimport {refreshSVG} from '../../assets/'\r\nimport mapStateToProps from \"react-redux/lib/connect/mapStateToProps\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatistic} from \"../../redux/reducers/mainReducer\";\r\nimport './StatisticBlock.css'\r\n\r\n\r\n\r\nconst StatisticBlock = props =>{\r\nuseEffect(()=>{\r\n    props.getStatistic()\r\n},[])\r\n    return(\r\n        <div className={'statContainer'}>\r\n            <div className={'statistic'}>\r\n                <img src={props.img} alt=\"\"/>\r\n                <div className=\"statisticBlock\">\r\n                    <h2>{props.title}</h2>\r\n                    <span>{props.data}</span>\r\n                </div>\r\n            </div>\r\n            <div className={'refreshBtn'} onClick={()=>props.getStatistic()}><img src={refreshSVG} alt=\"\"/>Обновить</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null,{getStatistic})(StatisticBlock)","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Advertisements\\formInputsConfig.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Users\\formInputsConfig.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Main\\tableColumnsConfig.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\About\\tableColumnsConfig.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Advertisements\\tableColumnsConfig.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Users\\tableColumnsConfig.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\About\\formInputsConfig.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Qas\\formInputsConfig.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Rules\\tableColumnsConfig.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Rules\\formInputsConfig.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Qas\\tableColumnsConfig.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Instruction\\formInputsConfig.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\redux\\reducers\\modalReducer.jsx",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\utils\\templates\\getTemplate.jsx",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Sidebar\\sideBarConfig.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Categories\\formInputsConfig.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\configs\\Categories\\tableColumnsConfig.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\PageRenderer\\PageRendererContainer.jsx",["407","408","409","410","411","412"],"import React, {useEffect, useRef, useState} from 'react'\r\n\r\nimport {Link, Route, Switch, withRouter} from \"react-router-dom\";\r\n\r\n\r\nimport FormContainer from \"../FormGenerator/FormContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport TableContainer from \"../Table/TableContainer\";\r\nimport AddBtn from \"../Btns/AddBtn\";\r\nimport {avatarPNG} from \"../../assets\";\r\nimport DeleteBtn from \"../Btns/DeleteBtn\";\r\nimport SearchContainer from \"../SearchGenerator/SearchContainer\";\r\nimport {imageRouter} from \"../../utils/imageRouter\";\r\n\r\n\r\n\r\n\r\nconst PageRenderer = ({\r\n    history,\r\n    pageUrl,\r\n    pageTitle,\r\n\r\n    tableData,\r\n    tableColumnsConfig,\r\n\r\n    recordViewTitlesConfig,\r\n\r\n    creatorTitle,\r\n    updaterTitle,\r\n    formInputsConfig,\r\n    searchInputsConfig,\r\n    loadSelectorData,\r\n    optionsForSelectorData,\r\n    creatorInitialFormValues,\r\n    updaterInitialFormValues,\r\n    fileUploadKeys,\r\n\r\n    getDataFunc,\r\n    valueById,\r\n    getByIdFunc,\r\n    createFunc,\r\n    updateFunc,\r\n    clearFunc,\r\n    deleteFunc,\r\n\r\n    isLoading,\r\n\r\n    table=true,\r\n    adding=true,\r\n    editing=true,\r\n    deleting=true,\r\n\r\n    title=false,\r\n\r\n    username\r\n                      })=>{\r\n    return(\r\n        <>\r\n            <a href=\"https://naidi.kg\"  target={'_blank'} className = 'page-content__open-site'>Открыть сайт</a>\r\n            <div className = 'page-content__profile'><span>{username.name}</span> <img src={imageRouter(username.avatarPath)} alt=\"\"/></div>\r\n            {title &&<span className='page-content__title'>{pageTitle}</span>}\r\n            <Switch>\r\n                        <Route exact path={`/${pageUrl}`}>\r\n                            <span className='page-content__title'>{pageTitle}</span>\r\n                            <AddBtn\r\n                                urlToCreate={`/${pageUrl}/${pageUrl}-creator`}\r\n                            />\r\n                            {searchInputsConfig &&\r\n                            <SearchContainer\r\n                                searchInputsConfig={searchInputsConfig}\r\n                            />\r\n                            }\r\n                            {table &&\r\n                            <TableContainer\r\n                                isLoading={isLoading}\r\n                                getDataFunc={getDataFunc}\r\n                                data={tableData}\r\n                                columns={tableColumnsConfig}\r\n                                urlToUpd={`/${pageUrl}/${pageUrl}-updater`}\r\n\r\n                                //  handlerClick={clickOnRecord}\r\n                                deleting={deleting}\r\n                            />\r\n                            }\r\n                            {deleting &&\r\n                            <DeleteBtn\r\n                                deleteFunc = {deleteFunc}\r\n                            />}\r\n                        </Route>\r\n                        {adding &&\r\n                        <Route exact path={`/${pageUrl}/${pageUrl}-creator`}>\r\n                            <FormContainer\r\n                                loadSelectorData={loadSelectorData}\r\n                                urlToTable={`/${pageUrl}`}\r\n                                createReq={createFunc}\r\n                                formTitle={creatorTitle}\r\n                                inputConfig={formInputsConfig}\r\n                                optionsForSelector={optionsForSelectorData}\r\n                                initialVals={creatorInitialFormValues}\r\n                                fileUploadKeys={fileUploadKeys}\r\n                                isLoading={isLoading}\r\n                                clearFunc = {clearFunc}\r\n                            />\r\n                        </Route>\r\n                        }\r\n                        {editing &&\r\n                        <Route exact path={`/${pageUrl}/${pageUrl}-updater/:id`}>\r\n                            <FormContainer\r\n                                loadSelectorData={loadSelectorData}\r\n                                getByIdFunc={getByIdFunc}\r\n                                valueById={valueById}\r\n                                urlToTable={`/${pageUrl}`}\r\n                                initialVals={updaterInitialFormValues}\r\n                                updReq={updateFunc}\r\n                                formTitle={updaterTitle}\r\n                                inputConfig={formInputsConfig}\r\n                                optionsForSelector={optionsForSelectorData}\r\n                                isLoading={isLoading}\r\n                                clearFunc = {clearFunc}\r\n                            />\r\n                        </Route>\r\n                        }\r\n                    </Switch>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        username: state.auth.username\r\n    }\r\n}\r\nexport default\r\n    connect(mapStateToProps)(withRouter(\r\n    PageRenderer\r\n    ))","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\FormGenerator\\FormContainer.jsx",["413","414"],"import React, {useEffect, useState} from 'react'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Former from \"./Former\";\r\nimport './Form.css'\r\nimport Preloader from \"../Preloader/Preloader\";\r\nconst FormContainer = ({\r\n                           createReq,\r\n                           updReq,\r\n                           match,\r\n                           isLoading,\r\n                           ...props})=>{\r\n    useEffect(()=>{\r\n        if(props.loadSelectorData) {\r\n            for(let i=0;i<props.loadSelectorData.length;i++){\r\n                props.loadSelectorData[i]()\r\n            }\r\n        }\r\n        if(match.params?.id )  {\r\n            props.getByIdFunc(match.params.id)\r\n        }\r\n        return ()=>props.clearFunc()\r\n    },[])\r\n\r\n    const handleSubmit = async values=>{\r\n        if(match.params?.id){\r\n            await updReq(match.params.id,values)\r\n        }else {\r\n            await  createReq(values)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n       !isLoading\r\n           ?\r\n            <Former handleSubmit={handleSubmit}  {...props}/>\r\n           : <Preloader />\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(FormContainer)","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Table\\TableContainer.jsx",["415","416","417","418","419","420","421"],"import React, {useEffect, useState} from 'react'\r\nimport { Table, Switch, Radio, Form, Space } from 'antd';\r\n//import 'antd/dist/antd.css';\r\nimport './Table.css'\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {connect, useSelector} from \"react-redux\";\r\nimport {writeElementsToDelete, writeTableMessage} from \"../../redux/reducers/tableReducer\";\r\n\r\nconst TableContainer = ({editing=true,...props})=>{\r\n    useEffect(()=>{\r\n        if(props.getDataFunc) {\r\n            props.getDataFunc()\r\n        }\r\n        return () => writeElementsToDelete([])\r\n    },[])\r\n\r\n\r\n    const rowSelection = {\r\n        onChange: (selectedRowKeys, selectedRows) => props.writeElementsToDelete(selectedRowKeys),\r\n    };\r\n    // const [clickedRow,setClickedRow] = useState(undefined)\r\n    // console.log(clickedRow)\r\n    //\r\n    // useEffect(()=>{\r\n    //\r\n    // },[clickedRow])\r\n    return(\r\n        <Table\r\n            onRow={ (record, rowIndex) => {\r\n                return {\r\n                onClick: event =>editing && props.history.push(`${props.urlToUpd}/${record.key}`), // click row\r\n                onDoubleClick: event => {}, // double click row\r\n                onContextMenu: event => {}, // right button click row\r\n                onMouseEnter: event => {}, // mouse enter row\r\n                onMouseLeave: event => {}, // mouse leave row\r\n            }\r\n            }}\r\n            rowSelection={props.deleting ? { ...rowSelection } : undefined}\r\n            tableLayout={'fixed'}\r\n            pagination={{ position:'BottomCenter' }}\r\n            columns={props.columns}\r\n            dataSource={  props.data  }\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        elementsToDelete : state.table.elementsToDelete\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{writeElementsToDelete,writeTableMessage})(withRouter(TableContainer))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Sidebar\\SidebarItem.jsx",["422"],"import React, {useEffect, useState} from 'react'\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport classNames from 'classnames'\r\n\r\n\r\nconst SidebarItem = ({to,name,\r\n\r\n                         id,\r\n                         history,\r\n    ...props\r\n})=>{\r\n    const [clicked,setClick] = useState(false)\r\n    const activeRoute =()=>history.location.pathname.indexOf(to) > -1\r\n    useEffect(()=>{\r\n        if(activeRoute()){\r\n            return setClick(true)\r\n        }\r\n        return setClick(false)\r\n    },[history.location.pathname])\r\n    const classes = classNames({\r\n        'sidebar__item' : !clicked,\r\n        'sidebar__item_active' : clicked\r\n    })\r\n    return(\r\n        <li className={classes}><Link onClick={()=>setClick(true)} to={to}>{name}</Link></li>\r\n    )\r\n}\r\n\r\nexport default withRouter(SidebarItem)","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\URLField\\URLField.jsx",["423"],"import React from 'react'\r\nimport {Field} from \"formik\";\r\nimport {urlSVG} from \"../../../assets\";\r\nimport {Link} from \"react-router-dom\";\r\nimport './URLField.css'\r\n\r\n\r\nconst URLField = props=>{\r\n    return(\r\n        <div className={'urlField'}>\r\n            <input name={props.name} value={props.value} placeholder={props.placeholder} onChange={(e)=>props.setFieldValue(props.name,e.target.value)}/>\r\n            <Link to={props.value} target=\"_blank\">\r\n                <img src={urlSVG} alt=\"\"/>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default URLField","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Auth\\AuthForm.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\utils\\toBeautifyValue.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\utils\\imageRouter.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Preloader\\Preloader.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\FormGenerator\\Former.jsx",["424","425"],"import React from 'react'\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport FormInput from \"./FormInput\";\r\nimport {validationGenerator} from \"./validationGenerator\";\r\nimport EditBtn from \"../Btns/EditBtn\";\r\nimport CancelBtn from \"../Btns/CancelBtn\";\r\n\r\n\r\n\r\n\r\nconst Former = (props)=>{\r\n    const inputs = ()=>{\r\n        let result=[]\r\n        const initValsKeys =  Object.keys(props.initialVals)\r\n        for(let i=0;i<initValsKeys.length;i++){\r\n            for(let j=0;j<props.inputConfig.length;j++){\r\n                if(initValsKeys[i]===props.inputConfig[j]?.key){\r\n                    result.push(<FormInput\r\n                        key={initValsKeys[i]}\r\n                        name={initValsKeys[i]}\r\n                        placeholder={props.inputConfig[j]?.placeholder}\r\n                        label={props.inputConfig[j]?.label}\r\n                        labelObject={props.inputConfig[j]?.labelObject}\r\n                        radioLabel={props.inputConfig[j]?.radioLabel}\r\n                        type={props.inputConfig[j]?.type}\r\n                        imageCount={props.inputConfig[j]?.imageCount}\r\n                        additionally={props.inputConfig[j]?.additionally}\r\n                        iconInput={props.inputConfig[j]?.iconInput}\r\n                        required={props.inputConfig[j]?.required}\r\n                        selectInputData={props.inputConfig[j]?.selectInputData}\r\n                        options={props.optionsForSelector}\r\n                        selectorProperty={props.inputConfig[j]?.selectorProperty}\r\n                        styles={props.inputConfig[j]?.fieldStyles}\r\n                        objectTemplate={props.inputConfig[j]?.objectTemplate}\r\n                        objectTemplateStyles={props.inputConfig[j]?.objectTemplateStyles}\r\n                        fileTypes={props.inputConfig[j]?.fileTypes}\r\n                    />)\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    const styledInputs = (inputs)=>{\r\n        let result = []\r\n        for (let i=0;i<inputs.length; i++){\r\n            let inp=[]\r\n            if(props.inputConfig[i]?.parentBlock === 'open') {\r\n                for (let j=i;j<inputs.length;j++) {\r\n                    inp.push(inputs[j])\r\n                     if(props.inputConfig[j]?.parentBlock === 'close'){\r\n                         i=j\r\n                        break\r\n                    }\r\n                }\r\n               result.push(<div className={'createOrEditContainer__block'} style={props.inputConfig[i]?.blockStyles}>{inp}</div>)\r\n            }else {result.push(inputs[i])}\r\n        }\r\n        return result\r\n    }\r\n    const array= Object.keys(props.initialVals)\r\n    const schema = validationGenerator(array,props.inputConfig)\r\n    return(\r\n        <>\r\n            {props.formTitle &&\r\n            <div className={'createOrEditContainer__title'}>\r\n                <h2>{props.formTitle}</h2>\r\n            </div>\r\n            }\r\n        <div className='createOrEditContainer'>\r\n\r\n            <Formik\r\n                initialValues={props.initialVals}\r\n                validationSchema={Yup.object(schema)}\r\n                onSubmit={ async (values,e)=>{\r\n                    await props.handleSubmit(values)\r\n                }}\r\n            >\r\n                {({handleSubmit,errors,values}) =>{\r\n                    return (\r\n                        <Form>\r\n                            <div className={\"createOrEditContainer__fields\"}>\r\n                                {styledInputs(inputs())}\r\n\r\n                            </div>\r\n\r\n                            <div className={\"createOrEditContainer__btns\"}>\r\n                                <EditBtn\r\n                                    values = {values}\r\n                                    urlToTable={props.urlToTable}\r\n                                    confirmFunc={handleSubmit}\r\n                                    disabled={Object.keys(errors).length !== 0 && true}\r\n                                />\r\n\r\n                                <CancelBtn\r\n                                    urlToTable={props.urlToTable}\r\n                                />\r\n                            </div>\r\n                        </Form>\r\n                    )}}\r\n\r\n            </Formik>\r\n        </div>\r\n            </>\r\n    )\r\n}\r\nexport default Former\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Btns\\DeleteBtn.jsx",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\SearchGenerator\\SearchContainer.jsx",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Btns\\AddBtn.jsx",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Modals\\ErrorMessage.jsx",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\PasswordInput\\PasswordInput.jsx",["426","427"],"import React, {useState} from 'react'\r\nimport {Field, Form} from \"formik\";\r\n//import {checkPasSVG} from \"../../../assets/icons\";\r\n\r\n\r\nconst PasswordInput = ({name,setFieldValue,placeholder})=>{\r\n    const [visiblePassword, setVisiblePassword]  = useState(false);\r\n    const onChange = (value)=>setFieldValue(name,value)\r\n        return(\r\n            <div className={'passwordInput'}>\r\n                <input type={visiblePassword? 'text' : 'password'}  placeholder={placeholder} name={name} onChange={e=>onChange(e.target.value)}/>\r\n            <img  alt=\"\"\r\n                 onClick={()=>setVisiblePassword(!visiblePassword)}/>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default  PasswordInput","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\FormGenerator\\validationGenerator.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Btns\\EditBtn.jsx",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\FormGenerator\\FormInput.jsx",["428","429"],"import React, {useEffect} from 'react'\r\nimport {ErrorMessage, Field, FieldArray, Form} from \"formik\";\r\nimport ArrayField from \"../Fields/ArrayField/ArrayField\";\r\nimport RadioGroup from \"../Fields/RadioGroup/RadioGroup\";\r\nimport ImgUploader from \"../Fields/ImgUploader/ImgUploader\";\r\nimport URLField from \"../Fields/URLField/URLField\";\r\nimport FieldWithIcon from \"../Fields/FieldWithIcon/FieldWithIcon\";\r\nimport MapBlock from \"../Fields/MapBlock/MapBlock\";\r\nimport ScheduleField from \"../Fields/ScheduleField/ScheduleField\";\r\nimport TextEditor from \"../Fields/TextEditor/TextEditor\";\r\nimport FileInput from \"../Fields/FileInput/FileInput\";\r\nimport CalendarInput from \"../Fields/CalendarInput/CalendarInput\";\r\n\r\n\r\n\r\nconst FormInput = ({\r\n                name,\r\n                label,\r\n                labelObject,\r\n                placeholder,\r\n                type='',\r\n                imageCount,\r\n                styles,\r\n                selectInputData=[],\r\n                selectorProperty='',\r\n                additionally,\r\n                iconInput,\r\n                radioLabel,\r\n                required,\r\n                options=[],\r\n                objectTemplate,\r\n                objectTemplateStyles\r\n                   })=>{\r\n    return(\r\n        <div className=\"createOrEditField\" style={styles ? styles : undefined} >\r\n            {additionally &&   <span className={'formTitle'}>{additionally}</span>}\r\n            <label htmlFor={name}>{label} {required && <span className={'required_field'}>*</span>}</label>\r\n\r\n\r\n\r\n\r\n            { type === 'array' ?\r\n                    <FieldArray\r\n                    name={name}>\r\n                        { (arrayHelpers) => <ArrayField\r\n                            placeholder={placeholder}\r\n                            name={name}\r\n                            arrayHelpers={arrayHelpers}\r\n                            labelObject={labelObject}\r\n                            objectTemplate={objectTemplate}\r\n                            objectTemplateStyles={objectTemplateStyles}\r\n                        />}\r\n                    </FieldArray>\r\n\r\n            : type === 'radio' ?\r\n                    <Field name={name} >\r\n                        {({field:{name,value},form: { setFieldValue}}) =><RadioGroup setFieldValue={setFieldValue}\r\n                                                                                     value={value}\r\n                                                                                     name={name}\r\n                                                                                     label={radioLabel}/>}\r\n                    </Field>\r\n                    : type==='textarea' ?\r\n                        <Field name={name} as={'textarea'} placeholder={placeholder} />\r\n                : type==='selector' ?\r\n                <Field name={name} as={'select'} placeholder={placeholder} >\r\n\r\n                {options[selectorProperty].map(item=> {\r\n                    return (\r\n                        <option key={item.id} value={item.id}>{item?.name ? item.name : item.fullName}</option>\r\n                    )})\r\n                }\r\n                </Field>\r\n                : type==='image' ?\r\n                <Field name={name} >\r\n                {({field:{name,value},form: { setFieldValue}}) =><ImgUploader setFieldValue={setFieldValue}\r\n                                                                              placeholder={placeholder}\r\n                                                                              imageCount={imageCount}\r\n                                                                              value={value}\r\n                                                                              name={name}/>}\r\n                </Field>\r\n                : type==='url' ?\r\n                                    <Field name={name} >\r\n                                        {({field:{name,value},form: { setFieldValue}}) => <URLField value= {value}\r\n                                                                                                    name={name}\r\n                                                                                                    placeholder={placeholder}\r\n                                                                                                    setFieldValue={setFieldValue}\r\n                                        />}\r\n                                    </Field>\r\n                : type ==='withIcon' ?\r\n                <Field name={name}>\r\n                    {({field:{name,value},form: { setFieldValue}}) =><FieldWithIcon setFieldValue={setFieldValue}\r\n                                                                                    value={value}\r\n                                                                              iconInput={iconInput}\r\n                                                                                  name={name}/>}\r\n                </Field>\r\n                :type==='map'?\r\n                <Field name={name}>\r\n                    {({field:{name,value},form: { setFieldValue}}) => <MapBlock setFieldValue={setFieldValue}\r\n                                                                          placeholder={placeholder}\r\n                                                                          name={name}\r\n                                                                                value={value}\r\n                                                                            />}\r\n                </Field>\r\n                :type==='schedule'?\r\n                <Field\r\n                    name={name}>\r\n                    {({field:{name,value},form: { setFieldValue}}) =>\r\n                        <ScheduleField\r\n                            placeholder={placeholder}\r\n                            name={name}\r\n                            value={value}\r\n                            setFieldValue={setFieldValue}\r\n                        />\r\n                    }\r\n                </Field>\r\n                :type==='textEditor' ?\r\n                    <Field\r\n                        name={name}>\r\n                        {({field: {name, value}, form: {setFieldValue}}) =>\r\n                            <TextEditor\r\n                                placeholder={placeholder}\r\n                                name={name}\r\n                                value={value}\r\n                                setFieldValue={setFieldValue}\r\n                            />\r\n                        }\r\n                    </Field>\r\n                 :type==='file'?\r\n            <Field name={name}>\r\n                {({field: {name, value}, form: {setFieldValue}}) =>\r\n                    <FileInput\r\n                        placeholder={placeholder}\r\n                        name={name}\r\n                        value={value}\r\n                        setFieldValue={setFieldValue}\r\n                    />\r\n                }\r\n            </Field>\r\n\r\n            :type==='calendar'?\r\n                <Field name={name}>\r\n                    {({field: {name, value}, form: {setFieldValue}}) =>\r\n                        <CalendarInput\r\n                            placeholder={placeholder}\r\n                            name={name}\r\n                            value={value}\r\n                            setFieldValue={setFieldValue}\r\n                        />\r\n                    }\r\n                </Field>\r\n                :\r\n                <Field name={name} placeholder={placeholder}/>\r\n\r\n            }\r\n            <span  className='formErrorMessage'><ErrorMessage name={name}/></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormInput\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Btns\\CancelBtn.jsx",["430"],"import React from 'react'\r\nimport {Form} from \"formik\";\r\nimport {connect} from \"react-redux\";\r\nimport {toggleModal} from \"../../redux/reducers/modalReducer\";\r\n\r\n\r\n\r\nconst CancelBtn = ({toggleModal,urlToTable})=>{\r\n    return(\r\n        <div className='createOrEditBtn-cancel'\r\n                onClick={()=>toggleModal({\r\n                    isOpen:true,\r\n                    title:'Вы действительно хотите\\n' +\r\n                        'отменить изменения?',\r\n                    urlToTable: urlToTable})}\r\n              >\r\n        Отмена\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default\r\nconnect(null,{toggleModal})\r\n(CancelBtn)","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\SearchGenerator\\SearchForm.jsx",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\FileInput\\FileInput.js",["431"],"import React, {useEffect, useState} from 'react'\r\nimport './FileInput.css'\r\n\r\nconst FileInput = props=>{\r\nconst [file,setFile] = useState(props.value ? props.value : [])\r\n    const [typeError,setTypeError] = useState(false)\r\n    const loadHandler = (f)=>{\r\n    if(f[0].type === \"application/pdf\"){\r\n      return  setFile(f)\r\n    }\r\n    return setTypeError(true)\r\n    }\r\n    useEffect(()=>{\r\n       props.setFieldValue(props.name,file)\r\n    },[file])\r\n    return(\r\n        <div >\r\n            <label className=\"custom-file-upload\" onClick={()=>setTypeError(false)}>\r\n                {file[0]?.name ? file[0].name : props.placeholder}\r\n                <input type=\"file\" name={props.name}  onChange={(e)=>loadHandler(e.target.files)} />\r\n                <div className={'custom-file-btn'}>Выбрать</div>\r\n            </label>\r\n            {typeError && <span className='formErrorMessage'>Можно загружать файлы только  в pdf формате</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileInput","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\CalendarInput\\CalendarInput.js",["432"],"import React, {useEffect, useState} from 'react'\r\nimport Calendar from 'react-calendar';\r\nimport moment from 'moment'\r\nimport 'react-calendar/dist/Calendar.css';\r\nimport './CalendarInput.css'\r\n\r\nconst CalendarInput = props=>{\r\n    const [isOpen,setIsOpen] = useState(false)\r\n    const [date,setDate] = useState(props.value )\r\n    console.log(moment(props.value).valueOf())\r\n    console.log(props.value)\r\n    useEffect(()=>{\r\n       props.setFieldValue(props.name,moment(date).format())\r\n    },[date])\r\n    return(\r\n<>\r\n\r\n        <input type=\"text\" value={moment(props.value).add(365, 'day').format('LL')} name={props.name} readOnly onClick={()=>setIsOpen(true)}/>\r\n    {isOpen &&\r\n        <>\r\n    <div className=\"calendar-wrapper\" value={moment(props.value).valueOf()} onClick={()=>setIsOpen(false)}></div>\r\n    <div style={{zIndex: 1001}}>\r\n        <Calendar value={date} onChange={setDate}/>\r\n\r\n    </div>\r\n            </>\r\n            }\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default CalendarInput","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\SearchGenerator\\SearchInputs.jsx",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\TextEditor\\TextEditor.js",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\ScheduleField\\ScheduleField.jsx",["433","434"],"import React, {useEffect, useState} from 'react'\r\nimport './ScheduleField.css'\r\nimport {Field} from \"formik\";\r\nimport ScheduleItem from \"./ScheduleItem\";\r\n\r\n\r\nconst ScheduleField = props=>{\r\n    const daysArray = ['Понедельник',\"Вторник\",\"Среда\",\"Четверг\",\"Пятница\", \"Суббота\", \"Воскресенье\"]\r\n    const createInitialData = ()=>{\r\n        let resultData=[]\r\n        for (let i = 0; i < 7; i++) {\r\n            resultData.push({\r\n                fromHour: 0,\r\n                fromMinute: 0,\r\n                toHour: 0,\r\n                toMinute: 0,\r\n                day: i,\r\n                checked: false\r\n            })\r\n        }\r\n        return resultData\r\n    }\r\n    const [data,setData] = useState(props.value?.length ? props.value : createInitialData())\r\n    useEffect(()=>{\r\n        props.setFieldValue(props.name,data)\r\n    },[data])\r\n    const changeDataHandler = (id,changedData)=>{\r\n        let newData=[]\r\n        const index = data.findIndex((el) => el.day === id);\r\n        if(changedData.checked) {\r\n            if(index!==-1) {\r\n                newData = [...data.slice(0, index), changedData, ...data.slice(index + 1)];\r\n            }else{\r\n                newData = [...data, changedData];\r\n            }\r\n        }else{\r\n            newData = [\r\n                ...data.slice(0, index),\r\n                ...data.slice(index + 1)\r\n            ];\r\n        }\r\n        return setData(newData)\r\n    }\r\n    const elements= data.map((item,index)=><ScheduleItem key={index}\r\n                                      id={index}\r\n                                      data={item}\r\n                                      dayName={daysArray[item.day]}\r\n                                      changeDataHandler={changeDataHandler}\r\n            />)\r\n    return(\r\n        <div>\r\n            {elements}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ScheduleField","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\MapBlock\\MapBlock.jsx",["435","436","437","438"],"import React, {useEffect, useState} from 'react'\r\nimport {GeolocationControl, Map, Placemark, SearchControl, YMaps} from \"react-yandex-maps\";\r\nimport './MapBlock.css'\r\n\r\n\r\n\r\n\r\nconst MapBlock = props=> {\r\n\r\n    const [center, setCenter] = useState(props.value?.longitude && props.value?.latitude ? [props.value.longitude, props.value.latitude]: [42.8746, 74.5698])\r\n    const ymaps = React.useRef(null);\r\n    const placemarkRef = React.useRef(null);\r\n    const mapRef = React.useRef(null);\r\n    const [address, setAddress] = React.useState(props.value?.street ? props.value.street : '');\r\n    const [addressComment, setAddressComment] = React.useState(props.value?.addressComment? props.value.addressComment : '');\r\n\r\n    const createPlacemark = (coords) => {\r\n\r\n            return new ymaps.current.Placemark(\r\n                coords,\r\n                {\r\n                    iconCaption: \"Секунду...\"\r\n                },\r\n                {\r\n                    preset: \"islands#violetDotIconWithCaption\",\r\n                    draggable: false\r\n                }\r\n            );\r\n\r\n    };\r\n\r\n    useEffect(()=>{\r\n        props.setFieldValue(props.name,{\r\n            street: address,\r\n            addressComment: addressComment,\r\n            latitude: center[0],\r\n            longitude: center[1]\r\n        })\r\n    },[address,addressComment])\r\n    const getAddress = (coords) => {\r\n        setCenter(coords)\r\n        placemarkRef.current.properties.set(\"iconCaption\", \"Секунду...\");\r\n        ymaps.current.geocode(coords).then((res) => {\r\n            const firstGeoObject = res.geoObjects.get(0);\r\n            setAddress(firstGeoObject.getAddressLine());\r\n            placemarkRef.current.properties.set({\r\n                iconCaption: firstGeoObject.getAddressLine(),\r\n                balloonContent: firstGeoObject.getAddressLine()\r\n            });\r\n        });\r\n    };\r\n\r\n    const onMapClick = (e) => {\r\n        const coords = e.get(\"coords\");\r\n\r\n        if (placemarkRef.current) {\r\n            placemarkRef.current.geometry.setCoordinates(coords);\r\n        } else {\r\n            placemarkRef.current = createPlacemark(coords);\r\n            mapRef.current.geoObjects.add(placemarkRef.current);\r\n        }\r\n        getAddress(coords);\r\n    };\r\n\r\n    return (\r\n        <div className={'mapField'}>\r\n            <label htmlFor={props.name}>{props.placeholder}</label>\r\n            <label htmlFor=\"addressComment\" className={'addressComment-label'}>Комментарии к адресу</label>\r\n            <div className={'mapField__InputBlock'}>\r\n                    <input type=\"text\" name={props.name} value={address} readOnly/>\r\n                    <input type=\"text\" name={'addressComment'}  onChange={(e)=>setAddressComment(e.target.value)} value={addressComment} placeholder={'Введите уточнение (5 этаж...)'}/>\r\n            </div>\r\n\r\n            <YMaps enterprise query={{apikey: \"1a9e7380-7d7d-47a9-bdb3-eb90e115a1a3\"}}>\r\n                <div className={'map-container'}>\r\n                <Map\r\n                    modules={[\"Placemark\", \"geocode\", \"geoObject.addon.balloon\"]}\r\n                    instanceRef={mapRef}\r\n                    onLoad={(ympasInstance) => (ymaps.current = ympasInstance)}\r\n                    onClick={onMapClick}\r\n                    defaultState={{\r\n                        center: [42.8746, 74.5698],\r\n                        zoom: 16\r\n                    }}\r\n                    style={{width:'100%',height:'100%',position:'absolute'}}\r\n                />\r\n                </div>\r\n            </YMaps>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\nexport default MapBlock\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\FieldWithIcon\\FieldWithIcon.jsx",[],"C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\ScheduleField\\ScheduleItem.js",["439","440"],"import React, {useEffect, useState} from 'react'\r\nimport {Field} from \"formik\";\r\n\r\n\r\n\r\nconst ScheduleItem = ({id,dayName,changeDataHandler,data})=>{\r\n    const [checked,setChecked] = useState(!data?.checked && false)\r\n    const [fromHour,setFromHour] = useState(!data?.fromHour && '')\r\n    const [fromMinute,setFromMinute] = useState(!data?.fromMinute && '')\r\n    const [toHour,setToHour] = useState(!data?.toHour && '')\r\n    const [toMinute,setToMinute] = useState(!data?.toMinute && '')\r\n    useEffect(()=>{\r\n\r\n            changeDataHandler(id, {\r\n                fromHour: !parseInt(fromHour) && 0,\r\n                fromMinute: !parseInt(fromMinute) && 0,\r\n                toHour: !parseInt(toHour) && 0,\r\n                toMinute: !parseInt(toMinute) && 0,\r\n                day: id,\r\n                checked: checked\r\n            })\r\n\r\n    },[checked,fromHour,fromMinute,toHour,toMinute])\r\n    return(\r\n        <div  className={'schedule-item'}>\r\n            <input className={'schedule-item__day-checkbox'} type=\"checkbox\"  value={checked} onChange={()=>setChecked(!checked)}/>\r\n            <div className={'schedule-item__day'}>{dayName}</div>\r\n            <div className={'timeFrom'}>\r\n                <input  type=\"text\" value={fromHour} onChange={(e)=>setFromHour(e.target.value)}/>\r\n            <span>:</span>\r\n                <input  type=\"text\" value={fromMinute} onChange={(e)=>setFromMinute(e.target.value)}/> </div>\r\n            <span className={'schedule-item__divider'}>-</span>\r\n            <div className={'timeTo'} >\r\n                <input  type=\"text\" value={toHour} onChange={(e)=>setToHour(e.target.value)}/>\r\n                <span>:</span>\r\n                <input  type=\"text\" value={toMinute}  onChange={(e)=>setToMinute(e.target.value)}/> </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ScheduleItem","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\ArrayField\\ArrayField.js",["441"],"import React, {useState} from 'react'\r\nimport {Field} from \"formik\";\r\nimport {plusSVG, removeItemSVG} from '../../../assets/'\r\nimport './ArrayField.css'\r\n\r\n\r\n\r\n\r\nconst ArrayField = ({arrayHelpers,placeholder,name,labelObject={},objectTemplate,objectTemplateStyles={}})=>{\r\n    return(\r\n        <div className={'arrayField__container'}>\r\n            {arrayHelpers.form.values[name] &&\r\n            arrayHelpers.form.values[name].length > 0 && (\r\n                arrayHelpers.form.values[name].map((item, index) => {\r\n                    let result =[]\r\n                    if(typeof item ==='object'){\r\n                        for (let k in item) {\r\n                            for (let objectKey in objectTemplate) {\r\n                                if(objectKey===k) {\r\n                                    result.push(\r\n                                        <div key={`${name}.${index}.${k}`} className={'arrayField__item'}>\r\n                                            <label htmlFor={`${name}.${index}.${k}`}>{labelObject[k]}</label>\r\n                                            <Field name={`${name}.${index}.${k}`} style={objectTemplateStyles[k]}/>\r\n                                            {index === (arrayHelpers.form.values[name].length-1) && (\r\n                                                <>\r\n                                                <div\r\n                                                className={'arrayField__removeItemBtn'}\r\n                                                onClick={() => arrayHelpers.remove(index)} // remove a friend from the list\r\n                                            >\r\n                                                <img src={removeItemSVG} alt=\"\"/>\r\n                                            </div>\r\n                                                <div\r\n                                                className={'arrayField__plusItemBtn'}\r\n                                                onClick={() => arrayHelpers.insert(index+1,objectTemplate)} // remove a friend from the list\r\n                                                >\r\n                                                <img src={plusSVG} alt=\"\"/>\r\n                                                </div>\r\n                                                </>\r\n                                            )\r\n                                            }\r\n                                        </div>)\r\n                                }}\r\n                        }\r\n                        return result\r\n                    }\r\n                    return(\r\n\r\n                        <div key={`${name}.${index}`} className={'arrayField__item'}>\r\n                            <Field name={`${name}.${index}`}/>\r\n                            {index === (arrayHelpers.form.values[name].length-1) && (\r\n                                <>\r\n                            <div\r\n                                className={'arrayField__removeItemBtn'}\r\n                                onClick={() => arrayHelpers.remove(index)}>\r\n                                <img src={removeItemSVG} alt=\"\"/>\r\n                            </div>\r\n                            <div\r\n                                className={'arrayField__plusItemBtn'}\r\n                                onClick={() => arrayHelpers.insert(index+1,objectTemplate)}>\r\n                                <img src={plusSVG} alt=\"\"/>\r\n                            </div>\r\n                               </>\r\n                            )}\r\n                        </div>\r\n                    )})\r\n            )\r\n            }\r\n            {(arrayHelpers.form.values[name]?.length=== 0) &&\r\n            <div className={'arrayField__addItemBtn'} onClick={() => arrayHelpers.push(objectTemplate)}>\r\n                {placeholder}\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default ArrayField\r\n\r\n","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\ImgUploader\\ImgUploader.jsx",["442","443","444"],"import React, {useEffect, useState} from \"react\";\r\nimport './ImgUploader.css';\r\nimport ImageUploading from 'react-images-uploading';\r\nimport {addImageSVG, deleteImageSVG} from \"../../../assets\";\r\nimport {imageRouter} from \"../../../utils/imageRouter\";\r\n\r\n\r\nconst ImgUploader = ({setFieldValue,name,value,placeholder,imageCount=1,fileTypes=['jpg', 'gif', 'png','svg']})=>{\r\n\r\n\r\n\r\n\r\n\r\n    const [file,setFile] = useState([])\r\n\r\n    useEffect(()=>{\r\n            setFieldValue(name, file)\r\n    },[file])\r\n\r\n\r\n    const onChange = (fileList) => {\r\n        setFile(fileList);\r\n    }\r\n        return (\r\n\r\n            <ImageUploading\r\n                multiple\r\n                value={file}\r\n                onChange={onChange}\r\n                maxNumber={imageCount}\r\n                dataURLKey=\"data_url\"\r\n                acceptType={fileTypes}\r\n            >\r\n                {({\r\n                      onImageUpload,\r\n                      onImageRemoveAll,\r\n                      onImageUpdate,\r\n                      onImageRemove,\r\n                      isDragging,\r\n                      dragProps,\r\n                      errors\r\n                  }) => (\r\n                              imageCount===1 ?\r\n                            <div className=\"upload__image-wrapper\">\r\n                                {file.length===0 && <div\r\n                                    className={'upload__image-uploadBtn'}\r\n                                    style={isDragging ? {borderColor: '#009B00'} : undefined}\r\n                                    onClick={onImageUpload}\r\n                                    {...dragProps}\r\n                                >\r\n                                    Добавить фото пользователя\r\n                                </div>\r\n                                }\r\n                                {file.length!==0 &&\r\n                                <div className={'upload__image-container'}>\r\n\r\n                                    <div className=\"upload__image-item\">\r\n                                        <img src={file[0]?.data_url} alt=\"\"/>\r\n                                    </div>\r\n                                    <span className=\"update__image-item\" onClick={() => onImageUpdate(0)}>Изменить фото профиля</span>\r\n                                        <span className=\"update__image-item\" onClick={() => onImageRemove(0)}>Удалить фото профиля</span>\r\n                                </div>\r\n                                }\r\n                                {errors &&\r\n                                <>\r\n                                    {errors.maxNumber && <span className='formErrorMessage'>{`Максимальное количество фото - ${imageCount}`}</span>}\r\n                                    {errors.acceptType && <span className='formErrorMessage'>{`Этот тип файла не поддерживается. Загрузить можно (${fileTypes})`}</span>}\r\n                                </>\r\n                                }\r\n                            </div>\r\n                                  :\r\n\r\n                    <div className=\"upload__imageArray-wrapper\">\r\n\r\n                            {file.length!==0 ? (\r\n                                    <div className={'upload__imageArray-loaded-container'}>\r\n                                <div className={'upload__imageArray-container'}>\r\n                                {\r\n                                    file.map((image, index) => (\r\n                                        <div key={index} className=\"upload__imageArray-item\">\r\n                                            <img src={image['data_url'] ? image['data_url'] : image} alt=\"\"  />\r\n                                            <div className=\"image-itemArray__btn-wrapper\">\r\n                                                <span><img src={deleteImageSVG} onClick={() => onImageRemove(index)}/></span>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                                        {file.length<imageCount &&\r\n                                        (<div  className={'upload__imageArray-uploadBtn-loaded'} {...dragProps} onClick={onImageUpload}><img src={addImageSVG} alt=\"\"/></div>)}\r\n                                    </div>\r\n                                ) :\r\n                                ( <div\r\n                                    className={'upload__imageArray-uploadBtn-container'}\r\n                                    style={isDragging ? { borderColor: '#009B00' } : undefined}\r\n                                    onClick={onImageUpload}\r\n                                    {...dragProps}\r\n                                >Нажмите или перетащите файл, чтобы загрузить\r\n                                <div  className={'upload__imageArray-uploadBtn'}>Добавить фото</div>\r\n                                </div>)\r\n\r\n                            }\r\n\r\n\r\n                        {file.length!==0 && <div className={'upload__image-remove-allBtn'} onClick={onImageRemoveAll}>Удалить все файлы</div> }\r\n\r\n                        {errors &&\r\n                        <>\r\n                            {errors.maxNumber && <span className='formErrorMessage'>{`Максимальное количество фото - ${imageCount}`}</span>}\r\n                            {errors.acceptType && <span className='formErrorMessage'>{`Этот тип файла не поддерживается. Загрузить можно (${fileTypes})`}</span>}\r\n                        </>\r\n                        }\r\n                    </div>\r\n                )}\r\n            </ImageUploading>\r\n        )\r\n}\r\n\r\nexport default ImgUploader","C:\\Users\\Ars\\Desktop\\frontend-admin-panel\\src\\components\\Fields\\RadioGroup\\RadioGroup.jsx",["445"],"import React from 'react'\r\nimport {Field} from \"formik\";\r\n\r\n\r\n\r\n\r\nconst RadioGroup = props=>{\r\n\r\n    const elements = props.label.map((item,index)=>{\r\n        return(\r\n            <div className={'radio_group_field'}>\r\n                <input type=\"radio\" name={props.name} value={index} checked={props.value === index} onChange={()=>props.setFieldValue(props.name,index)} />\r\n            <label key={index} htmlFor={props.name}> {props.label[index]}</label>\r\n            </div>\r\n        )\r\n        })\r\n\r\n\r\n    return(\r\n        <div className={'radio_group_field-container'}>\r\n            {elements}\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default RadioGroup",{"ruleId":"446","replacedBy":"447"},{"ruleId":"448","replacedBy":"449"},{"ruleId":"450","severity":1,"message":"451","line":29,"column":7,"nodeType":"452","endLine":29,"endColumn":27,"suggestions":"453"},{"ruleId":"454","severity":1,"message":"455","line":4,"column":5,"nodeType":"456","messageId":"457","endLine":4,"endColumn":24},{"ruleId":"454","severity":1,"message":"458","line":1,"column":16,"nodeType":"456","messageId":"457","endLine":1,"endColumn":25},{"ruleId":"454","severity":1,"message":"458","line":1,"column":16,"nodeType":"456","messageId":"457","endLine":1,"endColumn":25},{"ruleId":"454","severity":1,"message":"459","line":2,"column":8,"nodeType":"456","messageId":"457","endLine":2,"endColumn":21},{"ruleId":"454","severity":1,"message":"458","line":1,"column":16,"nodeType":"456","messageId":"457","endLine":1,"endColumn":25},{"ruleId":"454","severity":1,"message":"460","line":9,"column":21,"nodeType":"456","messageId":"457","endLine":9,"endColumn":33},{"ruleId":"461","severity":1,"message":"462","line":22,"column":13,"nodeType":"463","endLine":22,"endColumn":97},{"ruleId":"454","severity":1,"message":"458","line":1,"column":16,"nodeType":"456","messageId":"457","endLine":1,"endColumn":25},{"ruleId":"454","severity":1,"message":"458","line":1,"column":16,"nodeType":"456","messageId":"457","endLine":1,"endColumn":25},{"ruleId":"454","severity":1,"message":"458","line":1,"column":16,"nodeType":"456","messageId":"457","endLine":1,"endColumn":25},{"ruleId":"454","severity":1,"message":"458","line":1,"column":16,"nodeType":"456","messageId":"457","endLine":1,"endColumn":25},{"ruleId":"454","severity":1,"message":"464","line":1,"column":27,"nodeType":"456","messageId":"457","endLine":1,"endColumn":35},{"ruleId":"454","severity":1,"message":"465","line":5,"column":9,"nodeType":"456","messageId":"457","endLine":5,"endColumn":17},{"ruleId":"454","severity":1,"message":"458","line":1,"column":16,"nodeType":"456","messageId":"457","endLine":1,"endColumn":25},{"ruleId":"454","severity":1,"message":"458","line":1,"column":16,"nodeType":"456","messageId":"457","endLine":1,"endColumn":25},{"ruleId":"454","severity":1,"message":"464","line":1,"column":27,"nodeType":"456","messageId":"457","endLine":1,"endColumn":35},{"ruleId":"454","severity":1,"message":"466","line":7,"column":26,"nodeType":"456","messageId":"457","endLine":7,"endColumn":50},{"ruleId":"454","severity":1,"message":"467","line":6,"column":18,"nodeType":"456","messageId":"457","endLine":6,"endColumn":48},{"ruleId":"454","severity":1,"message":"468","line":6,"column":19,"nodeType":"456","messageId":"457","endLine":6,"endColumn":34},{"ruleId":"454","severity":1,"message":"469","line":6,"column":36,"nodeType":"456","messageId":"457","endLine":6,"endColumn":59},{"ruleId":"454","severity":1,"message":"470","line":18,"column":9,"nodeType":"456","messageId":"457","endLine":18,"endColumn":21},{"ruleId":"454","severity":1,"message":"471","line":6,"column":20,"nodeType":"456","messageId":"457","endLine":6,"endColumn":44},{"ruleId":"454","severity":1,"message":"470","line":17,"column":9,"nodeType":"456","messageId":"457","endLine":17,"endColumn":21},{"ruleId":"454","severity":1,"message":"472","line":3,"column":5,"nodeType":"456","messageId":"457","endLine":3,"endColumn":22},{"ruleId":"454","severity":1,"message":"471","line":3,"column":24,"nodeType":"456","messageId":"457","endLine":3,"endColumn":48},{"ruleId":"454","severity":1,"message":"473","line":3,"column":83,"nodeType":"456","messageId":"457","endLine":3,"endColumn":103},{"ruleId":"454","severity":1,"message":"474","line":19,"column":9,"nodeType":"456","messageId":"457","endLine":19,"endColumn":26},{"ruleId":"454","severity":1,"message":"475","line":89,"column":9,"nodeType":"456","messageId":"457","endLine":89,"endColumn":17},{"ruleId":"476","severity":1,"message":"477","line":6,"column":29,"nodeType":"478","messageId":"479","endLine":6,"endColumn":31},{"ruleId":"454","severity":1,"message":"480","line":3,"column":8,"nodeType":"456","messageId":"457","endLine":3,"endColumn":23},{"ruleId":"450","severity":1,"message":"451","line":13,"column":3,"nodeType":"452","endLine":13,"endColumn":5,"suggestions":"481"},{"ruleId":"454","severity":1,"message":"458","line":1,"column":16,"nodeType":"456","messageId":"457","endLine":1,"endColumn":25},{"ruleId":"454","severity":1,"message":"482","line":1,"column":27,"nodeType":"456","messageId":"457","endLine":1,"endColumn":33},{"ruleId":"454","severity":1,"message":"464","line":1,"column":35,"nodeType":"456","messageId":"457","endLine":1,"endColumn":43},{"ruleId":"454","severity":1,"message":"483","line":3,"column":9,"nodeType":"456","messageId":"457","endLine":3,"endColumn":13},{"ruleId":"454","severity":1,"message":"484","line":10,"column":9,"nodeType":"456","messageId":"457","endLine":10,"endColumn":18},{"ruleId":"461","severity":1,"message":"462","line":59,"column":13,"nodeType":"463","endLine":59,"endColumn":97},{"ruleId":"454","severity":1,"message":"464","line":1,"column":27,"nodeType":"456","messageId":"457","endLine":1,"endColumn":35},{"ruleId":"450","severity":1,"message":"485","line":22,"column":7,"nodeType":"452","endLine":22,"endColumn":9,"suggestions":"486"},{"ruleId":"454","severity":1,"message":"464","line":1,"column":27,"nodeType":"456","messageId":"457","endLine":1,"endColumn":35},{"ruleId":"454","severity":1,"message":"487","line":2,"column":17,"nodeType":"456","messageId":"457","endLine":2,"endColumn":23},{"ruleId":"454","severity":1,"message":"488","line":2,"column":25,"nodeType":"456","messageId":"457","endLine":2,"endColumn":30},{"ruleId":"454","severity":1,"message":"489","line":2,"column":32,"nodeType":"456","messageId":"457","endLine":2,"endColumn":36},{"ruleId":"454","severity":1,"message":"490","line":2,"column":38,"nodeType":"456","messageId":"457","endLine":2,"endColumn":43},{"ruleId":"454","severity":1,"message":"491","line":6,"column":18,"nodeType":"456","messageId":"457","endLine":6,"endColumn":29},{"ruleId":"450","severity":1,"message":"451","line":15,"column":7,"nodeType":"452","endLine":15,"endColumn":9,"suggestions":"492"},{"ruleId":"450","severity":1,"message":"493","line":19,"column":7,"nodeType":"452","endLine":19,"endColumn":34,"suggestions":"494"},{"ruleId":"454","severity":1,"message":"495","line":2,"column":9,"nodeType":"456","messageId":"457","endLine":2,"endColumn":14},{"ruleId":"454","severity":1,"message":"496","line":2,"column":9,"nodeType":"456","messageId":"457","endLine":2,"endColumn":21},{"ruleId":"454","severity":1,"message":"495","line":2,"column":23,"nodeType":"456","messageId":"457","endLine":2,"endColumn":28},{"ruleId":"454","severity":1,"message":"495","line":2,"column":9,"nodeType":"456","messageId":"457","endLine":2,"endColumn":14},{"ruleId":"454","severity":1,"message":"489","line":2,"column":16,"nodeType":"456","messageId":"457","endLine":2,"endColumn":20},{"ruleId":"454","severity":1,"message":"458","line":1,"column":16,"nodeType":"456","messageId":"457","endLine":1,"endColumn":25},{"ruleId":"454","severity":1,"message":"489","line":2,"column":42,"nodeType":"456","messageId":"457","endLine":2,"endColumn":46},{"ruleId":"454","severity":1,"message":"489","line":2,"column":9,"nodeType":"456","messageId":"457","endLine":2,"endColumn":13},{"ruleId":"450","severity":1,"message":"451","line":15,"column":7,"nodeType":"452","endLine":15,"endColumn":13,"suggestions":"497"},{"ruleId":"450","severity":1,"message":"451","line":14,"column":7,"nodeType":"452","endLine":14,"endColumn":13,"suggestions":"498"},{"ruleId":"454","severity":1,"message":"495","line":3,"column":9,"nodeType":"456","messageId":"457","endLine":3,"endColumn":14},{"ruleId":"450","severity":1,"message":"451","line":26,"column":7,"nodeType":"452","endLine":26,"endColumn":13,"suggestions":"499"},{"ruleId":"454","severity":1,"message":"500","line":2,"column":9,"nodeType":"456","messageId":"457","endLine":2,"endColumn":27},{"ruleId":"454","severity":1,"message":"501","line":2,"column":34,"nodeType":"456","messageId":"457","endLine":2,"endColumn":43},{"ruleId":"454","severity":1,"message":"502","line":2,"column":45,"nodeType":"456","messageId":"457","endLine":2,"endColumn":58},{"ruleId":"450","severity":1,"message":"503","line":39,"column":7,"nodeType":"452","endLine":39,"endColumn":31,"suggestions":"504"},{"ruleId":"454","severity":1,"message":"495","line":2,"column":9,"nodeType":"456","messageId":"457","endLine":2,"endColumn":14},{"ruleId":"450","severity":1,"message":"505","line":23,"column":7,"nodeType":"452","endLine":23,"endColumn":52,"suggestions":"506"},{"ruleId":"454","severity":1,"message":"464","line":1,"column":16,"nodeType":"456","messageId":"457","endLine":1,"endColumn":24},{"ruleId":"454","severity":1,"message":"507","line":5,"column":9,"nodeType":"456","messageId":"457","endLine":5,"endColumn":20},{"ruleId":"450","severity":1,"message":"508","line":18,"column":7,"nodeType":"452","endLine":18,"endColumn":13,"suggestions":"509"},{"ruleId":"510","severity":1,"message":"511","line":83,"column":55,"nodeType":"463","endLine":83,"endColumn":119},{"ruleId":"454","severity":1,"message":"495","line":2,"column":9,"nodeType":"456","messageId":"457","endLine":2,"endColumn":14},"no-native-reassign",["512"],"no-negated-in-lhs",["513"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["514"],"no-unused-vars","'TOGGLE_FETCH_LOADER' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'FormContainer' is defined but never used.","'getStatistic' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'useState' is defined but never used.","'Redirect' is defined but never used.","'USER_TOGGLE_FETCH_LOADER' is defined but never used.","'SPECIALIST_TOGGLE_FETCH_LOADER' is defined but never used.","'WRITE_QAS_BY_ID' is defined but never used.","'QAS_TOGGLE_FETCH_LOADER' is defined but never used.","'toggleLoader' is defined but never used.","'AUTH_TOGGLE_FETCH_LOADER' is defined but never used.","'ADDED_INSTRUCTION' is defined but never used.","'WRITE_CATEGORY_BY_ID' is defined but never used.","'toClearImageArray' is defined but never used.","'formData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'mapStateToProps' is defined but never used.",["515"],"'useRef' is defined but never used.","'Link' is defined but never used.","'avatarPNG' is defined but never used.","React Hook useEffect has missing dependencies: 'match.params.id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["516"],"'Switch' is defined but never used.","'Radio' is defined but never used.","'Form' is defined but never used.","'Space' is defined but never used.","'useSelector' is defined but never used.",["517"],"React Hook useEffect has a missing dependency: 'activeRoute'. Either include it or remove the dependency array.",["518"],"'Field' is defined but never used.","'ErrorMessage' is defined but never used.",["519"],["520"],["521"],"'GeolocationControl' is defined but never used.","'Placemark' is defined but never used.","'SearchControl' is defined but never used.","React Hook useEffect has missing dependencies: 'center' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["522"],"React Hook useEffect has missing dependencies: 'changeDataHandler' and 'id'. Either include them or remove the dependency array. If 'changeDataHandler' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["523"],"'imageRouter' is defined but never used.","React Hook useEffect has missing dependencies: 'name' and 'setFieldValue'. Either include them or remove the dependency array. If 'setFieldValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["524"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"529","fix":"530"},{"desc":"527","fix":"531"},{"desc":"532","fix":"533"},{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"544","fix":"545"},"Update the dependencies array to be: [props, props.isAuthorized]",{"range":"546","text":"547"},"Update the dependencies array to be: [props]",{"range":"548","text":"549"},"Update the dependencies array to be: [match.params.id, props]",{"range":"550","text":"551"},{"range":"552","text":"549"},"Update the dependencies array to be: [activeRoute, history.location.pathname]",{"range":"553","text":"554"},"Update the dependencies array to be: [file, props]",{"range":"555","text":"556"},"Update the dependencies array to be: [date, props]",{"range":"557","text":"558"},"Update the dependencies array to be: [data, props]",{"range":"559","text":"560"},"Update the dependencies array to be: [address, addressComment, center, props]",{"range":"561","text":"562"},"Update the dependencies array to be: [changeDataHandler, checked, fromHour, fromMinute, id, toHour, toMinute]",{"range":"563","text":"564"},"Update the dependencies array to be: [file, name, setFieldValue]",{"range":"565","text":"566"},[1171,1191],"[props, props.isAuthorized]",[372,374],"[props]",[745,747],"[match.params.id, props]",[560,562],[515,542],"[activeRoute, history.location.pathname]",[442,448],"[file, props]",[493,499],"[date, props]",[833,839],"[data, props]",[1315,1339],"[address, addressComment, center, props]",[846,891],"[changeDataHandler, checked, fromHour, fromMinute, id, toHour, toMinute]",[492,498],"[file, name, setFieldValue]"]